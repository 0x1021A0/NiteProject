
build/kernel/Video/VideoPresenterImpl.o:     file format elf64-x86-64


Disassembly of section .group:

0000000000000000 <.group>:
Video::VideoPresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }

    void VideoPresenter::Clear()
    {

    }
   0:	01 00                	add    %eax,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	06                   	(bad)  
   5:	00 00                	add    %al,(%rax)
   7:	00 07                	add    %al,(%rdi)
   9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .text:

0000000000000000 <Video::VideoPresenter::Clear()>:
   0:	c3                   	ret    
   1:	90                   	nop
   2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   9:	00 00 00 00 
   d:	0f 1f 00             	nopl   (%rax)

0000000000000010 <Video::VideoPresenter::Text(Video::Point, char const*, int)>:
Video::VideoPresenter::Text(Video::Point, char const*, int):
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23

    void VideoPresenter::Text(Point point, const char *text, int fontSize)
    {

    }
  10:	c3                   	ret    
  11:	90                   	nop
  12:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  19:	00 00 00 00 
  1d:	0f 1f 00             	nopl   (%rax)

0000000000000020 <Video::VideoPresenter::Rectangle(Video::Point, int, int)>:
Video::VideoPresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:28

    void VideoPresenter::Rectangle(Point point, int width, int height)
    {

    }
  20:	c3                   	ret    
  21:	90                   	nop
  22:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  29:	00 00 00 00 
  2d:	0f 1f 00             	nopl   (%rax)

0000000000000030 <Video::VideoPresenter::VideoPresenter()>:
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
    VideoPresenter::VideoPresenter()
  30:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  37:	00 00 00 
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:28
class LinkedList
{
public:
    LinkedList()
    {
        m_Front = NULL;
  3a:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  41:	00 
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
  42:	48 89 07             	mov    %rax,(%rdi)
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:29
        m_Back = NULL;
  45:	48 c7 47 10 00 00 00 	movq   $0x0,0x10(%rdi)
  4c:	00 
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:30
        m_Count = 0;
  4d:	c7 47 18 00 00 00 00 	movl   $0x0,0x18(%rdi)
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:31
        m_Lock.m_Lock = 0;
  54:	c7 47 1c 00 00 00 00 	movl   $0x0,0x1c(%rdi)
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:8
    }
  5b:	c3                   	ret    
  5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000060 <Video::VideoPresenter::~VideoPresenter()>:
Video::VideoPresenter::~VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:10
    VideoPresenter::~VideoPresenter()
  60:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  67:	00 00 00 
  6a:	48 89 07             	mov    %rax,(%rdi)
Spinlock::Release():
/home/umarin/source/niteOS/Kernel/include/Utils/Spinlock.h:59
typedef class Spinlock
{
public:
    volatile int m_Lock;
    void Acquire() { acquireLock(&m_Lock); }
    void Release() { releaseLock(&m_Lock); }
  6d:	c7 47 1c 00 00 00 00 	movl   $0x0,0x1c(%rdi)
Video::VideoPresenter::~VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:13
    }
  74:	c3                   	ret    

Disassembly of section .rodata._ZTVN5Video14VideoPresenterE:

0000000000000000 <vtable for Video::VideoPresenter>:
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
Video::VideoPresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }
   0:	9e                   	sahf   
   1:	07                   	(bad)  
   2:	00 00                	add    %al,(%rax)
   4:	05 00 01 08 00       	add    $0x80100,%eax
   9:	00 00                	add    %al,(%rax)
   b:	00 1c 00             	add    %bl,(%rax,%rax,1)
   e:	00 00                	add    %al,(%rax)
Video::VideoPresenter::Text(Video::Point, char const*, int):
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23
    }
  10:	00 21                	add    %ah,(%rcx)
	...
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:28
    }
  22:	75 00                	jne    24 <.debug_info+0x24>
	...
  2c:	00 00                	add    %al,(%rax)
  2e:	1d 04 05 69 6e       	sbb    $0x6e690504,%eax
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
    VideoPresenter::VideoPresenter()
  33:	74 00                	je     35 <.debug_info+0x35>
  35:	1e                   	(bad)  
  36:	2e 00 00             	cs add %al,(%rax)
  39:	00 06                	add    %al,(%rsi)
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:28
        m_Front = NULL;
  3b:	2e 00 00             	cs add %al,(%rax)
  3e:	00 10                	add    %dl,(%rax)
  40:	00 00                	add    %al,(%rax)
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
  42:	00 00                	add    %al,(%rax)
  44:	04 03                	add    $0x3,%al
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:29
        m_Back = NULL;
  46:	36 0f 8c 00 00 00 11 	ss jl  1100004d <Video::VideoPresenter::~VideoPresenter()+0x10ffffed>
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:30
        m_Count = 0;
  4d:	00 00                	add    %al,(%rax)
  4f:	00 00                	add    %al,(%rax)
  51:	03 39                	add    (%rcx),%edi
  53:	12 35 00 00 00 00    	adc    0x0(%rip),%dh        # 59 <.debug_info+0x59>
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:31
        m_Lock.m_Lock = 0;
  59:	01 03                	add    %eax,(%rbx)
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:8
    }
  5b:	00 00                	add    %al,(%rax)
  5d:	00 00                	add    %al,(%rax)
  5f:	03 3a                	add    (%rdx),%edi
Video::VideoPresenter::~VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:10
    VideoPresenter::~VideoPresenter()
  61:	0a 00                	or     (%rax),%al
  63:	00 00                	add    %al,(%rax)
  65:	00 6e 00             	add    %ch,0x0(%rsi)
  68:	00 00                	add    %al,(%rax)
  6a:	74 00                	je     6c <.debug_info+0x6c>
  6c:	00 00                	add    %al,(%rax)
Spinlock::Release():
/home/umarin/source/niteOS/Kernel/include/Utils/Spinlock.h:59
  6e:	01 8c 00 00 00 00 1f 	add    %ecx,0x1f000000(%rax,%rax,1)
  75:	00 00                	add    %al,(%rax)
  77:	00 00                	add    %al,(%rax)
  79:	03 3b                	add    (%rbx),%edi
  7b:	0a 00                	or     (%rax),%al
  7d:	00 00                	add    %al,(%rax)
  7f:	00 01                	add    %al,(%rcx)
  81:	85 00                	test   %eax,(%rax)
  83:	00 00                	add    %al,(%rax)
  85:	01 8c 00 00 00 00 00 	add    %ecx,0x0(%rax,%rax,1)
  8c:	05 3f 00 00 00       	add    $0x3f,%eax
  91:	06                   	(bad)  
  92:	8c 00                	mov    %es,(%rax)
  94:	00 00                	add    %al,(%rax)
  96:	04 01                	add    $0x1,%al
  98:	06                   	(bad)  
  99:	00 00                	add    %al,(%rax)
  9b:	00 00                	add    %al,(%rax)
  9d:	04 02                	add    $0x2,%al
  9f:	05 00 00 00 00       	add    $0x0,%eax
  a4:	04 08                	add    $0x8,%al
  a6:	05 00 00 00 00       	add    $0x0,%eax
  ab:	04 01                	add    $0x1,%al
  ad:	08 00                	or     %al,(%rax)
  af:	00 00                	add    %al,(%rax)
  b1:	00 04 02             	add    %al,(%rdx,%rax,1)
  b4:	07                   	(bad)  
  b5:	00 00                	add    %al,(%rax)
  b7:	00 00                	add    %al,(%rax)
  b9:	20 00                	and    %al,(%rax)
  bb:	00 00                	add    %al,(%rax)
  bd:	00 05 34 19 c5 00    	add    %al,0xc51934(%rip)        # c519f7 <Video::VideoPresenter::~VideoPresenter()+0xc51997>
  c3:	00 00                	add    %al,(%rax)
  c5:	04 04                	add    $0x4,%al
  c7:	07                   	(bad)  
  c8:	00 00                	add    %al,(%rax)
  ca:	00 00                	add    %al,(%rax)
  cc:	04 08                	add    $0x8,%al
  ce:	07                   	(bad)  
  cf:	00 00                	add    %al,(%rax)
  d1:	00 00                	add    %al,(%rax)
  d3:	04 08                	add    $0x8,%al
  d5:	05 00 00 00 00       	add    $0x0,%eax
  da:	04 10                	add    $0x10,%al
  dc:	04 00                	add    $0x0,%al
  de:	00 00                	add    %al,(%rax)
  e0:	00 21                	add    %ah,(%rcx)
  e2:	00 00                	add    %al,(%rax)
  e4:	00 00                	add    %al,(%rax)
  e6:	12 00                	adc    (%rax),%al
  e8:	00 00                	add    %al,(%rax)
  ea:	00 10                	add    %dl,(%rax)
  ec:	02 07                	add    (%rdi),%al
  ee:	10 0c 01             	adc    %cl,(%rcx,%rax,1)
  f1:	00 00                	add    %al,(%rax)
  f3:	09 00                	or     %eax,(%rax)
  f5:	00 00                	add    %al,(%rax)
  f7:	00 09                	add    %cl,(%rcx)
  f9:	0f 0c                	(bad)  
  fb:	01 00                	add    %eax,(%rax)
  fd:	00 00                	add    %al,(%rax)
  ff:	09 00                	or     %eax,(%rax)
 101:	00 00                	add    %al,(%rax)
 103:	00 09                	add    %cl,(%rcx)
 105:	1d 0c 01 00 00       	sbb    $0x10c,%eax
 10a:	08 00                	or     %al,(%rax)
 10c:	05 e6 00 00 00       	add    $0xe6,%eax
 111:	22 00                	and    (%rax),%al
 113:	00 00                	add    %al,(%rax)
 115:	00 04 07             	add    %al,(%rdi,%rax,1)
 118:	0b 44 02 00          	or     0x0(%rdx,%rax,1),%eax
 11c:	00 12                	add    %dl,(%rdx)
 11e:	00 00                	add    %al,(%rax)
 120:	00 00                	add    %al,(%rax)
 122:	08 04 09             	or     %al,(%rcx,%rcx,1)
 125:	0c 3d                	or     $0x3d,%al
 127:	01 00                	add    %eax,(%rax)
 129:	00 13                	add    %dl,(%rbx)
 12b:	78 00                	js     12d <.debug_info+0x12d>
 12d:	18 2e                	sbb    %ch,(%rsi)
 12f:	00 00                	add    %al,(%rax)
 131:	00 00                	add    %al,(%rax)
 133:	13 79 00             	adc    0x0(%rcx),%edi
 136:	1b 2e                	sbb    (%rsi),%ebp
 138:	00 00                	add    %al,(%rax)
 13a:	00 04 00             	add    %al,(%rax,%rax,1)
 13d:	23 00                	and    (%rax),%eax
 13f:	00 00                	add    %al,(%rax)
 141:	00 24 00             	add    %ah,(%rax,%rax,1)
 144:	00 00                	add    %al,(%rax)
 146:	00 20                	add    %ah,(%rax)
 148:	04 0d                	add    $0xd,%al
 14a:	0b 42 01             	or     0x1(%rdx),%eax
 14d:	00 00                	add    %al,(%rax)
 14f:	3e 02 00             	ds add (%rax),%al
 152:	00 25 00 00 00 00    	add    %ah,0x0(%rip)        # 158 <.debug_info+0x158>
 158:	00 00                	add    %al,(%rax)
 15a:	00 00                	add    %al,(%rax)
 15c:	01 65 01             	add    %esp,0x1(%rbp)
 15f:	00 00                	add    %al,(%rax)
 161:	70 01                	jo     164 <.debug_info+0x164>
 163:	00 00                	add    %al,(%rax)
 165:	01 0d 05 00 00 02    	add    %ecx,0x2000005(%rip)        # 2000170 <Video::VideoPresenter::~VideoPresenter()+0x2000110>
 16b:	17                   	(bad)  
 16c:	05 00 00 00 26       	add    $0x26000000,%eax
 171:	00 00                	add    %al,(%rax)
 173:	00 00                	add    %al,(%rax)
 175:	27                   	(bad)  
 176:	05 00 00 00 01       	add    $0x1000000,%eax
 17b:	11 00                	adc    %eax,(%rax)
 17d:	00 00                	add    %al,(%rax)
 17f:	00 04 10             	add    %al,(%rax,%rdx,1)
 182:	23 44 02 00          	and    0x0(%rdx,%rax,1),%eax
 186:	00 08                	add    %cl,(%rax)
 188:	02 03                	add    (%rbx),%al
 18a:	00 00                	add    %al,(%rax)
 18c:	00 00                	add    %al,(%rax)
 18e:	01 05 05 00 00 00    	add    %eax,0x5(%rip)        # 199 <.debug_info+0x199>
 194:	00 9d 01 00 00 a3    	add    %bl,-0x5cffffff(%rbp)
 19a:	01 00                	add    %eax,(%rax)
 19c:	00 01                	add    %al,(%rcx)
 19e:	0d 05 00 00 00       	or     $0x5,%eax
 1a3:	03 00                	add    (%rax),%eax
 1a5:	00 00                	add    %al,(%rax)
 1a7:	00 01                	add    %al,(%rcx)
 1a9:	0a 05 00 00 00 00    	or     0x0(%rip),%al        # 1af <.debug_info+0x1af>
 1af:	b7 01                	mov    $0x1,%bh
 1b1:	00 00                	add    %al,(%rax)
 1b3:	c2 01 00             	ret    $0x1
 1b6:	00 01                	add    %al,(%rcx)
 1b8:	0d 05 00 00 01       	or     $0x1000005,%eax
 1bd:	2e 00 00             	cs add %al,(%rax)
 1c0:	00 00                	add    %al,(%rax)
 1c2:	14 00                	adc    $0x0,%al
 1c4:	00 00                	add    %al,(%rax)
 1c6:	00 0f                	add    %cl,(%rdi)
 1c8:	00 00                	add    %al,(%rax)
 1ca:	00 00                	add    %al,(%rax)
 1cc:	02 10                	add    (%rax),%dl
 1ce:	00 42 01             	add    %al,0x1(%rdx)
 1d1:	00 00                	add    %al,(%rax)
 1d3:	db 01                	fildl  (%rcx)
 1d5:	00 00                	add    %al,(%rax)
 1d7:	e1 01                	loope  1da <.debug_info+0x1da>
 1d9:	00 00                	add    %al,(%rax)
 1db:	01 0d 05 00 00 00    	add    %ecx,0x5(%rip)        # 1e6 <.debug_info+0x1e6>
 1e1:	14 00                	adc    $0x0,%al
 1e3:	00 00                	add    %al,(%rax)
 1e5:	00 14 00             	add    %dl,(%rax,%rax,1)
 1e8:	00 00                	add    %al,(%rax)
 1ea:	00 02                	add    %al,(%rdx)
 1ec:	10 01                	adc    %al,(%rcx)
 1ee:	42 01 00             	rex.X add %eax,(%rax)
 1f1:	00 fa                	add    %bh,%dl
 1f3:	01 00                	add    %eax,(%rax)
 1f5:	00 0f                	add    %cl,(%rdi)
 1f7:	02 00                	add    (%rax),%al
 1f9:	00 01                	add    %al,(%rcx)
 1fb:	0d 05 00 00 02       	or     $0x2000005,%eax
 200:	1d 01 00 00 02       	sbb    $0x2000001,%eax
 205:	36 05 00 00 02 2e    	ss add $0x2e020000,%eax
 20b:	00 00                	add    %al,(%rax)
 20d:	00 00                	add    %al,(%rax)
 20f:	27                   	(bad)  
 210:	00 00                	add    %al,(%rax)
 212:	00 00                	add    %al,(%rax)
 214:	01 19                	add    %ebx,(%rcx)
 216:	0a 00                	or     (%rax),%al
 218:	00 00                	add    %al,(%rax)
 21a:	00 01                	add    %al,(%rcx)
 21c:	02 10                	add    (%rax),%dl
 21e:	02 42 01             	add    0x1(%rdx),%al
 221:	00 00                	add    %al,(%rax)
 223:	01 28                	add    %ebp,(%rax)
 225:	02 00                	add    (%rax),%al
 227:	00 01                	add    %al,(%rcx)
 229:	0d 05 00 00 02       	or     $0x2000005,%eax
 22e:	1d 01 00 00 02       	sbb    $0x2000001,%eax
 233:	2e 00 00             	cs add %al,(%rax)
 236:	00 02                	add    %al,(%rdx)
 238:	2e 00 00             	cs add %al,(%rax)
 23b:	00 00                	add    %al,(%rax)
 23d:	00 06                	add    %al,(%rsi)
 23f:	42 01 00             	rex.X add %eax,(%rax)
 242:	00 00                	add    %al,(%rax)
 244:	10 00                	adc    %al,(%rax)
 246:	00 00                	add    %al,(%rax)
 248:	00 18                	add    %bl,(%rax)
 24a:	02 17                	add    (%rdi),%dl
 24c:	07                   	(bad)  
 24d:	d4                   	(bad)  
 24e:	04 00                	add    $0x0,%al
 250:	00 03                	add    %al,(%rbx)
 252:	00 00                	add    %al,(%rax)
 254:	00 00                	add    %al,(%rax)
 256:	02 1a                	add    (%rdx),%bl
 258:	05 00 00 00 00       	add    $0x0,%eax
 25d:	65 02 00             	add    %gs:(%rax),%al
 260:	00 6b 02             	add    %ch,0x2(%rbx)
 263:	00 00                	add    %al,(%rax)
 265:	01 d9                	add    %ebx,%ecx
 267:	04 00                	add    $0x0,%al
 269:	00 00                	add    %al,(%rax)
 26b:	03 00                	add    (%rax),%eax
 26d:	00 00                	add    %al,(%rax)
 26f:	00 02                	add    %al,(%rdx)
 271:	22 05 00 00 00 00    	and    0x0(%rip),%al        # 277 <.debug_info+0x277>
 277:	7f 02                	jg     27b <.debug_info+0x27b>
 279:	00 00                	add    %al,(%rax)
 27b:	8a 02                	mov    (%rdx),%al
 27d:	00 00                	add    %al,(%rax)
 27f:	01 d9                	add    %ebx,%ecx
 281:	04 00                	add    $0x0,%al
 283:	00 01                	add    %al,(%rcx)
 285:	2e 00 00             	cs add %al,(%rax)
 288:	00 00                	add    %al,(%rax)
 28a:	07                   	(bad)  
 28b:	00 00                	add    %al,(%rax)
 28d:	00 00                	add    %al,(%rax)
 28f:	27                   	(bad)  
 290:	11 00                	adc    %eax,(%rax)
 292:	00 00                	add    %al,(%rax)
 294:	00 e3                	add    %ah,%bl
 296:	04 00                	add    $0x0,%al
 298:	00 a1 02 00 00 ac    	add    %ah,-0x53fffffe(%rcx)
 29e:	02 00                	add    (%rax),%al
 2a0:	00 01                	add    %al,(%rcx)
 2a2:	d9 04 00             	flds   (%rax,%rax,1)
 2a5:	00 02                	add    %al,(%rdx)
 2a7:	e8 04 00 00 00       	call   2b0 <.debug_info+0x2b0>
 2ac:	03 00                	add    (%rax),%eax
 2ae:	00 00                	add    %al,(%rax)
 2b0:	00 02                	add    %al,(%rdx)
 2b2:	2b 0a                	sub    (%rdx),%ecx
 2b4:	00 00                	add    %al,(%rax)
 2b6:	00 00                	add    %al,(%rax)
 2b8:	c0 02 00             	rolb   $0x0,(%rdx)
 2bb:	00 c6                	add    %al,%dh
 2bd:	02 00                	add    (%rax),%al
 2bf:	00 01                	add    %al,(%rcx)
 2c1:	d9 04 00             	flds   (%rax,%rax,1)
 2c4:	00 00                	add    %al,(%rax)
 2c6:	15 41 64 64 00       	adc    $0x646441,%eax
 2cb:	3e 00 00             	ds add %al,(%rax)
 2ce:	00 00                	add    %al,(%rax)
 2d0:	d8 02                	fadds  (%rdx)
 2d2:	00 00                	add    %al,(%rax)
 2d4:	e3 02                	jrcxz  2d8 <.debug_info+0x2d8>
 2d6:	00 00                	add    %al,(%rax)
 2d8:	01 d9                	add    %ebx,%ecx
 2da:	04 00                	add    $0x0,%al
 2dc:	00 02                	add    %al,(%rdx)
 2de:	0c 01                	or     $0x1,%al
 2e0:	00 00                	add    %al,(%rax)
 2e2:	00 15 41 64 64 00    	add    %dl,0x646441(%rip)        # 646729 <Video::VideoPresenter::~VideoPresenter()+0x6466c9>
 2e8:	4c 00 00             	rex.WR add %r8b,(%rax)
 2eb:	00 00                	add    %al,(%rax)
 2ed:	f5                   	cmc    
 2ee:	02 00                	add    (%rax),%al
 2f0:	00 00                	add    %al,(%rax)
 2f2:	03 00                	add    (%rax),%eax
 2f4:	00 01                	add    %al,(%rcx)
 2f6:	d9 04 00             	flds   (%rax,%rax,1)
 2f9:	00 02                	add    %al,(%rdx)
 2fb:	ed                   	in     (%dx),%eax
 2fc:	04 00                	add    $0x0,%al
 2fe:	00 00                	add    %al,(%rax)
 300:	16                   	(bad)  
 301:	41                   	rex.B
 302:	64 64 00 62 12       	fs add %ah,%fs:0x12(%rdx)
 307:	00 00                	add    %al,(%rax)
 309:	00 00                	add    %al,(%rax)
 30b:	ed                   	in     (%dx),%eax
 30c:	04 00                	add    $0x0,%al
 30e:	00 17                	add    %dl,(%rdi)
 310:	03 00                	add    (%rax),%eax
 312:	00 22                	add    %ah,(%rdx)
 314:	03 00                	add    (%rax),%eax
 316:	00 01                	add    %al,(%rcx)
 318:	d9 04 00             	flds   (%rax,%rax,1)
 31b:	00 02                	add    %al,(%rdx)
 31d:	f7 04 00 00 00 03 00 	testl  $0x30000,(%rax,%rax,1)
 324:	00 00                	add    %al,(%rax)
 326:	00 02                	add    %al,(%rdx)
 328:	69 0a 00 00 00 00    	imul   $0x0,(%rdx),%ecx
 32e:	36 03 00             	ss add (%rax),%eax
 331:	00 46 03             	add    %al,0x3(%rsi)
 334:	00 00                	add    %al,(%rax)
 336:	01 d9                	add    %ebx,%ecx
 338:	04 00                	add    $0x0,%al
 33a:	00 02                	add    %al,(%rdx)
 33c:	ed                   	in     (%dx),%eax
 33d:	04 00                	add    $0x0,%al
 33f:	00 02                	add    %al,(%rdx)
 341:	b9 00 00 00 00       	mov    $0x0,%ecx
 346:	03 00                	add    (%rax),%eax
 348:	00 00                	add    %al,(%rax)
 34a:	00 02                	add    %al,(%rdx)
 34c:	6d                   	insl   (%dx),%es:(%rdi)
 34d:	0a 00                	or     (%rax),%al
 34f:	00 00                	add    %al,(%rax)
 351:	00 5a 03             	add    %bl,0x3(%rdx)
 354:	00 00                	add    %al,(%rax)
 356:	65 03 00             	add    %gs:(%rax),%eax
 359:	00 01                	add    %al,(%rcx)
 35b:	d9 04 00             	flds   (%rax,%rax,1)
 35e:	00 02                	add    %al,(%rdx)
 360:	0c 01                	or     $0x1,%al
 362:	00 00                	add    %al,(%rax)
 364:	00 03                	add    %al,(%rbx)
 366:	00 00                	add    %al,(%rax)
 368:	00 00                	add    %al,(%rax)
 36a:	02 72 0a             	add    0xa(%rdx),%dh
 36d:	00 00                	add    %al,(%rax)
 36f:	00 00                	add    %al,(%rax)
 371:	79 03                	jns    376 <.debug_info+0x376>
 373:	00 00                	add    %al,(%rax)
 375:	84 03                	test   %al,(%rbx)
 377:	00 00                	add    %al,(%rax)
 379:	01 d9                	add    %ebx,%ecx
 37b:	04 00                	add    $0x0,%al
 37d:	00 02                	add    %al,(%rdx)
 37f:	ed                   	in     (%dx),%eax
 380:	04 00                	add    $0x0,%al
 382:	00 00                	add    %al,(%rax)
 384:	03 00                	add    (%rax),%eax
 386:	00 00                	add    %al,(%rax)
 388:	00 02                	add    %al,(%rdx)
 38a:	86 0a                	xchg   %cl,(%rdx)
 38c:	00 00                	add    %al,(%rax)
 38e:	00 00                	add    %al,(%rax)
 390:	98                   	cwtl   
 391:	03 00                	add    (%rax),%eax
 393:	00 a3 03 00 00 01    	add    %ah,0x1000003(%rbx)
 399:	d9 04 00             	flds   (%rax,%rax,1)
 39c:	00 02                	add    %al,(%rdx)
 39e:	b9 00 00 00 00       	mov    $0x0,%ecx
 3a3:	07                   	(bad)  
 3a4:	00 00                	add    %al,(%rax)
 3a6:	00 00                	add    %al,(%rax)
 3a8:	8b 0a                	mov    (%rdx),%ecx
 3aa:	00 00                	add    %al,(%rax)
 3ac:	00 00                	add    %al,(%rax)
 3ae:	fc                   	cld    
 3af:	04 00                	add    $0x0,%al
 3b1:	00 ba 03 00 00 c5    	add    %bh,-0x3afffffd(%rdx)
 3b7:	03 00                	add    (%rax),%eax
 3b9:	00 01                	add    %al,(%rcx)
 3bb:	d9 04 00             	flds   (%rax,%rax,1)
 3be:	00 02                	add    %al,(%rdx)
 3c0:	ed                   	in     (%dx),%eax
 3c1:	04 00                	add    $0x0,%al
 3c3:	00 00                	add    %al,(%rax)
 3c5:	07                   	(bad)  
 3c6:	00 00                	add    %al,(%rax)
 3c8:	00 00                	add    %al,(%rax)
 3ca:	96                   	xchg   %eax,%esi
 3cb:	0a 00                	or     (%rax),%al
 3cd:	00 00                	add    %al,(%rax)
 3cf:	00 fc                	add    %bh,%ah
 3d1:	04 00                	add    $0x0,%al
 3d3:	00 dc                	add    %bl,%ah
 3d5:	03 00                	add    (%rax),%eax
 3d7:	00 e7                	add    %ah,%bh
 3d9:	03 00                	add    (%rax),%eax
 3db:	00 01                	add    %al,(%rcx)
 3dd:	d9 04 00             	flds   (%rax,%rax,1)
 3e0:	00 02                	add    %al,(%rdx)
 3e2:	03 05 00 00 00 03    	add    0x3000000(%rip),%eax        # 30003e8 <Video::VideoPresenter::~VideoPresenter()+0x3000388>
 3e8:	00 00                	add    %al,(%rax)
 3ea:	00 00                	add    %al,(%rax)
 3ec:	02 a4 0a 00 00 00 00 	add    0x0(%rdx,%rcx,1),%ah
 3f3:	fb                   	sti    
 3f4:	03 00                	add    (%rax),%eax
 3f6:	00 01                	add    %al,(%rcx)
 3f8:	04 00                	add    $0x0,%al
 3fa:	00 01                	add    %al,(%rcx)
 3fc:	d9 04 00             	flds   (%rax,%rax,1)
 3ff:	00 00                	add    %al,(%rax)
 401:	07                   	(bad)  
 402:	00 00                	add    %al,(%rax)
 404:	00 00                	add    %al,(%rax)
 406:	a9 0e 00 00 00       	test   $0xe,%eax
 40b:	00 b9 00 00 00 18    	add    %bh,0x18000000(%rcx)
 411:	04 00                	add    $0x0,%al
 413:	00 1e                	add    %bl,(%rsi)
 415:	04 00                	add    $0x0,%al
 417:	00 01                	add    %al,(%rcx)
 419:	d9 04 00             	flds   (%rax,%rax,1)
 41c:	00 00                	add    %al,(%rax)
 41e:	16                   	(bad)  
 41f:	47                   	rex.RXB
 420:	65 74 00             	gs je  423 <.debug_info+0x423>
 423:	ae                   	scas   %es:(%rdi),%al
 424:	08 00                	or     %al,(%rax)
 426:	00 00                	add    %al,(%rax)
 428:	00 08                	add    %cl,(%rax)
 42a:	05 00 00 35 04       	add    $0x4350000,%eax
 42f:	00 00                	add    %al,(%rax)
 431:	40 04 00             	rex add $0x0,%al
 434:	00 01                	add    %al,(%rcx)
 436:	d9 04 00             	flds   (%rax,%rax,1)
 439:	00 02                	add    %al,(%rdx)
 43b:	b9 00 00 00 00       	mov    $0x0,%ecx
 440:	07                   	(bad)  
 441:	00 00                	add    %al,(%rax)
 443:	00 00                	add    %al,(%rax)
 445:	ba 12 00 00 00       	mov    $0x12,%edx
 44a:	00 ed                	add    %ch,%ch
 44c:	04 00                	add    $0x0,%al
 44e:	00 57 04             	add    %dl,0x4(%rdi)
 451:	00 00                	add    %al,(%rax)
 453:	5d                   	pop    %rbp
 454:	04 00                	add    $0x0,%al
 456:	00 01                	add    %al,(%rcx)
 458:	d9 04 00             	flds   (%rax,%rax,1)
 45b:	00 00                	add    %al,(%rax)
 45d:	07                   	(bad)  
 45e:	00 00                	add    %al,(%rax)
 460:	00 00                	add    %al,(%rax)
 462:	bf 12 00 00 00       	mov    $0x12,%edi
 467:	00 ed                	add    %ch,%ch
 469:	04 00                	add    $0x0,%al
 46b:	00 74 04 00          	add    %dh,0x0(%rsp,%rax,1)
 46f:	00 7a 04             	add    %bh,0x4(%rdx)
 472:	00 00                	add    %al,(%rax)
 474:	01 d9                	add    %ebx,%ecx
 476:	04 00                	add    $0x0,%al
 478:	00 00                	add    %al,(%rax)
 47a:	07                   	(bad)  
 47b:	00 00                	add    %al,(%rax)
 47d:	00 00                	add    %al,(%rax)
 47f:	d3 08                	rorl   %cl,(%rax)
 481:	00 00                	add    %al,(%rax)
 483:	00 00                	add    %al,(%rax)
 485:	03 05 00 00 91 04    	add    0x4910000(%rip),%eax        # 491048b <Video::VideoPresenter::~VideoPresenter()+0x491042b>
 48b:	00 00                	add    %al,(%rax)
 48d:	9c                   	pushf  
 48e:	04 00                	add    $0x0,%al
 490:	00 01                	add    %al,(%rcx)
 492:	d9 04 00             	flds   (%rax,%rax,1)
 495:	00 02                	add    %al,(%rdx)
 497:	2e 00 00             	cs add %al,(%rax)
 49a:	00 00                	add    %al,(%rax)
 49c:	09 00                	or     %eax,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	00 d9                	add    %bl,%cl
 4a2:	12 ed                	adc    %ch,%ch
 4a4:	04 00                	add    $0x0,%al
 4a6:	00 00                	add    %al,(%rax)
 4a8:	09 00                	or     %eax,(%rax)
 4aa:	00 00                	add    %al,(%rax)
 4ac:	00 d9                	add    %bl,%cl
 4ae:	1c ed                	sbb    $0xed,%al
 4b0:	04 00                	add    $0x0,%al
 4b2:	00 08                	add    %cl,(%rax)
 4b4:	09 00                	or     %eax,(%rax)
 4b6:	00 00                	add    %al,(%rax)
 4b8:	00 da                	add    %bl,%dl
 4ba:	0e                   	(bad)  
 4bb:	b9 00 00 00 10       	mov    $0x10000000,%ecx
 4c0:	09 00                	or     %eax,(%rax)
 4c2:	00 00                	add    %al,(%rax)
 4c4:	00 db                	add    %bl,%bl
 4c6:	0e                   	(bad)  
 4c7:	3f                   	(bad)  
 4c8:	00 00                	add    %al,(%rax)
 4ca:	00 14 28             	add    %dl,(%rax,%rbp,1)
 4cd:	54                   	push   %rsp
 4ce:	00 f7                	add    %dh,%bh
 4d0:	04 00                	add    $0x0,%al
 4d2:	00 00                	add    %al,(%rax)
 4d4:	06                   	(bad)  
 4d5:	44 02 00             	add    (%rax),%r8b
 4d8:	00 05 44 02 00 00    	add    %al,0x244(%rip)        # 722 <.debug_info+0x722>
 4de:	06                   	(bad)  
 4df:	d9 04 00             	flds   (%rax,%rax,1)
 4e2:	00 0b                	add    %cl,(%rbx)
 4e4:	44 02 00             	add    (%rax),%r8b
 4e7:	00 0b                	add    %cl,(%rbx)
 4e9:	d4                   	(bad)  
 4ea:	04 00                	add    $0x0,%al
 4ec:	00 05 f2 04 00 00    	add    %al,0x4f2(%rip)        # 9e4 <Video::VideoPresenter::~VideoPresenter()+0x984>
 4f2:	29 00                	sub    %eax,(%rax)
 4f4:	00 00                	add    %al,(%rax)
 4f6:	00 05 3d 01 00 00    	add    %al,0x13d(%rip)        # 639 <.debug_info+0x639>
 4fc:	04 01                	add    $0x1,%al
 4fe:	02 00                	add    (%rax),%al
 500:	00 00                	add    %al,(%rax)
 502:	00 0b                	add    %cl,(%rbx)
 504:	f7 04 00 00 05 f7 04 	testl  $0x4f70500,(%rax,%rax,1)
 50b:	00 00                	add    %al,(%rax)
 50d:	05 42 01 00 00       	add    $0x142,%eax
 512:	06                   	(bad)  
 513:	0d 05 00 00 0b       	or     $0xb000005,%eax
 518:	3e 02 00             	ds add (%rax),%al
 51b:	00 2a                	add    %ch,(%rdx)
 51d:	2e 00 00             	cs add %al,(%rax)
 520:	00 27                	add    %ah,(%rdi)
 522:	05 00 00 2b 00       	add    $0x2b0000,%eax
 527:	05 2c 05 00 00       	add    $0x52c,%eax
 52c:	2c 08                	sub    $0x8,%al
 52e:	00 00                	add    %al,(%rax)
 530:	00 00                	add    %al,(%rax)
 532:	1c 05                	sbb    $0x5,%al
 534:	00 00                	add    %al,(%rax)
 536:	05 42 05 00 00       	add    $0x542,%eax
 53b:	04 01                	add    $0x1,%al
 53d:	06                   	(bad)  
 53e:	00 00                	add    %al,(%rax)
 540:	00 00                	add    %al,(%rax)
 542:	06                   	(bad)  
 543:	3b 05 00 00 0c 6b    	cmp    0x6b0c0000(%rip),%eax        # 6b0c0549 <Video::VideoPresenter::~VideoPresenter()+0x6b0c04e9>
 549:	02 00                	add    (%rax),%al
 54b:	00 55 05             	add    %dl,0x5(%rbp)
 54e:	00 00                	add    %al,(%rax)
 550:	02 68 05             	add    0x5(%rax),%ch
 553:	00 00                	add    %al,(%rax)
 555:	08 00                	or     %al,(%rax)
 557:	00 00                	add    %al,(%rax)
 559:	00 de                	add    %bl,%dh
 55b:	04 00                	add    $0x0,%al
 55d:	00 08                	add    %cl,(%rax)
 55f:	00 00                	add    %al,(%rax)
 561:	00 00                	add    %al,(%rax)
 563:	3a 00                	cmp    (%rax),%al
 565:	00 00                	add    %al,(%rax)
 567:	00 17                	add    %dl,(%rdi)
 569:	47 05 00 00 00 00    	rex.RXB add $0x0,%eax
 56f:	00 00                	add    %al,(%rax)
 571:	79 05                	jns    578 <.debug_info+0x578>
 573:	00 00                	add    %al,(%rax)
 575:	7f 05                	jg     57c <.debug_info+0x57c>
 577:	00 00                	add    %al,(%rax)
 579:	18 55 05             	sbb    %dl,0x5(%rbp)
 57c:	00 00                	add    %al,(%rax)
 57e:	00 0c 51             	add    %cl,(%rcx,%rdx,2)
 581:	02 00                	add    (%rax),%al
 583:	00 8d 05 00 00 02    	add    %cl,0x2000005(%rbp)
 589:	97                   	xchg   %eax,%edi
 58a:	05 00 00 08 00       	add    $0x80000,%eax
 58f:	00 00                	add    %al,(%rax)
 591:	00 de                	add    %bl,%dh
 593:	04 00                	add    $0x0,%al
 595:	00 00                	add    %al,(%rax)
 597:	17                   	(bad)  
 598:	7f 05                	jg     59f <.debug_info+0x59f>
 59a:	00 00                	add    %al,(%rax)
 59c:	00 00                	add    %al,(%rax)
 59e:	00 00                	add    %al,(%rax)
 5a0:	a8 05                	test   $0x5,%al
 5a2:	00 00                	add    %al,(%rax)
 5a4:	ae                   	scas   %es:(%rdi),%al
 5a5:	05 00 00 18 8d       	add    $0x8d180000,%eax
 5aa:	05 00 00 00 0d       	add    $0xd000000,%eax
 5af:	0f 02 00             	lar    (%rax),%eax
 5b2:	00 cd                	add    %cl,%ch
 5b4:	05 00 00 00 00       	add    $0x0,%eax
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 00                	add    %al,(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	01 00                	add    %eax,(%rax)
 5c1:	00 00                	add    %al,(%rax)
 5c3:	00 00                	add    %al,(%rax)
 5c5:	00 00                	add    %al,(%rax)
 5c7:	01 9c 00 06 00 00 0e 	add    %ebx,0xe000006(%rax,%rax,1)
 5ce:	00 00                	add    %al,(%rax)
 5d0:	00 00                	add    %al,(%rax)
 5d2:	12 05 00 00 01 55    	adc    0x55010000(%rip),%al        # 550105d8 <Video::VideoPresenter::~VideoPresenter()+0x55010578>
 5d8:	0a 00                	or     (%rax),%al
 5da:	00 00                	add    %al,(%rax)
 5dc:	00 19                	add    %bl,(%rcx)
 5de:	2a 1d 01 00 00 01    	sub    0x1000001(%rip),%bl        # 10005e5 <Video::VideoPresenter::~VideoPresenter()+0x1000585>
 5e4:	54                   	push   %rsp
 5e5:	0a 00                	or     (%rax),%al
 5e7:	00 00                	add    %al,(%rax)
 5e9:	00 19                	add    %bl,(%rcx)
 5eb:	35 2e 00 00 00       	xor    $0x2e,%eax
 5f0:	01 51 0a             	add    %edx,0xa(%rcx)
 5f3:	00 00                	add    %al,(%rax)
 5f5:	00 00                	add    %al,(%rax)
 5f7:	19 40 2e             	sbb    %eax,0x2e(%rax)
 5fa:	00 00                	add    %al,(%rax)
 5fc:	00 01                	add    %al,(%rcx)
 5fe:	52                   	push   %rdx
 5ff:	00 0d e1 01 00 00    	add    %cl,0x1e1(%rip)        # 7e6 <Video::VideoPresenter::~VideoPresenter()+0x786>
 605:	1f                   	(bad)  
 606:	06                   	(bad)  
	...
 60f:	00 00                	add    %al,(%rax)
 611:	01 00                	add    %eax,(%rax)
 613:	00 00                	add    %al,(%rax)
 615:	00 00                	add    %al,(%rax)
 617:	00 00                	add    %al,(%rax)
 619:	01 9c 52 06 00 00 0e 	add    %ebx,0xe000006(%rdx,%rdx,2)
 620:	00 00                	add    %al,(%rax)
 622:	00 00                	add    %al,(%rax)
 624:	12 05 00 00 01 55    	adc    0x55010000(%rip),%al        # 5501062a <Video::VideoPresenter::~VideoPresenter()+0x550105ca>
 62a:	0a 00                	or     (%rax),%al
 62c:	00 00                	add    %al,(%rax)
 62e:	00 14 25 1d 01 00 00 	add    %dl,0x11d
 635:	01 54 0a 00          	add    %edx,0x0(%rdx,%rcx,1)
 639:	00 00                	add    %al,(%rax)
 63b:	00 14 38             	add    %dl,(%rax,%rdi,1)
 63e:	36 05 00 00 01 51    	ss add $0x51010000,%eax
 644:	0a 00                	or     (%rax),%al
 646:	00 00                	add    %al,(%rax)
 648:	00 14 42             	add    %dl,(%rdx,%rax,2)
 64b:	2e 00 00             	cs add %al,(%rax)
 64e:	00 01                	add    %al,(%rcx)
 650:	52                   	push   %rdx
 651:	00 0d c2 01 00 00    	add    %cl,0x1c2(%rip)        # 819 <Video::VideoPresenter::~VideoPresenter()+0x7b9>
 657:	71 06                	jno    65f <.debug_info+0x65f>
	...
 661:	00 00                	add    %al,(%rax)
 663:	01 00                	add    %eax,(%rax)
 665:	00 00                	add    %al,(%rax)
 667:	00 00                	add    %al,(%rax)
 669:	00 00                	add    %al,(%rax)
 66b:	01 9c 7d 06 00 00 0e 	add    %ebx,0xe000006(%rbp,%rdi,2)
 672:	00 00                	add    %al,(%rax)
 674:	00 00                	add    %al,(%rax)
 676:	12 05 00 00 01 55    	adc    0x55010000(%rip),%al        # 5501067c <Video::VideoPresenter::~VideoPresenter()+0x5501061c>
 67c:	00 0c a3             	add    %cl,(%rbx,%riz,4)
 67f:	01 00                	add    %eax,(%rax)
 681:	00 8b 06 00 00 00    	add    %cl,0x6(%rbx)
 687:	9e                   	sahf   
 688:	06                   	(bad)  
 689:	00 00                	add    %al,(%rax)
 68b:	08 00                	or     %al,(%rax)
 68d:	00 00                	add    %al,(%rax)
 68f:	00 12                	add    %dl,(%rdx)
 691:	05 00 00 08 00       	add    $0x80000,%eax
 696:	00 00                	add    %al,(%rax)
 698:	00 3a                	add    %bh,(%rdx)
 69a:	00 00                	add    %al,(%rax)
 69c:	00 00                	add    %al,(%rax)
 69e:	19 7d 06             	sbb    %edi,0x6(%rbp)
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 00                	add    %al,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	c1 06 00             	roll   $0x0,(%rsi)
	...
 6b2:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 6b8 <.debug_info+0x6b8>
 6b8:	00 00                	add    %al,(%rax)
 6ba:	00 01                	add    %al,(%rcx)
 6bc:	9c                   	pushf  
 6bd:	27                   	(bad)  
 6be:	07                   	(bad)  
 6bf:	00 00                	add    %al,(%rax)
 6c1:	1a 8b 06 00 00 01    	sbb    0x1000006(%rbx),%cl
 6c7:	55                   	push   %rbp
 6c8:	1b 47 05             	sbb    0x5(%rdi),%eax
	...
 6db:	00 00                	add    %al,(%rax)
 6dd:	00 07                	add    %al,(%rdi)
 6df:	00 00                	add    %al,(%rax)
 6e1:	00 00                	add    %al,(%rax)
 6e3:	00 00                	add    %al,(%rax)
 6e5:	00 01                	add    %al,(%rcx)
 6e7:	0d 05 0f 55 05       	or     $0x5550f05,%eax
	...
 6f4:	00 00                	add    %al,(%rax)
 6f6:	1b 8d 07 00 00 00    	sbb    0x7(%rbp),%ecx
 6fc:	00 00                	add    %al,(%rax)
 6fe:	00 00                	add    %al,(%rax)
 700:	00 00                	add    %al,(%rax)
 702:	00 01                	add    %al,(%rcx)
	...
 70c:	07                   	(bad)  
 70d:	00 00                	add    %al,(%rax)
 70f:	00 00                	add    %al,(%rax)
 711:	00 00                	add    %al,(%rax)
 713:	00 02                	add    %al,(%rdx)
 715:	24 17                	and    $0x17,%al
 717:	0f 97 07             	seta   (%rdi)
	...
 726:	00 0c 89             	add    %cl,(%rcx,%rcx,4)
 729:	01 00                	add    %eax,(%rax)
 72b:	00 35 07 00 00 00    	add    %dh,0x7(%rip)        # 738 <.debug_info+0x738>
 731:	3f                   	(bad)  
 732:	07                   	(bad)  
 733:	00 00                	add    %al,(%rax)
 735:	08 00                	or     %al,(%rax)
 737:	00 00                	add    %al,(%rax)
 739:	00 12                	add    %dl,(%rdx)
 73b:	05 00 00 00 19       	add    $0x19000000,%eax
 740:	27                   	(bad)  
 741:	07                   	(bad)  
 742:	00 00                	add    %al,(%rax)
 744:	00 00                	add    %al,(%rax)
 746:	00 00                	add    %al,(%rax)
 748:	62                   	(bad)  
 749:	07                   	(bad)  
	...
 752:	00 00                	add    %al,(%rax)
 754:	2c 00                	sub    $0x0,%al
 756:	00 00                	add    %al,(%rax)
 758:	00 00                	add    %al,(%rax)
 75a:	00 00                	add    %al,(%rax)
 75c:	01 9c 8d 07 00 00 1a 	add    %ebx,0x1a000007(%rbp,%rcx,4)
 763:	35 07 00 00 01       	xor    $0x1000007,%eax
 768:	55                   	push   %rbp
 769:	2d 7f 05 00 00       	sub    $0x57f,%eax
	...
 77a:	00 01                	add    %al,(%rcx)
 77c:	05 24 0f 8d 05       	add    $0x58d0f24,%eax
	...
 78d:	2e 74 00             	je,pn  790 <.debug_info+0x790>
 790:	00 00                	add    %al,(%rax)
 792:	97                   	xchg   %eax,%edi
 793:	07                   	(bad)  
 794:	00 00                	add    %al,(%rax)
 796:	03 08                	add    (%rax),%ecx
 798:	00 00                	add    %al,(%rax)
 79a:	00 00                	add    %al,(%rax)
 79c:	91                   	xchg   %eax,%ecx
 79d:	00 00                	add    %al,(%rax)
 79f:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
Video::VideoPresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }
   0:	01 05 00 49 13 34    	add    %eax,0x34134900(%rip)        # 34134906 <Video::VideoPresenter::~VideoPresenter()+0x341348a6>
   6:	19 00                	sbb    %eax,(%rax)
   8:	00 02                	add    %al,(%rdx)
   a:	05 00 49 13 00       	add    $0x134900,%eax
   f:	00 03                	add    %al,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23
    }
  11:	2e 01 3f             	cs add %edi,(%rdi)
  14:	19 03                	sbb    %eax,(%rbx)
  16:	0e                   	(bad)  
  17:	3a 0b                	cmp    (%rbx),%cl
  19:	3b 0b                	cmp    (%rbx),%ecx
  1b:	39 0b                	cmp    %ecx,(%rbx)
  1d:	6e                   	outsb  %ds:(%rsi),(%dx)
  1e:	0e                   	(bad)  
  1f:	32 21                	xor    (%rcx),%ah
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:28
    }
  21:	01 3c 19             	add    %edi,(%rcx,%rbx,1)
  24:	64 13 01             	adc    %fs:(%rcx),%eax
  27:	13 00                	adc    (%rax),%eax
  29:	00 04 24             	add    %al,(%rsp)
  2c:	00 0b                	add    %cl,(%rbx)
  2e:	0b 3e                	or     (%rsi),%edi
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
    VideoPresenter::VideoPresenter()
  30:	0b 03                	or     (%rbx),%eax
  32:	0e                   	(bad)  
  33:	00 00                	add    %al,(%rax)
  35:	05 0f 00 0b 21       	add    $0x210b000f,%eax
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:28
        m_Front = NULL;
  3a:	08 49 13             	or     %cl,0x13(%rcx)
  3d:	00 00                	add    %al,(%rax)
  3f:	06                   	(bad)  
  40:	26 00 49 13          	es add %cl,0x13(%rcx)
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
  44:	00 00                	add    %al,(%rax)
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:29
        m_Back = NULL;
  46:	07                   	(bad)  
  47:	2e 01 3f             	cs add %edi,(%rdi)
  4a:	19 03                	sbb    %eax,(%rbx)
  4c:	0e                   	(bad)  
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:30
        m_Count = 0;
  4d:	3a 21                	cmp    (%rcx),%ah
  4f:	02 3b                	add    (%rbx),%bh
  51:	0b 39                	or     (%rcx),%edi
  53:	0b 6e 0e             	or     0xe(%rsi),%ebp
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:31
        m_Lock.m_Lock = 0;
  56:	49 13 32             	adc    (%r10),%rsi
  59:	21 01                	and    %eax,(%rcx)
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:8
    }
  5b:	3c 19                	cmp    $0x19,%al
  5d:	64 13 01             	adc    %fs:(%rcx),%eax
Video::VideoPresenter::~VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:10
    VideoPresenter::~VideoPresenter()
  60:	13 00                	adc    (%rax),%eax
  62:	00 08                	add    %cl,(%rax)
  64:	05 00 03 0e 49       	add    $0x490e0300,%eax
  69:	13 34 19             	adc    (%rcx,%rbx,1),%esi
  6c:	00 00                	add    %al,(%rax)
Spinlock::Release():
/home/umarin/source/niteOS/Kernel/include/Utils/Spinlock.h:59
  6e:	09 0d 00 03 0e 3a    	or     %ecx,0x3a0e0300(%rip)        # 3a0e0374 <Video::VideoPresenter::~VideoPresenter()+0x3a0e0314>
Video::VideoPresenter::~VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:13
    }
  74:	21 02                	and    %eax,(%rdx)
  76:	3b 0b                	cmp    (%rbx),%ecx
  78:	39 0b                	cmp    %ecx,(%rbx)
  7a:	49 13 38             	adc    (%r8),%rdi
  7d:	0b 00                	or     (%rax),%eax
  7f:	00 0a                	add    %cl,(%rdx)
  81:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  86:	21 01                	and    %eax,(%rcx)
  88:	3b 0b                	cmp    (%rbx),%ecx
  8a:	39 0b                	cmp    %ecx,(%rbx)
  8c:	49 13 02             	adc    (%r10),%rax
  8f:	18 00                	sbb    %al,(%rax)
  91:	00 0b                	add    %cl,(%rbx)
  93:	10 00                	adc    %al,(%rax)
  95:	0b 21                	or     (%rcx),%esp
  97:	08 49 13             	or     %cl,0x13(%rcx)
  9a:	00 00                	add    %al,(%rax)
  9c:	0c 2e                	or     $0x2e,%al
  9e:	01 47 13             	add    %eax,0x13(%rdi)
  a1:	64 13 20             	adc    %fs:(%rax),%esp
  a4:	0b 01                	or     (%rcx),%eax
  a6:	13 00                	adc    (%rax),%eax
  a8:	00 0d 2e 01 47 13    	add    %cl,0x1347012e(%rip)        # 134701dc <Video::VideoPresenter::~VideoPresenter()+0x1347017c>
  ae:	64 13 11             	adc    %fs:(%rcx),%edx
  b1:	01 12                	add    %edx,(%rdx)
  b3:	07                   	(bad)  
  b4:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
  b8:	01 13                	add    %edx,(%rbx)
  ba:	00 00                	add    %al,(%rax)
  bc:	0e                   	(bad)  
  bd:	05 00 03 0e 49       	add    $0x490e0300,%eax
  c2:	13 34 19             	adc    (%rcx,%rbx,1),%esi
  c5:	02 18                	add    (%rax),%bl
  c7:	00 00                	add    %al,(%rax)
  c9:	0f 05                	syscall 
  cb:	00 31                	add    %dh,(%rcx)
  cd:	13 02                	adc    (%rdx),%eax
  cf:	17                   	(bad)  
  d0:	b7 42                	mov    $0x42,%bh
  d2:	17                   	(bad)  
  d3:	00 00                	add    %al,(%rax)
  d5:	10 02                	adc    %al,(%rdx)
  d7:	01 03                	add    %eax,(%rbx)
  d9:	0e                   	(bad)  
  da:	0b 0b                	or     (%rbx),%ecx
  dc:	3a 0b                	cmp    (%rbx),%cl
  de:	3b 0b                	cmp    (%rbx),%ecx
  e0:	39 0b                	cmp    %ecx,(%rbx)
  e2:	01 13                	add    %edx,(%rbx)
  e4:	00 00                	add    %al,(%rax)
  e6:	11 0d 00 03 0e 3a    	adc    %ecx,0x3a0e0300(%rip)        # 3a0e03ec <Video::VideoPresenter::~VideoPresenter()+0x3a0e038c>
  ec:	0b 3b                	or     (%rbx),%edi
  ee:	0b 39                	or     (%rcx),%edi
  f0:	0b 49 13             	or     0x13(%rcx),%ecx
  f3:	38 0b                	cmp    %cl,(%rbx)
  f5:	32 0b                	xor    (%rbx),%cl
  f7:	00 00                	add    %al,(%rax)
  f9:	12 13                	adc    (%rbx),%dl
  fb:	01 03                	add    %eax,(%rbx)
  fd:	0e                   	(bad)  
  fe:	0b 0b                	or     (%rbx),%ecx
 100:	3a 0b                	cmp    (%rbx),%cl
 102:	3b 0b                	cmp    (%rbx),%ecx
 104:	39 0b                	cmp    %ecx,(%rbx)
 106:	01 13                	add    %edx,(%rbx)
 108:	00 00                	add    %al,(%rax)
 10a:	13 0d 00 03 08 3a    	adc    0x3a080300(%rip),%ecx        # 3a080410 <Video::VideoPresenter::~VideoPresenter()+0x3a0803b0>
 110:	21 04 3b             	and    %eax,(%rbx,%rdi,1)
 113:	21 09                	and    %ecx,(%rcx)
 115:	39 0b                	cmp    %ecx,(%rbx)
 117:	49 13 38             	adc    (%r8),%rdi
 11a:	0b 00                	or     (%rax),%eax
 11c:	00 14 2e             	add    %dl,(%rsi,%rbp,1)
 11f:	01 3f                	add    %edi,(%rdi)
 121:	19 03                	sbb    %eax,(%rbx)
 123:	0e                   	(bad)  
 124:	3a 21                	cmp    (%rcx),%ah
 126:	01 3b                	add    %edi,(%rbx)
 128:	0b 39                	or     (%rcx),%edi
 12a:	21 0a                	and    %ecx,(%rdx)
 12c:	6e                   	outsb  %ds:(%rsi),(%dx)
 12d:	0e                   	(bad)  
 12e:	4c 21 01             	and    %r8,(%rcx)
 131:	4d 18 1d 13 32 21 01 	rex.WRB sbb %r11b,0x1213213(%rip)        # 121334b <Video::VideoPresenter::~VideoPresenter()+0x12132eb>
 138:	3c 19                	cmp    $0x19,%al
 13a:	64 13 01             	adc    %fs:(%rcx),%eax
 13d:	13 00                	adc    (%rax),%eax
 13f:	00 15 2e 01 3f 19    	add    %dl,0x193f012e(%rip)        # 193f0273 <Video::VideoPresenter::~VideoPresenter()+0x193f0213>
 145:	03 08                	add    (%rax),%ecx
 147:	3a 21                	cmp    (%rcx),%ah
 149:	02 3b                	add    (%rbx),%bh
 14b:	0b 39                	or     (%rcx),%edi
 14d:	21 0a                	and    %ecx,(%rdx)
 14f:	6e                   	outsb  %ds:(%rsi),(%dx)
 150:	0e                   	(bad)  
 151:	32 21                	xor    (%rcx),%ah
 153:	01 3c 19             	add    %edi,(%rcx,%rbx,1)
 156:	64 13 01             	adc    %fs:(%rcx),%eax
 159:	13 00                	adc    (%rax),%eax
 15b:	00 16                	add    %dl,(%rsi)
 15d:	2e 01 3f             	cs add %edi,(%rdi)
 160:	19 03                	sbb    %eax,(%rbx)
 162:	08 3a                	or     %bh,(%rdx)
 164:	21 02                	and    %eax,(%rdx)
 166:	3b 0b                	cmp    (%rbx),%ecx
 168:	39 0b                	cmp    %ecx,(%rbx)
 16a:	6e                   	outsb  %ds:(%rsi),(%dx)
 16b:	0e                   	(bad)  
 16c:	49 13 32             	adc    (%r10),%rsi
 16f:	21 01                	and    %eax,(%rcx)
 171:	3c 19                	cmp    $0x19,%al
 173:	64 13 01             	adc    %fs:(%rcx),%eax
 176:	13 00                	adc    (%rax),%eax
 178:	00 17                	add    %dl,(%rdi)
 17a:	2e 01 31             	cs add %esi,(%rcx)
 17d:	13 6e 0e             	adc    0xe(%rsi),%ebp
 180:	64 13 01             	adc    %fs:(%rcx),%eax
 183:	13 00                	adc    (%rax),%eax
 185:	00 18                	add    %bl,(%rax)
 187:	05 00 31 13 00       	add    $0x133100,%eax
 18c:	00 19                	add    %bl,(%rcx)
 18e:	2e 01 31             	cs add %esi,(%rcx)
 191:	13 6e 0e             	adc    0xe(%rsi),%ebp
 194:	64 13 11             	adc    %fs:(%rcx),%edx
 197:	01 12                	add    %edx,(%rdx)
 199:	07                   	(bad)  
 19a:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 19e:	01 13                	add    %edx,(%rbx)
 1a0:	00 00                	add    %al,(%rax)
 1a2:	1a 05 00 31 13 02    	sbb    0x2133100(%rip),%al        # 21332a8 <Video::VideoPresenter::~VideoPresenter()+0x2133248>
 1a8:	18 00                	sbb    %al,(%rax)
 1aa:	00 1b                	add    %bl,(%rbx)
 1ac:	1d 01 31 13 52       	sbb    $0x52133101,%eax
 1b1:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 1b7:	12 07                	adc    (%rdi),%al
 1b9:	58                   	pop    %rax
 1ba:	0b 59 0b             	or     0xb(%rcx),%ebx
 1bd:	57                   	push   %rdi
 1be:	0b 00                	or     (%rax),%eax
 1c0:	00 1c 11             	add    %bl,(%rcx,%rdx,1)
 1c3:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b14d7 <Video::VideoPresenter::~VideoPresenter()+0x30b1477>
 1c9:	1f                   	(bad)  
 1ca:	1b 1f                	sbb    (%rdi),%ebx
 1cc:	11 01                	adc    %eax,(%rcx)
 1ce:	12 07                	adc    (%rdi),%al
 1d0:	10 17                	adc    %dl,(%rdi)
 1d2:	00 00                	add    %al,(%rax)
 1d4:	1d 24 00 0b 0b       	sbb    $0xb0b0024,%eax
 1d9:	3e 0b 03             	ds or  (%rbx),%eax
 1dc:	08 00                	or     %al,(%rax)
 1de:	00 1e                	add    %bl,(%rsi)
 1e0:	35 00 49 13 00       	xor    $0x134900,%eax
 1e5:	00 1f                	add    %bl,(%rdi)
 1e7:	2e 01 3f             	cs add %edi,(%rdi)
 1ea:	19 03                	sbb    %eax,(%rbx)
 1ec:	0e                   	(bad)  
 1ed:	3a 0b                	cmp    (%rbx),%cl
 1ef:	3b 0b                	cmp    (%rbx),%ecx
 1f1:	39 0b                	cmp    %ecx,(%rbx)
 1f3:	6e                   	outsb  %ds:(%rsi),(%dx)
 1f4:	0e                   	(bad)  
 1f5:	32 0b                	xor    (%rbx),%cl
 1f7:	3c 19                	cmp    $0x19,%al
 1f9:	64 13 00             	adc    %fs:(%rax),%eax
 1fc:	00 20                	add    %ah,(%rax)
 1fe:	16                   	(bad)  
 1ff:	00 03                	add    %al,(%rbx)
 201:	0e                   	(bad)  
 202:	3a 0b                	cmp    (%rbx),%cl
 204:	3b 0b                	cmp    (%rbx),%ecx
 206:	39 0b                	cmp    %ecx,(%rbx)
 208:	49 13 00             	adc    (%r8),%rax
 20b:	00 21                	add    %ah,(%rcx)
 20d:	3b 00                	cmp    (%rax),%eax
 20f:	03 0e                	add    (%rsi),%ecx
 211:	00 00                	add    %al,(%rax)
 213:	22 39                	and    (%rcx),%bh
 215:	01 03                	add    %eax,(%rbx)
 217:	0e                   	(bad)  
 218:	3a 0b                	cmp    (%rbx),%cl
 21a:	3b 0b                	cmp    (%rbx),%ecx
 21c:	39 0b                	cmp    %ecx,(%rbx)
 21e:	01 13                	add    %edx,(%rbx)
 220:	00 00                	add    %al,(%rax)
 222:	23 02                	and    (%rdx),%eax
 224:	00 03                	add    %al,(%rbx)
 226:	0e                   	(bad)  
 227:	3c 19                	cmp    $0x19,%al
 229:	00 00                	add    %al,(%rax)
 22b:	24 02                	and    $0x2,%al
 22d:	01 03                	add    %eax,(%rbx)
 22f:	0e                   	(bad)  
 230:	0b 0b                	or     (%rbx),%ecx
 232:	3a 0b                	cmp    (%rbx),%cl
 234:	3b 0b                	cmp    (%rbx),%ecx
 236:	39 0b                	cmp    %ecx,(%rbx)
 238:	1d 13 01 13 00       	sbb    $0x130113,%eax
 23d:	00 25 2e 01 3f 19    	add    %ah,0x193f012e(%rip)        # 193f0371 <Video::VideoPresenter::~VideoPresenter()+0x193f0311>
 243:	03 0e                	add    (%rsi),%ecx
 245:	6e                   	outsb  %ds:(%rsi),(%dx)
 246:	0e                   	(bad)  
 247:	34 19                	xor    $0x19,%al
 249:	32 0b                	xor    (%rbx),%cl
 24b:	3c 19                	cmp    $0x19,%al
 24d:	64 13 01             	adc    %fs:(%rcx),%eax
 250:	13 00                	adc    (%rax),%eax
 252:	00 26                	add    %ah,(%rsi)
 254:	0d 00 03 0e 49       	or     $0x490e0300,%eax
 259:	13 38                	adc    (%rax),%edi
 25b:	0b 34 19             	or     (%rcx,%rbx,1),%esi
 25e:	32 0b                	xor    (%rbx),%cl
 260:	00 00                	add    %al,(%rax)
 262:	27                   	(bad)  
 263:	2e 01 3f             	cs add %edi,(%rdi)
 266:	19 03                	sbb    %eax,(%rbx)
 268:	0e                   	(bad)  
 269:	3a 0b                	cmp    (%rbx),%cl
 26b:	3b 0b                	cmp    (%rbx),%ecx
 26d:	39 0b                	cmp    %ecx,(%rbx)
 26f:	6e                   	outsb  %ds:(%rsi),(%dx)
 270:	0e                   	(bad)  
 271:	4c 0b 4d 18          	or     0x18(%rbp),%r9
 275:	1d 13 32 0b 3c       	sbb    $0x3c0b3213,%eax
 27a:	19 64 13 00          	sbb    %esp,0x0(%rbx,%rdx,1)
 27e:	00 28                	add    %ch,(%rax)
 280:	2f                   	(bad)  
 281:	00 03                	add    %al,(%rbx)
 283:	08 49 13             	or     %cl,0x13(%rcx)
 286:	00 00                	add    %al,(%rax)
 288:	29 13                	sub    %edx,(%rbx)
 28a:	00 03                	add    %al,(%rbx)
 28c:	0e                   	(bad)  
 28d:	3c 19                	cmp    $0x19,%al
 28f:	00 00                	add    %al,(%rax)
 291:	2a 15 01 49 13 01    	sub    0x1134901(%rip),%dl        # 1134b98 <Video::VideoPresenter::~VideoPresenter()+0x1134b38>
 297:	13 00                	adc    (%rax),%eax
 299:	00 2b                	add    %ch,(%rbx)
 29b:	18 00                	sbb    %al,(%rax)
 29d:	00 00                	add    %al,(%rax)
 29f:	2c 0f                	sub    $0xf,%al
 2a1:	00 0b                	add    %cl,(%rbx)
 2a3:	0b 03                	or     (%rbx),%eax
 2a5:	0e                   	(bad)  
 2a6:	49 13 00             	adc    (%r8),%rax
 2a9:	00 2d 1d 01 31 13    	add    %ch,0x1331011d(%rip)        # 133103cc <Video::VideoPresenter::~VideoPresenter()+0x1331036c>
 2af:	52                   	push   %rdx
 2b0:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%rax)
 2b6:	58                   	pop    %rax
 2b7:	0b 59 0b             	or     0xb(%rcx),%ebx
 2ba:	57                   	push   %rdi
 2bb:	0b 00                	or     (%rax),%eax
 2bd:	00 2e                	add    %ch,(%rsi)
 2bf:	2e 01 47 13          	cs add %eax,0x13(%rdi)
 2c3:	64 13 20             	adc    %fs:(%rax),%esp
 2c6:	0b 00                	or     (%rax),%eax
	...

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
Video::VideoPresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }
   0:	26 00 00             	es add %al,(%rax)
   3:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 809 <Video::VideoPresenter::~VideoPresenter()+0x7a9>
   9:	00 00                	add    %al,(%rax)
   b:	00 00                	add    %al,(%rax)
   d:	01 04 6d 74 03 75 08 	add    %eax,0x8750374(,%rbp,2)
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23
    }
  14:	9f                   	lahf   
  15:	00 01                	add    %al,(%rcx)
  17:	01 04 6d 74 03 75 1c 	add    %eax,0x1c750374(,%rbp,2)
  1e:	9f                   	lahf   
  1f:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:28
    }
  21:	00 04 45 5b 03 75 08 	add    %al,0x875035b(,%rax,2)
  28:	9f                   	lahf   
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
	...
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23
    }
  18:	75 00                	jne    1a <.debug_aranges+0x1a>
	...

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }
   0:	0f 00 00             	sldt   (%rax)
   3:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 809 <Video::VideoPresenter::~VideoPresenter()+0x7a9>
   9:	00 00                	add    %al,(%rax)
   b:	00 04 3a             	add    %al,(%rdx,%rdi,1)
   e:	42 04 45             	rex.X add $0x45,%al
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23
    }
  11:	5b                   	pop    %rbx
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }
   0:	ca 00 00             	lret   $0x0
   3:	00 05 00 08 00 4e    	add    %al,0x4e000800(%rip)        # 4e000809 <Video::VideoPresenter::~VideoPresenter()+0x4e0007a9>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti    
Video::VideoPresenter::Text(Video::Point, char const*, int):
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23
    }
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
Video::VideoPresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:28
    }
  20:	1f                   	(bad)  
  21:	05 00 00 00 00       	add    $0x0,%eax
	...
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
    VideoPresenter::VideoPresenter()
  36:	02 01                	add    (%rcx),%al
  38:	1f                   	(bad)  
  39:	02 0f                	add    (%rdi),%cl
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:28
        m_Front = NULL;
  3b:	06                   	(bad)  
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	01 00                	add    %eax,(%rax)
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
  42:	00 00                	add    %al,(%rax)
  44:	00 01                	add    %al,(%rcx)
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:29
        m_Back = NULL;
  46:	00 00                	add    %al,(%rax)
  48:	00 00                	add    %al,(%rax)
  4a:	02 00                	add    (%rax),%al
  4c:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:30
        m_Count = 0;
  4e:	00 02                	add    %al,(%rdx)
  50:	00 00                	add    %al,(%rax)
  52:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:31
        m_Lock.m_Lock = 0;
  54:	03 00                	add    (%rax),%eax
  56:	00 00                	add    %al,(%rax)
  58:	00 04 05 05 00 09 02 	add    %al,0x2090005(,%rax,1)
	...
Video::VideoPresenter::~VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:10
    VideoPresenter::~VideoPresenter()
  67:	03 0f                	add    (%rdi),%ecx
  69:	01 06                	add    %eax,(%rsi)
  6b:	14 06                	adc    $0x6,%al
Spinlock::Release():
/home/umarin/source/niteOS/Kernel/include/Utils/Spinlock.h:59
  6d:	f5                   	cmc    
  6e:	06                   	(bad)  
  6f:	14 06                	adc    $0x6,%al
  71:	f5                   	cmc    
  72:	06                   	(bad)  
  73:	14 06                	adc    $0x6,%al
  75:	03 69 f2             	add    -0xe(%rcx),%ebp
  78:	05 24 06 01 04       	add    $0x4010624,%eax
  7d:	02 05 11 03 17 9e    	add    -0x61e8fcef(%rip),%al        # ffffffff9e170394 <Video::VideoPresenter::~VideoPresenter()+0xffffffff9e170334>
  83:	04 01                	add    $0x1,%al
  85:	05 24 03 69 82       	add    $0x82690324,%eax
  8a:	04 02                	add    $0x2,%al
  8c:	05 05 06 03 15       	add    $0x15030605,%eax
  91:	3c 05                	cmp    $0x5,%al
  93:	10 06                	adc    %al,(%rsi)
  95:	15 05 11 83 05       	adc    $0x5831105,%eax
  9a:	17                   	(bad)  
  9b:	75 74                	jne    111 <Video::VideoPresenter::~VideoPresenter()+0xb1>
  9d:	04 01                	add    $0x1,%al
  9f:	05 05 03 69 01       	add    $0x1690305,%eax
  a4:	06                   	(bad)  
  a5:	5a                   	pop    %rdx
  a6:	05 25 06 01 04       	add    $0x4010625,%eax
  ab:	02 05 05 06 03 18    	add    0x18030605(%rip),%al        # 180306b6 <Video::VideoPresenter::~VideoPresenter()+0x18030656>
  b1:	c8 04 03 05          	enter  $0x304,$0x5
  b5:	0a 03                	or     (%rbx),%al
  b7:	19 01                	sbb    %eax,(%rcx)
  b9:	05 16 01 01 05       	add    $0x5010116,%eax
  be:	2a 74 06 01          	sub    0x1(%rsi,%rax,1),%dh
  c2:	04 01                	add    $0x1,%al
  c4:	05 05 03 52 01       	add    $0x1520305,%eax
  c9:	02 01                	add    (%rcx),%al
  cb:	00 01                	add    %al,(%rcx)
  cd:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
Video::VideoPresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }
   0:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
   2:	73 65                	jae    69 <.debug_str+0x69>
   4:	72 74                	jb     7a <.debug_str+0x7a>
   6:	41 74 00             	rex.B je 9 <.debug_str+0x9>
   9:	5f                   	pop    %rdi
   a:	5a                   	pop    %rdx
   b:	4e 31 30             	rex.WRX xor %r14,(%rax)
   e:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
  15:	69 
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23
    }
  16:	73 74                	jae    8c <.debug_str+0x8c>
  18:	49 50                	rex.WB push %r8
  1a:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
Video::VideoPresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:28
    }
  20:	6f                   	outsl  %ds:(%rsi),(%dx)
  21:	31 31                	xor    %esi,(%rcx)
  23:	56                   	push   %rsi
  24:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
  2b:	70 
  2c:	75 74                	jne    a2 <.debug_str+0xa2>
  2e:	45                   	rex.RB
  2f:	45 35 43 6c 65 61    	rex.RB xor $0x61656c43,%eax
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
    VideoPresenter::VideoPresenter()
  35:	72 45                	jb     7c <.debug_str+0x7c>
  37:	76 00                	jbe    39 <.debug_str+0x39>
  39:	5f                   	pop    %rdi
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:28
        m_Front = NULL;
  3a:	5a                   	pop    %rdx
  3b:	4e 31 30             	rex.WRX xor %r14,(%rax)
  3e:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
  45:	69 
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:29
        m_Back = NULL;
  46:	73 74                	jae    bc <.debug_str+0xbc>
  48:	49 50                	rex.WB push %r8
  4a:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:30
        m_Count = 0;
  50:	6f                   	outsl  %ds:(%rsi),(%dx)
  51:	31 31                	xor    %esi,(%rcx)
  53:	56                   	push   %rsi
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:31
        m_Lock.m_Lock = 0;
  54:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
  5b:	70 
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:8
    }
  5c:	75 74                	jne    d2 <.debug_str+0xd2>
  5e:	45                   	rex.RB
  5f:	45 37                	rex.RB (bad) 
Video::VideoPresenter::~VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:10
    VideoPresenter::~VideoPresenter()
  61:	46 6f                	rex.RX outsl %ds:(%rsi),(%dx)
  63:	72 45                	jb     aa <.debug_str+0xaa>
  65:	61                   	(bad)  
  66:	63 68 45             	movsxd 0x45(%rax),%ebp
  69:	76 00                	jbe    6b <.debug_str+0x6b>
  6b:	64 65 63 6c 74 79    	fs movsxd %gs:0x79(%rsp,%rsi,2),%ebp
Spinlock::Release():
/home/umarin/source/niteOS/Kernel/include/Utils/Spinlock.h:59
  71:	70 65                	jo     d8 <.debug_str+0xd8>
  73:	28 6e 75             	sub    %ch,0x75(%rsi)
  76:	6c                   	insb   (%dx),%es:(%rdi)
  77:	6c                   	insb   (%dx),%es:(%rdi)
  78:	70 74                	jo     ee <.debug_str+0xee>
  7a:	72 29                	jb     a5 <.debug_str+0xa5>
  7c:	00 74 65 78          	add    %dh,0x78(%rbp,%riz,2)
  80:	74 00                	je     82 <.debug_str+0x82>
  82:	6d                   	insl   (%dx),%es:(%rdi)
  83:	5f                   	pop    %rdi
  84:	46 72 6f             	rex.RX jb f6 <.debug_str+0xf6>
  87:	6e                   	outsb  %ds:(%rsi),(%dx)
  88:	74 00                	je     8a <.debug_str+0x8a>
  8a:	5f                   	pop    %rdi
  8b:	76 70                	jbe    fd <.debug_str+0xfd>
  8d:	74 72                	je     101 <.debug_str+0x101>
  8f:	2e 56                	cs push %rsi
  91:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
  98:	73 
  99:	65 6e                	outsb  %gs:(%rsi),(%dx)
  9b:	74 65                	je     102 <.debug_str+0x102>
  9d:	72 00                	jb     9f <.debug_str+0x9f>
  9f:	73 68                	jae    109 <.debug_str+0x109>
  a1:	6f                   	outsl  %ds:(%rsi),(%dx)
  a2:	72 74                	jb     118 <.debug_str+0x118>
  a4:	20 69 6e             	and    %ch,0x6e(%rcx)
  a7:	74 00                	je     a9 <.debug_str+0xa9>
  a9:	5f                   	pop    %rdi
  aa:	5a                   	pop    %rdx
  ab:	4e 38 53 70          	rex.WRX cmp %r10b,0x70(%rbx)
  af:	69 6e 6c 6f 63 6b 37 	imul   $0x376b636f,0x6c(%rsi),%ebp
  b6:	52                   	push   %rdx
  b7:	65 6c                	gs insb (%dx),%es:(%rdi)
  b9:	65 61                	gs (bad) 
  bb:	73 65                	jae    122 <.debug_str+0x122>
  bd:	45 76 00             	rex.RB jbe c0 <.debug_str+0xc0>
  c0:	5f                   	pop    %rdi
  c1:	5a                   	pop    %rdx
  c2:	4e 31 30             	rex.WRX xor %r14,(%rax)
  c5:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
  cc:	69 
  cd:	73 74                	jae    143 <.debug_str+0x143>
  cf:	49 50                	rex.WB push %r8
  d1:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
  d7:	6f                   	outsl  %ds:(%rsi),(%dx)
  d8:	31 31                	xor    %esi,(%rcx)
  da:	56                   	push   %rsi
  db:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
  e2:	70 
  e3:	75 74                	jne    159 <.debug_str+0x159>
  e5:	45                   	rex.RB
  e6:	45 38 43 6f          	cmp    %r8b,0x6f(%r11)
  ea:	6e                   	outsb  %ds:(%rsi),(%dx)
  eb:	74 61                	je     14e <.debug_str+0x14e>
  ed:	69 6e 73 45 50 38 4c 	imul   $0x4c385045,0x73(%rsi),%ebp
  f4:	69 73 74 4e 6f 64 65 	imul   $0x65646f4e,0x74(%rbx),%esi
  fb:	49 53                	rex.WB push %r11
  fd:	32 5f 45             	xor    0x45(%rdi),%bl
 100:	00 47 4e             	add    %al,0x4e(%rdi)
 103:	55                   	push   %rbp
 104:	20 43 2b             	and    %al,0x2b(%rbx)
 107:	2b 31                	sub    (%rcx),%esi
 109:	37                   	(bad)  
 10a:	20 31                	and    %dh,(%rcx)
 10c:	31 2e                	xor    %ebp,(%rsi)
 10e:	32 2e                	xor    (%rsi),%ch
 110:	30 20                	xor    %ah,(%rax)
 112:	2d 6d 6e 6f 2d       	sub    $0x2d6f6e6d,%eax
 117:	6d                   	insl   (%dx),%es:(%rdi)
 118:	6d                   	insl   (%dx),%es:(%rdi)
 119:	78 20                	js     13b <.debug_str+0x13b>
 11b:	2d 6d 6e 6f 2d       	sub    $0x2d6f6e6d,%eax
 120:	73 73                	jae    195 <.debug_str+0x195>
 122:	65 20 2d 6d 6e 6f 2d 	and    %ch,%gs:0x2d6f6e6d(%rip)        # 2d6f6f96 <Video::VideoPresenter::~VideoPresenter()+0x2d6f6f36>
 129:	73 73                	jae    19e <.debug_str+0x19e>
 12b:	65 32 20             	xor    %gs:(%rax),%ah
 12e:	2d 6d 63 6d 6f       	sub    $0x6f6d636d,%eax
 133:	64 65 6c             	fs gs insb (%dx),%es:(%rdi)
 136:	3d 6c 61 72 67       	cmp    $0x6772616c,%eax
 13b:	65 20 2d 6d 6e 6f 2d 	and    %ch,%gs:0x2d6f6e6d(%rip)        # 2d6f6faf <Video::VideoPresenter::~VideoPresenter()+0x2d6f6f4f>
 142:	72 65                	jb     1a9 <.debug_str+0x1a9>
 144:	64 2d 7a 6f 6e 65    	fs sub $0x656e6f7a,%eax
 14a:	20 2d 6d 74 75 6e    	and    %ch,0x6e75746d(%rip)        # 6e7575bd <Video::VideoPresenter::~VideoPresenter()+0x6e75755d>
 150:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 156:	72 69                	jb     1c1 <.debug_str+0x1c1>
 158:	63 20                	movsxd (%rax),%esp
 15a:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 15f:	68 3d 78 38 36       	push   $0x3638783d
 164:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 169:	67 20 2d 4f 32 20 2d 	and    %ch,0x2d20324f(%eip)        # 2d2033bf <Video::VideoPresenter::~VideoPresenter()+0x2d20335f>
 170:	66 66 72 65          	data16 data16 jb 1d9 <.debug_str+0x1d9>
 174:	65 73 74             	gs jae 1eb <.debug_str+0x1eb>
 177:	61                   	(bad)  
 178:	6e                   	outsb  %ds:(%rsi),(%dx)
 179:	64 69 6e 67 20 2d 66 	imul   $0x69662d20,%fs:0x67(%rsi),%ebp
 180:	69 
 181:	6e                   	outsb  %ds:(%rsi),(%dx)
 182:	6c                   	insb   (%dx),%es:(%rdi)
 183:	69 6e 65 2d 66 75 6e 	imul   $0x6e75662d,0x65(%rsi),%ebp
 18a:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
 18e:	6e                   	outsb  %ds:(%rsi),(%dx)
 18f:	73 20                	jae    1b1 <.debug_str+0x1b1>
 191:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
 196:	65 78 63             	gs js  1fc <.debug_str+0x1fc>
 199:	65 70 74             	gs jo  210 <.debug_str+0x210>
 19c:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%rdi),%ebp
 1a3:	6e                   	outsb  %ds:(%rsi),(%dx)
 1a4:	6f                   	outsl  %ds:(%rsi),(%dx)
 1a5:	2d 72 74 74 69       	sub    $0x69747472,%eax
 1aa:	20 2d 66 6e 6f 2d    	and    %ch,0x2d6f6e66(%rip)        # 2d6f7016 <Video::VideoPresenter::~VideoPresenter()+0x2d6f6fb6>
 1b0:	70 69                	jo     21b <.debug_str+0x21b>
 1b2:	63 00                	movsxd (%rax),%eax
 1b4:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
 1b6:	6e                   	outsb  %ds:(%rsi),(%dx)
 1b7:	74 61                	je     21a <.debug_str+0x21a>
 1b9:	69 6e 73 00 5f 5a 4e 	imul   $0x4e5a5f00,0x73(%rsi),%ebp
 1c0:	31 30                	xor    %esi,(%rax)
 1c2:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 1c9:	69 
 1ca:	73 74                	jae    240 <.debug_str+0x240>
 1cc:	49 50                	rex.WB push %r8
 1ce:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 1d4:	6f                   	outsl  %ds:(%rsi),(%dx)
 1d5:	31 31                	xor    %esi,(%rcx)
 1d7:	56                   	push   %rsi
 1d8:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 1df:	70 
 1e0:	75 74                	jne    256 <.debug_str+0x256>
 1e2:	45                   	rex.RB
 1e3:	45 33 41 64          	xor    0x64(%r9),%r8d
 1e7:	64 45 50             	fs rex.RB push %r8
 1ea:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
 1ee:	74 4e                	je     23e <.debug_str+0x23e>
 1f0:	6f                   	outsl  %ds:(%rsi),(%dx)
 1f1:	64 65 49 53          	fs gs rex.WB push %r11
 1f5:	32 5f 45             	xor    0x45(%rdi),%bl
 1f8:	00 5f 5a             	add    %bl,0x5a(%rdi)
 1fb:	4e 31 30             	rex.WRX xor %r14,(%rax)
 1fe:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 205:	69 
 206:	73 74                	jae    27c <.debug_str+0x27c>
 208:	49 50                	rex.WB push %r8
 20a:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 210:	6f                   	outsl  %ds:(%rsi),(%dx)
 211:	31 31                	xor    %esi,(%rcx)
 213:	56                   	push   %rsi
 214:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 21b:	70 
 21c:	75 74                	jne    292 <.debug_str+0x292>
 21e:	45                   	rex.RB
 21f:	45                   	rex.RB
 220:	36 52                	ss push %rdx
 222:	65 6d                	gs insl (%dx),%es:(%rdi)
 224:	6f                   	outsl  %ds:(%rsi),(%dx)
 225:	76 65                	jbe    28c <.debug_str+0x28c>
 227:	45 6a 00             	rex.RB push $0x0
 22a:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 22c:	65 61                	gs (bad) 
 22e:	72 00                	jb     230 <.debug_str+0x230>
 230:	52                   	push   %rdx
 231:	65 63 74 61 6e       	movsxd %gs:0x6e(%rcx,%riz,2),%esi
 236:	67 6c                	insb   (%dx),%es:(%edi)
 238:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 23c:	4e 31 30             	rex.WRX xor %r14,(%rax)
 23f:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 246:	69 
 247:	73 74                	jae    2bd <.debug_str+0x2bd>
 249:	49 50                	rex.WB push %r8
 24b:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 251:	6f                   	outsl  %ds:(%rsi),(%dx)
 252:	31 31                	xor    %esi,(%rcx)
 254:	56                   	push   %rsi
 255:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 25c:	70 
 25d:	75 74                	jne    2d3 <.debug_str+0x2d3>
 25f:	45                   	rex.RB
 260:	45                   	rex.RB
 261:	43 32 45 76          	rex.XB xor 0x76(%r13),%al
 265:	00 5f 5a             	add    %bl,0x5a(%rdi)
 268:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 26e:	6f                   	outsl  %ds:(%rsi),(%dx)
 26f:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 272:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 279:	73 
 27a:	65 6e                	outsb  %gs:(%rsi),(%dx)
 27c:	74 65                	je     2e3 <.debug_str+0x2e3>
 27e:	72 43                	jb     2c3 <.debug_str+0x2c3>
 280:	34 45                	xor    $0x45,%al
 282:	76 00                	jbe    284 <.debug_str+0x284>
 284:	41 63 71 75          	movsxd 0x75(%r9),%esi
 288:	69 72 65 00 5f 5a 4e 	imul   $0x4e5a5f00,0x65(%rdx),%esi
 28f:	31 30                	xor    %esi,(%rax)
 291:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 298:	69 
 299:	73 74                	jae    30f <.debug_str+0x30f>
 29b:	49 50                	rex.WB push %r8
 29d:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 2a3:	6f                   	outsl  %ds:(%rsi),(%dx)
 2a4:	31 31                	xor    %esi,(%rcx)
 2a6:	56                   	push   %rsi
 2a7:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 2ae:	70 
 2af:	75 74                	jne    325 <.debug_str+0x325>
 2b1:	45                   	rex.RB
 2b2:	45                   	rex.RB
 2b3:	44 34 45             	rex.R xor $0x45,%al
 2b6:	76 00                	jbe    2b8 <.debug_str+0x2b8>
 2b8:	56                   	push   %rsi
 2b9:	69 64 65 6f 00 54 65 	imul   $0x78655400,0x6f(%rbp,%riz,2),%esp
 2c0:	78 
 2c1:	74 00                	je     2c3 <.debug_str+0x2c3>
 2c3:	4c 69 73 74 4e 6f 64 	imul   $0x65646f4e,0x74(%rbx),%r14
 2ca:	65 
 2cb:	3c 56                	cmp    $0x56,%al
 2cd:	69 64 65 6f 3a 3a 56 	imul   $0x69563a3a,0x6f(%rbp,%riz,2),%esp
 2d4:	69 
 2d5:	64 65 6f             	fs outsl %gs:(%rsi),(%dx)
 2d8:	4f 75 74             	rex.WRXB jne 34f <.debug_str+0x34f>
 2db:	70 75                	jo     352 <.debug_str+0x352>
 2dd:	74 2a                	je     309 <.debug_str+0x309>
 2df:	3e 00 5f 5a          	ds add %bl,0x5a(%rdi)
 2e3:	4e 31 30             	rex.WRX xor %r14,(%rax)
 2e6:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 2ed:	69 
 2ee:	73 74                	jae    364 <.debug_str+0x364>
 2f0:	49 50                	rex.WB push %r8
 2f2:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 2f8:	6f                   	outsl  %ds:(%rsi),(%dx)
 2f9:	31 31                	xor    %esi,(%rcx)
 2fb:	56                   	push   %rsi
 2fc:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 303:	70 
 304:	75 74                	jne    37a <.debug_str+0x37a>
 306:	45                   	rex.RB
 307:	45 38 43 6f          	cmp    %r8b,0x6f(%r11)
 30b:	6e                   	outsb  %ds:(%rsi),(%dx)
 30c:	74 61                	je     36f <.debug_str+0x36f>
 30e:	69 6e 73 45 52 53 32 	imul   $0x32535245,0x73(%rsi),%ebp
 315:	5f                   	pop    %rdi
 316:	00 62 6f             	add    %ah,0x6f(%rdx)
 319:	6f                   	outsl  %ds:(%rsi),(%dx)
 31a:	6c                   	insb   (%dx),%es:(%rdi)
 31b:	00 77 69             	add    %dh,0x69(%rdi)
 31e:	64 74 68             	fs je  389 <.debug_str+0x389>
 321:	00 56 69             	add    %dl,0x69(%rsi)
 324:	64 65 6f             	fs outsl %gs:(%rsi),(%dx)
 327:	50                   	push   %rax
 328:	72 65                	jb     38f <.debug_str+0x38f>
 32a:	73 65                	jae    391 <.debug_str+0x391>
 32c:	6e                   	outsb  %ds:(%rsi),(%dx)
 32d:	74 65                	je     394 <.debug_str+0x394>
 32f:	72 00                	jb     331 <.debug_str+0x331>
 331:	56                   	push   %rsi
 332:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 339:	70 
 33a:	75 74                	jne    3b0 <.debug_str+0x3b0>
 33c:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 340:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 345:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 349:	74 00                	je     34b <.debug_str+0x34b>
 34b:	5f                   	pop    %rdi
 34c:	5a                   	pop    %rdx
 34d:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 353:	6f                   	outsl  %ds:(%rsi),(%dx)
 354:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 357:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 35e:	73 
 35f:	65 6e                	outsb  %gs:(%rsi),(%dx)
 361:	74 65                	je     3c8 <.debug_str+0x3c8>
 363:	72 44                	jb     3a9 <.debug_str+0x3a9>
 365:	32 45 76             	xor    0x76(%rbp),%al
 368:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 36c:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 370:	74 00                	je     372 <.debug_str+0x372>
 372:	5f                   	pop    %rdi
 373:	5a                   	pop    %rdx
 374:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 37a:	6f                   	outsl  %ds:(%rsi),(%dx)
 37b:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 37e:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 385:	73 
 386:	65 6e                	outsb  %gs:(%rsi),(%dx)
 388:	74 65                	je     3ef <.debug_str+0x3ef>
 38a:	72 43                	jb     3cf <.debug_str+0x3cf>
 38c:	34 45                	xor    $0x45,%al
 38e:	52                   	push   %rdx
 38f:	4b 53                	rex.WXB push %r11
 391:	30 5f 00             	xor    %bl,0x0(%rdi)
 394:	5f                   	pop    %rdi
 395:	5a                   	pop    %rdx
 396:	4e 31 30             	rex.WRX xor %r14,(%rax)
 399:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 3a0:	69 
 3a1:	73 74                	jae    417 <.debug_str+0x417>
 3a3:	49 50                	rex.WB push %r8
 3a5:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 3ab:	6f                   	outsl  %ds:(%rsi),(%dx)
 3ac:	31 31                	xor    %esi,(%rcx)
 3ae:	56                   	push   %rsi
 3af:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 3b6:	70 
 3b7:	75 74                	jne    42d <.debug_str+0x42d>
 3b9:	45                   	rex.RB
 3ba:	45 37                	rex.RB (bad) 
 3bc:	45 78 74             	rex.RB js 433 <.debug_str+0x433>
 3bf:	72 61                	jb     422 <.debug_str+0x422>
 3c1:	63 74 45 76          	movsxd 0x76(%rbp,%rax,2),%esi
 3c5:	00 5f 5a             	add    %bl,0x5a(%rdi)
 3c8:	4e 31 30             	rex.WRX xor %r14,(%rax)
 3cb:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 3d2:	69 
 3d3:	73 74                	jae    449 <.debug_str+0x449>
 3d5:	49 50                	rex.WB push %r8
 3d7:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 3dd:	6f                   	outsl  %ds:(%rsi),(%dx)
 3de:	31 31                	xor    %esi,(%rcx)
 3e0:	56                   	push   %rsi
 3e1:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 3e8:	70 
 3e9:	75 74                	jne    45f <.debug_str+0x45f>
 3eb:	45                   	rex.RB
 3ec:	45                   	rex.RB
 3ed:	43 34 45             	rex.XB xor $0x45,%al
 3f0:	76 00                	jbe    3f2 <.debug_str+0x3f2>
 3f2:	5f                   	pop    %rdi
 3f3:	5a                   	pop    %rdx
 3f4:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 3fa:	6f                   	outsl  %ds:(%rsi),(%dx)
 3fb:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 3fe:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 405:	73 
 406:	65 6e                	outsb  %gs:(%rsi),(%dx)
 408:	74 65                	je     46f <.debug_str+0x46f>
 40a:	72 35                	jb     441 <.debug_str+0x441>
 40c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 40e:	65 61                	gs (bad) 
 410:	72 45                	jb     457 <.debug_str+0x457>
 412:	76 00                	jbe    414 <.debug_str+0x414>
 414:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 41b:	69 
 41c:	73 74                	jae    492 <.debug_str+0x492>
 41e:	00 5f 5a             	add    %bl,0x5a(%rdi)
 421:	4e 38 53 70          	rex.WRX cmp %r10b,0x70(%rbx)
 425:	69 6e 6c 6f 63 6b 37 	imul   $0x376b636f,0x6c(%rsi),%ebp
 42c:	41 63 71 75          	movsxd 0x75(%r9),%esi
 430:	69 72 65 45 76 00 5f 	imul   $0x5f007645,0x65(%rdx),%esi
 437:	5a                   	pop    %rdx
 438:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 43e:	6f                   	outsl  %ds:(%rsi),(%dx)
 43f:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 442:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 449:	73 
 44a:	65 6e                	outsb  %gs:(%rsi),(%dx)
 44c:	74 65                	je     4b3 <.debug_str+0x4b3>
 44e:	72 43                	jb     493 <.debug_str+0x493>
 450:	32 45 76             	xor    0x76(%rbp),%al
 453:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 457:	67 20 64 6f 75       	and    %ah,0x75(%edi,%ebp,2)
 45c:	62                   	(bad)  
 45d:	6c                   	insb   (%dx),%es:(%rdi)
 45e:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 462:	4e 31 30             	rex.WRX xor %r14,(%rax)
 465:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 46c:	69 
 46d:	73 74                	jae    4e3 <.debug_str+0x4e3>
 46f:	49 50                	rex.WB push %r8
 471:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 477:	6f                   	outsl  %ds:(%rsi),(%dx)
 478:	31 31                	xor    %esi,(%rcx)
 47a:	56                   	push   %rsi
 47b:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 482:	70 
 483:	75 74                	jne    4f9 <.debug_str+0x4f9>
 485:	45                   	rex.RB
 486:	45                   	rex.RB
 487:	44 32 45 76          	xor    0x76(%rbp),%r8b
 48b:	00 5f 5a             	add    %bl,0x5a(%rdi)
 48e:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 494:	6f                   	outsl  %ds:(%rsi),(%dx)
 495:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 498:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 49f:	73 
 4a0:	65 6e                	outsb  %gs:(%rsi),(%dx)
 4a2:	74 65                	je     509 <.debug_str+0x509>
 4a4:	72 44                	jb     4ea <.debug_str+0x4ea>
 4a6:	34 45                	xor    $0x45,%al
 4a8:	76 00                	jbe    4aa <.debug_str+0x4aa>
 4aa:	75 6e                	jne    51a <.debug_str+0x51a>
 4ac:	73 69                	jae    517 <.debug_str+0x517>
 4ae:	67 6e                	outsb  %ds:(%esi),(%dx)
 4b0:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 4b5:	61                   	(bad)  
 4b6:	72 00                	jb     4b8 <.debug_str+0x4b8>
 4b8:	73 69                	jae    523 <.debug_str+0x523>
 4ba:	67 6e                	outsb  %ds:(%esi),(%dx)
 4bc:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 4c1:	61                   	(bad)  
 4c2:	72 00                	jb     4c4 <.debug_str+0x4c4>
 4c4:	75 69                	jne    52f <.debug_str+0x52f>
 4c6:	6e                   	outsb  %ds:(%rsi),(%dx)
 4c7:	74 33                	je     4fc <.debug_str+0x4fc>
 4c9:	32 5f 74             	xor    0x74(%rdi),%bl
 4cc:	00 6d 5f             	add    %ch,0x5f(%rbp)
 4cf:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
 4d1:	75 6e                	jne    541 <.debug_str+0x541>
 4d3:	74 00                	je     4d5 <.debug_str+0x4d5>
 4d5:	75 6e                	jne    545 <.debug_str+0x545>
 4d7:	73 69                	jae    542 <.debug_str+0x542>
 4d9:	67 6e                	outsb  %ds:(%esi),(%dx)
 4db:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 4e0:	74 00                	je     4e2 <.debug_str+0x4e2>
 4e2:	5f                   	pop    %rdi
 4e3:	5a                   	pop    %rdx
 4e4:	4e 31 30             	rex.WRX xor %r14,(%rax)
 4e7:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 4ee:	69 
 4ef:	73 74                	jae    565 <.debug_str+0x565>
 4f1:	49 50                	rex.WB push %r8
 4f3:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 4f9:	6f                   	outsl  %ds:(%rsi),(%dx)
 4fa:	31 31                	xor    %esi,(%rcx)
 4fc:	56                   	push   %rsi
 4fd:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 504:	70 
 505:	75 74                	jne    57b <.debug_str+0x57b>
 507:	45                   	rex.RB
 508:	45 38 49 6e          	cmp    %r9b,0x6e(%r9)
 50c:	73 65                	jae    573 <.debug_str+0x573>
 50e:	72 74                	jb     584 <.debug_str+0x584>
 510:	41 74 45             	rex.B je 558 <.debug_str+0x558>
 513:	50                   	push   %rax
 514:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
 518:	74 4e                	je     568 <.debug_str+0x568>
 51a:	6f                   	outsl  %ds:(%rsi),(%dx)
 51b:	64 65 49 53          	fs gs rex.WB push %r11
 51f:	32 5f 45             	xor    0x45(%rdi),%bl
 522:	6a 00                	push   $0x0
 524:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
 526:	75 6e                	jne    596 <.debug_str+0x596>
 528:	74 00                	je     52a <.debug_str+0x52a>
 52a:	6d                   	insl   (%dx),%es:(%rdi)
 52b:	5f                   	pop    %rdi
 52c:	4c 6f                	rex.WR outsl %ds:(%rsi),(%dx)
 52e:	63 6b 00             	movsxd 0x0(%rbx),%ebp
 531:	5f                   	pop    %rdi
 532:	5a                   	pop    %rdx
 533:	4e 31 30             	rex.WRX xor %r14,(%rax)
 536:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 53d:	69 
 53e:	73 74                	jae    5b4 <.debug_str+0x5b4>
 540:	49 50                	rex.WB push %r8
 542:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 548:	6f                   	outsl  %ds:(%rsi),(%dx)
 549:	31 31                	xor    %esi,(%rcx)
 54b:	56                   	push   %rsi
 54c:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 553:	70 
 554:	75 74                	jne    5ca <.debug_str+0x5ca>
 556:	45                   	rex.RB
 557:	45 33 41 64          	xor    0x64(%r9),%r8d
 55b:	64 45 53             	fs rex.RB push %r11
 55e:	32 5f 00             	xor    0x0(%rdi),%bl
 561:	73 68                	jae    5cb <.debug_str+0x5cb>
 563:	6f                   	outsl  %ds:(%rsi),(%dx)
 564:	72 74                	jb     5da <.debug_str+0x5da>
 566:	20 75 6e             	and    %dh,0x6e(%rbp)
 569:	73 69                	jae    5d4 <.debug_str+0x5d4>
 56b:	67 6e                	outsb  %ds:(%esi),(%dx)
 56d:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 572:	74 00                	je     574 <.debug_str+0x574>
 574:	6f                   	outsl  %ds:(%rsi),(%dx)
 575:	70 65                	jo     5dc <.debug_str+0x5dc>
 577:	72 61                	jb     5da <.debug_str+0x5da>
 579:	74 6f                	je     5ea <.debug_str+0x5ea>
 57b:	72 5b                	jb     5d8 <.debug_str+0x5d8>
 57d:	5d                   	pop    %rbp
 57e:	00 7e 56             	add    %bh,0x56(%rsi)
 581:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 588:	73 
 589:	65 6e                	outsb  %gs:(%rsi),(%dx)
 58b:	74 65                	je     5f2 <.debug_str+0x5f2>
 58d:	72 00                	jb     58f <.debug_str+0x58f>
 58f:	63 68 61             	movsxd 0x61(%rax),%ebp
 592:	72 00                	jb     594 <.debug_str+0x594>
 594:	5f                   	pop    %rdi
 595:	5a                   	pop    %rdx
 596:	4e 31 30             	rex.WRX xor %r14,(%rax)
 599:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 5a0:	69 
 5a1:	73 74                	jae    617 <.debug_str+0x617>
 5a3:	49 50                	rex.WB push %r8
 5a5:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 5ab:	6f                   	outsl  %ds:(%rsi),(%dx)
 5ac:	31 31                	xor    %esi,(%rcx)
 5ae:	56                   	push   %rsi
 5af:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 5b6:	70 
 5b7:	75 74                	jne    62d <.debug_str+0x62d>
 5b9:	45                   	rex.RB
 5ba:	45 35 46 69 72 73    	rex.RB xor $0x73726946,%eax
 5c0:	74 45                	je     607 <.debug_str+0x607>
 5c2:	76 00                	jbe    5c4 <.debug_str+0x5c4>
 5c4:	5f                   	pop    %rdi
 5c5:	5a                   	pop    %rdx
 5c6:	4e 31 30             	rex.WRX xor %r14,(%rax)
 5c9:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 5d0:	69 
 5d1:	73 74                	jae    647 <.debug_str+0x647>
 5d3:	49 50                	rex.WB push %r8
 5d5:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 5db:	6f                   	outsl  %ds:(%rsi),(%dx)
 5dc:	31 31                	xor    %esi,(%rcx)
 5de:	56                   	push   %rsi
 5df:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 5e6:	70 
 5e7:	75 74                	jne    65d <.debug_str+0x65d>
 5e9:	45                   	rex.RB
 5ea:	45 33 41 64          	xor    0x64(%r9),%r8d
 5ee:	64 45 50             	fs rex.RB push %r8
 5f1:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
 5f5:	74 48                	je     63f <.debug_str+0x63f>
 5f7:	65 61                	gs (bad) 
 5f9:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 5fd:	69 6e 5f 63 68 72 67 	imul   $0x67726863,0x5f(%rsi),%ebp
 604:	00 74 68 69          	add    %dh,0x69(%rax,%rbp,2)
 608:	73 00                	jae    60a <.debug_str+0x60a>
 60a:	68 65 69 67 68       	push   $0x68676965
 60f:	74 00                	je     611 <.debug_str+0x611>
 611:	5f                   	pop    %rdi
 612:	5a                   	pop    %rdx
 613:	4e 31 30             	rex.WRX xor %r14,(%rax)
 616:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 61d:	69 
 61e:	73 74                	jae    694 <.debug_str+0x694>
 620:	49 50                	rex.WB push %r8
 622:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 628:	6f                   	outsl  %ds:(%rsi),(%dx)
 629:	31 31                	xor    %esi,(%rcx)
 62b:	56                   	push   %rsi
 62c:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 633:	70 
 634:	75 74                	jne    6aa <.debug_str+0x6aa>
 636:	45                   	rex.RB
 637:	45                   	rex.RB
 638:	36 52                	ss push %rdx
 63a:	65 6d                	gs insl (%dx),%es:(%rdi)
 63c:	6f                   	outsl  %ds:(%rsi),(%dx)
 63d:	76 65                	jbe    6a4 <.debug_str+0x6a4>
 63f:	45 50                	rex.RB push %r8
 641:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
 645:	74 48                	je     68f <.debug_str+0x68f>
 647:	65 61                	gs (bad) 
 649:	64 00 66 6f          	add    %ah,%fs:0x6f(%rsi)
 64d:	6e                   	outsb  %ds:(%rsi),(%dx)
 64e:	74 53                	je     6a3 <.debug_str+0x6a3>
 650:	69 7a 65 00 46 6f 72 	imul   $0x726f4600,0x65(%rdx),%edi
 657:	45 61                	rex.RB (bad) 
 659:	63 68 00             	movsxd 0x0(%rax),%ebp
 65c:	7e 4c                	jle    6aa <.debug_str+0x6aa>
 65e:	69 6e 6b 65 64 4c 69 	imul   $0x694c6465,0x6b(%rsi),%ebp
 665:	73 74                	jae    6db <.debug_str+0x6db>
 667:	00 5f 5a             	add    %bl,0x5a(%rdi)
 66a:	4e 31 30             	rex.WRX xor %r14,(%rax)
 66d:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 674:	69 
 675:	73 74                	jae    6eb <.debug_str+0x6eb>
 677:	49 50                	rex.WB push %r8
 679:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 67f:	6f                   	outsl  %ds:(%rsi),(%dx)
 680:	31 31                	xor    %esi,(%rcx)
 682:	56                   	push   %rsi
 683:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 68a:	70 
 68b:	75 74                	jne    701 <.debug_str+0x701>
 68d:	45                   	rex.RB
 68e:	45 35 43 6f 75 6e    	rex.RB xor $0x6e756f43,%eax
 694:	74 45                	je     6db <.debug_str+0x6db>
 696:	76 00                	jbe    698 <.debug_str+0x698>
 698:	52                   	push   %rdx
 699:	65 6c                	gs insb (%dx),%es:(%rdi)
 69b:	65 61                	gs (bad) 
 69d:	73 65                	jae    704 <.debug_str+0x704>
 69f:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 6a3:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 6a7:	73 69                	jae    712 <.debug_str+0x712>
 6a9:	67 6e                	outsb  %ds:(%esi),(%dx)
 6ab:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 6b0:	74 00                	je     6b2 <.debug_str+0x6b2>
 6b2:	70 6f                	jo     723 <.debug_str+0x723>
 6b4:	69 6e 74 00 46 69 72 	imul   $0x72694600,0x74(%rsi),%ebp
 6bb:	73 74                	jae    731 <.debug_str+0x731>
 6bd:	00 5f 5a             	add    %bl,0x5a(%rdi)
 6c0:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 6c6:	6f                   	outsl  %ds:(%rsi),(%dx)
 6c7:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 6ca:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 6d1:	73 
 6d2:	65 6e                	outsb  %gs:(%rsi),(%dx)
 6d4:	74 65                	je     73b <.debug_str+0x73b>
 6d6:	72 39                	jb     711 <.debug_str+0x711>
 6d8:	52                   	push   %rdx
 6d9:	65 63 74 61 6e       	movsxd %gs:0x6e(%rcx,%riz,2),%esi
 6de:	67 6c                	insb   (%dx),%es:(%edi)
 6e0:	65 45                	gs rex.RB
 6e2:	4e 53                	rex.WRX push %rbx
 6e4:	5f                   	pop    %rdi
 6e5:	35 50 6f 69 6e       	xor    $0x6e696f50,%eax
 6ea:	74 45                	je     731 <.debug_str+0x731>
 6ec:	69 69 00 4c 69 6e 6b 	imul   $0x6b6e694c,0x0(%rcx),%ebp
 6f3:	65 64 4c 69 73 74 3c 	gs imul $0x6469563c,%fs:0x74(%rbx),%r14
 6fa:	56 69 64 
 6fd:	65 6f                	outsl  %gs:(%rsi),(%dx)
 6ff:	3a 3a                	cmp    (%rdx),%bh
 701:	56                   	push   %rsi
 702:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 709:	70 
 70a:	75 74                	jne    780 <.debug_str+0x780>
 70c:	2a 3e                	sub    (%rsi),%bh
 70e:	00 53 70             	add    %dl,0x70(%rbx)
 711:	69 6e 6c 6f 63 6b 00 	imul   $0x6b636f,0x6c(%rsi),%ebp
 718:	6d                   	insl   (%dx),%es:(%rdi)
 719:	5f                   	pop    %rdi
 71a:	4f 75 74             	rex.WRXB jne 791 <.debug_str+0x791>
 71d:	70 75                	jo     794 <.debug_str+0x794>
 71f:	74 73                	je     794 <.debug_str+0x794>
 721:	00 45 78             	add    %al,0x78(%rbp)
 724:	74 72                	je     798 <.debug_str+0x798>
 726:	61                   	(bad)  
 727:	63 74 00 6d          	movsxd 0x6d(%rax,%rax,1),%esi
 72b:	5f                   	pop    %rdi
 72c:	42 61                	rex.X (bad) 
 72e:	63 6b 00             	movsxd 0x0(%rbx),%ebp
 731:	5f                   	pop    %rdi
 732:	5f                   	pop    %rdi
 733:	76 74                	jbe    7a9 <.debug_str+0x7a9>
 735:	62                   	(bad)  
 736:	6c                   	insb   (%dx),%es:(%rdi)
 737:	5f                   	pop    %rdi
 738:	70 74                	jo     7ae <.debug_str+0x7ae>
 73a:	72 5f                	jb     79b <.debug_str+0x79b>
 73c:	74 79                	je     7b7 <.debug_str+0x7b7>
 73e:	70 65                	jo     7a5 <.debug_str+0x7a5>
 740:	00 50 6f             	add    %dl,0x6f(%rax)
 743:	69 6e 74 00 5f 5a 4e 	imul   $0x4e5a5f00,0x74(%rsi),%ebp
 74a:	31 30                	xor    %esi,(%rax)
 74c:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 753:	69 
 754:	73 74                	jae    7ca <.debug_str+0x7ca>
 756:	49 50                	rex.WB push %r8
 758:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 75e:	6f                   	outsl  %ds:(%rsi),(%dx)
 75f:	31 31                	xor    %esi,(%rcx)
 761:	56                   	push   %rsi
 762:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 769:	70 
 76a:	75 74                	jne    7e0 <.debug_str+0x7e0>
 76c:	45                   	rex.RB
 76d:	45 61                	rex.RB (bad) 
 76f:	53                   	push   %rbx
 770:	45 52                	rex.RB push %r10
 772:	4b 53                	rex.WXB push %r11
 774:	33 5f 00             	xor    0x0(%rdi),%ebx
 777:	5f                   	pop    %rdi
 778:	5a                   	pop    %rdx
 779:	4e 31 30             	rex.WRX xor %r14,(%rax)
 77c:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 783:	69 
 784:	73 74                	jae    7fa <.debug_str+0x7fa>
 786:	49 50                	rex.WB push %r8
 788:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 78e:	6f                   	outsl  %ds:(%rsi),(%dx)
 78f:	31 31                	xor    %esi,(%rcx)
 791:	56                   	push   %rsi
 792:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 799:	70 
 79a:	75 74                	jne    810 <.debug_str+0x810>
 79c:	45                   	rex.RB
 79d:	45 69 78 45 69 00 4c 	imul   $0x694c0069,0x45(%r8),%r15d
 7a4:	69 
 7a5:	73 74                	jae    81b <.debug_str+0x81b>
 7a7:	48                   	rex.W
 7a8:	65 61                	gs (bad) 
 7aa:	64 00 70 72          	add    %dh,%fs:0x72(%rax)
 7ae:	65 76 00             	gs jbe 7b1 <.debug_str+0x7b1>
 7b1:	6f                   	outsl  %ds:(%rsi),(%dx)
 7b2:	70 65                	jo     819 <.debug_str+0x819>
 7b4:	72 61                	jb     817 <.debug_str+0x817>
 7b6:	74 6f                	je     827 <.debug_str+0x827>
 7b8:	72 3d                	jb     7f7 <.debug_str+0x7f7>
 7ba:	00 5f 5a             	add    %bl,0x5a(%rdi)
 7bd:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 7c3:	6f                   	outsl  %ds:(%rsi),(%dx)
 7c4:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 7c7:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 7ce:	73 
 7cf:	65 6e                	outsb  %gs:(%rsi),(%dx)
 7d1:	74 65                	je     838 <.debug_str+0x838>
 7d3:	72 34                	jb     809 <.debug_str+0x809>
 7d5:	54                   	push   %rsp
 7d6:	65 78 74             	gs js  84d <.debug_str+0x84d>
 7d9:	45                   	rex.RB
 7da:	4e 53                	rex.WRX push %rbx
 7dc:	5f                   	pop    %rdi
 7dd:	35 50 6f 69 6e       	xor    $0x6e696f50,%eax
 7e2:	74 45                	je     829 <.debug_str+0x829>
 7e4:	50                   	push   %rax
 7e5:	4b 63 69 00          	rex.WXB movslq 0x0(%r9),%rbp
 7e9:	6e                   	outsb  %ds:(%rsi),(%dx)
 7ea:	65 78 74             	gs js  861 <.debug_str+0x861>
 7ed:	00 52 65             	add    %dl,0x65(%rdx)
 7f0:	6d                   	insl   (%dx),%es:(%rdi)
 7f1:	6f                   	outsl  %ds:(%rsi),(%dx)
 7f2:	76 65                	jbe    859 <.debug_str+0x859>
 7f4:	00 5f 5a             	add    %bl,0x5a(%rdi)
 7f7:	4e 31 30             	rex.WRX xor %r14,(%rax)
 7fa:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 801:	69 
 802:	73 74                	jae    878 <Video::VideoPresenter::~VideoPresenter()+0x818>
 804:	49 50                	rex.WB push %r8
 806:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 80c:	6f                   	outsl  %ds:(%rsi),(%dx)
 80d:	31 31                	xor    %esi,(%rcx)
 80f:	56                   	push   %rsi
 810:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 817:	70 
 818:	75 74                	jne    88e <Video::VideoPresenter::~VideoPresenter()+0x82e>
 81a:	45                   	rex.RB
 81b:	45                   	rex.RB
 81c:	36 52                	ss push %rdx
 81e:	65 6d                	gs insl (%dx),%es:(%rdi)
 820:	6f                   	outsl  %ds:(%rsi),(%dx)
 821:	76 65                	jbe    888 <Video::VideoPresenter::~VideoPresenter()+0x828>
 823:	45 50                	rex.RB push %r8
 825:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
 829:	74 4e                	je     879 <Video::VideoPresenter::~VideoPresenter()+0x819>
 82b:	6f                   	outsl  %ds:(%rsi),(%dx)
 82c:	64 65 49 53          	fs gs rex.WB push %r11
 830:	32 5f 45             	xor    0x45(%rdi),%bl
 833:	00 5f 5a             	add    %bl,0x5a(%rdi)
 836:	4e 31 30             	rex.WRX xor %r14,(%rax)
 839:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 840:	69 
 841:	73 74                	jae    8b7 <Video::VideoPresenter::~VideoPresenter()+0x857>
 843:	49 50                	rex.WB push %r8
 845:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 84b:	6f                   	outsl  %ds:(%rsi),(%dx)
 84c:	31 31                	xor    %esi,(%rcx)
 84e:	56                   	push   %rsi
 84f:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 856:	70 
 857:	75 74                	jne    8cd <Video::VideoPresenter::~VideoPresenter()+0x86d>
 859:	45                   	rex.RB
 85a:	45 33 47 65          	xor    0x65(%r15),%r8d
 85e:	74 45                	je     8a5 <Video::VideoPresenter::~VideoPresenter()+0x845>
 860:	6a 00                	push   $0x0

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
Video::VideoPresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }
   0:	2f                   	(bad)  
   1:	68 6f 6d 65 2f       	push   $0x2f656d6f
   6:	75 6d                	jne    75 <.debug_line_str+0x75>
   8:	61                   	(bad)  
   9:	72 69                	jb     74 <.debug_line_str+0x74>
   b:	6e                   	outsb  %ds:(%rsi),(%dx)
   c:	2f                   	(bad)  
   d:	73 6f                	jae    7e <.debug_line_str+0x7e>
   f:	75 72                	jne    83 <.debug_line_str+0x83>
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23
    }
  11:	63 65 2f             	movsxd 0x2f(%rbp),%esp
  14:	6e                   	outsb  %ds:(%rsi),(%dx)
  15:	69 74 65 4f 53 2f 4b 	imul   $0x654b2f53,0x4f(%rbp,%riz,2),%esi
  1c:	65 
  1d:	72 6e                	jb     8d <.debug_line_str+0x8d>
  1f:	65 6c                	gs insb (%dx),%es:(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:28
    }
  21:	00 73 72             	add    %dh,0x72(%rbx)
  24:	63 2f                	movsxd (%rdi),%ebp
  26:	56                   	push   %rsi
  27:	69 64 65 6f 2f 56 69 	imul   $0x6469562f,0x6f(%rbp,%riz,2),%esp
  2e:	64 
  2f:	65 6f                	outsl  %gs:(%rsi),(%dx)
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
    VideoPresenter::VideoPresenter()
  31:	50                   	push   %rax
  32:	72 65                	jb     99 <.debug_line_str+0x99>
  34:	73 65                	jae    9b <.debug_line_str+0x9b>
  36:	6e                   	outsb  %ds:(%rsi),(%dx)
  37:	74 65                	je     9e <.debug_line_str+0x9e>
  39:	72 49                	jb     84 <.debug_line_str+0x84>
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:28
        m_Front = NULL;
  3b:	6d                   	insl   (%dx),%es:(%rdi)
  3c:	70 6c                	jo     aa <.debug_line_str+0xaa>
  3e:	2e 63 63 00          	cs movsxd 0x0(%rbx),%esp
Video::VideoPresenter::VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:5
  42:	2f                   	(bad)  
  43:	68 6f 6d 65 2f       	push   $0x2f656d6f
LinkedList<Video::VideoOutput*>::LinkedList():
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:29
        m_Back = NULL;
  48:	75 6d                	jne    b7 <.debug_line_str+0xb7>
  4a:	61                   	(bad)  
  4b:	72 69                	jb     b6 <.debug_line_str+0xb6>
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:30
        m_Count = 0;
  4d:	6e                   	outsb  %ds:(%rsi),(%dx)
  4e:	2f                   	(bad)  
  4f:	73 6f                	jae    c0 <.debug_line_str+0xc0>
  51:	75 72                	jne    c5 <.debug_line_str+0xc5>
  53:	63 65 2f             	movsxd 0x2f(%rbp),%esp
/home/umarin/source/niteOS/Kernel/include/Utils/LinkedList.h:31
        m_Lock.m_Lock = 0;
  56:	6e                   	outsb  %ds:(%rsi),(%dx)
  57:	69 74 65 4f 53 2f 4b 	imul   $0x654b2f53,0x4f(%rbp,%riz,2),%esi
  5e:	65 
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:8
    }
  5f:	72 6e                	jb     cf <.debug_line_str+0xcf>
Video::VideoPresenter::~VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:10
    VideoPresenter::~VideoPresenter()
  61:	65 6c                	gs insb (%dx),%es:(%rdi)
  63:	00 73 72             	add    %dh,0x72(%rbx)
  66:	63 2f                	movsxd (%rdi),%ebp
  68:	56                   	push   %rsi
  69:	69 64 65 6f 00 69 6e 	imul   $0x636e6900,0x6f(%rbp,%riz,2),%esp
  70:	63 
Spinlock::Release():
/home/umarin/source/niteOS/Kernel/include/Utils/Spinlock.h:59
  71:	6c                   	insb   (%dx),%es:(%rdi)
  72:	75 64                	jne    d8 <.debug_line_str+0xd8>
Video::VideoPresenter::~VideoPresenter():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:13
    }
  74:	65 2f                	gs (bad) 
  76:	55                   	push   %rbp
  77:	74 69                	je     e2 <.debug_line_str+0xe2>
  79:	6c                   	insb   (%dx),%es:(%rdi)
  7a:	73 00                	jae    7c <.debug_line_str+0x7c>
  7c:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  83:	2f                   	(bad)  
  84:	56                   	push   %rsi
  85:	69 64 65 6f 00 2f 68 	imul   $0x6f682f00,0x6f(%rbp,%riz,2),%esp
  8c:	6f 
  8d:	6d                   	insl   (%dx),%es:(%rdi)
  8e:	65 2f                	gs (bad) 
  90:	75 6d                	jne    ff <.debug_line_str+0xff>
  92:	61                   	(bad)  
  93:	72 69                	jb     fe <.debug_line_str+0xfe>
  95:	6e                   	outsb  %ds:(%rsi),(%dx)
  96:	2f                   	(bad)  
  97:	62 75                	(bad)  
  99:	69 6c 64 2f 78 38 36 	imul   $0x5f363878,0x2f(%rsp,%riz,2),%ebp
  a0:	5f 
  a1:	36 34 2d             	ss xor $0x2d,%al
  a4:	65 6c                	gs insb (%dx),%es:(%rdi)
  a6:	66 2f                	data16 (bad) 
  a8:	6c                   	insb   (%dx),%es:(%rdi)
  a9:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
  b0:	78 38                	js     ea <.debug_line_str+0xea>
  b2:	36 5f                	ss pop %rdi
  b4:	36 34 2d             	ss xor $0x2d,%al
  b7:	65 6c                	gs insb (%dx),%es:(%rdi)
  b9:	66 2f                	data16 (bad) 
  bb:	31 31                	xor    %esi,(%rcx)
  bd:	2e 32 2e             	cs xor (%rsi),%ch
  c0:	30 2f                	xor    %ch,(%rdi)
  c2:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  c9:	00 56 69             	add    %dl,0x69(%rsi)
  cc:	64 65 6f             	fs outsl %gs:(%rsi),(%dx)
  cf:	50                   	push   %rax
  d0:	72 65                	jb     137 <Video::VideoPresenter::~VideoPresenter()+0xd7>
  d2:	73 65                	jae    139 <Video::VideoPresenter::~VideoPresenter()+0xd9>
  d4:	6e                   	outsb  %ds:(%rsi),(%dx)
  d5:	74 65                	je     13c <Video::VideoPresenter::~VideoPresenter()+0xdc>
  d7:	72 49                	jb     122 <.debug_line_str+0x122>
  d9:	6d                   	insl   (%dx),%es:(%rdi)
  da:	70 6c                	jo     148 <Video::VideoPresenter::~VideoPresenter()+0xe8>
  dc:	2e 63 63 00          	cs movsxd 0x0(%rbx),%esp
  e0:	56                   	push   %rsi
  e1:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
  e8:	73 
  e9:	65 6e                	outsb  %gs:(%rsi),(%dx)
  eb:	74 65                	je     152 <Video::VideoPresenter::~VideoPresenter()+0xf2>
  ed:	72 49                	jb     138 <Video::VideoPresenter::~VideoPresenter()+0xd8>
  ef:	6d                   	insl   (%dx),%es:(%rdi)
  f0:	70 6c                	jo     15e <Video::VideoPresenter::~VideoPresenter()+0xfe>
  f2:	2e 63 63 00          	cs movsxd 0x0(%rbx),%esp
  f6:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
  fd:	69 
  fe:	73 74                	jae    174 <Video::VideoPresenter::~VideoPresenter()+0x114>
 100:	2e 68 00 53 70 69    	cs push $0x69705300
 106:	6e                   	outsb  %ds:(%rsi),(%dx)
 107:	6c                   	insb   (%dx),%es:(%rdi)
 108:	6f                   	outsl  %ds:(%rsi),(%dx)
 109:	63 6b 2e             	movsxd 0x2e(%rbx),%ebp
 10c:	68 00 56 69 64       	push   $0x64695600
 111:	65 6f                	outsl  %gs:(%rsi),(%dx)
 113:	2e 68 00 73 74 64    	cs push $0x64747300
 119:	69 6e 74 2d 67 63 63 	imul   $0x6363672d,0x74(%rsi),%ebp
 120:	2e                   	cs
 121:	68                   	.byte 0x68
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
Video::VideoPresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:18
    }
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 47 4e             	sub    %al,0x4e(%rdi)
   9:	55                   	push   %rbp
   a:	29 20                	sub    %esp,(%rax)
   c:	31 31                	xor    %esi,(%rcx)
   e:	2e 32 2e             	cs xor (%rsi),%ch
/home/umarin/source/niteOS/Kernel/src/Video/VideoPresenterImpl.cc:23
    }
  11:	30 00                	xor    %al,(%rax)

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	01 00                	add    %eax,(%rax)
  26:	00 00                	add    %al,(%rax)
  28:	00 00                	add    %al,(%rax)
  2a:	00 00                	add    %al,(%rax)
  2c:	10 00                	adc    %al,(%rax)
  2e:	00 00                	add    %al,(%rax)
  30:	30 00                	xor    %al,(%rax)
  32:	00 00                	add    %al,(%rax)
  34:	00 00                	add    %al,(%rax)
  36:	00 00                	add    %al,(%rax)
  38:	01 00                	add    %eax,(%rax)
  3a:	00 00                	add    %al,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	10 00                	adc    %al,(%rax)
  42:	00 00                	add    %al,(%rax)
  44:	44 00 00             	add    %r8b,(%rax)
  47:	00 00                	add    %al,(%rax)
  49:	00 00                	add    %al,(%rax)
  4b:	00 01                	add    %al,(%rcx)
  4d:	00 00                	add    %al,(%rax)
  4f:	00 00                	add    %al,(%rax)
  51:	00 00                	add    %al,(%rax)
  53:	00 10                	add    %dl,(%rax)
  55:	00 00                	add    %al,(%rax)
  57:	00 58 00             	add    %bl,0x0(%rax)
  5a:	00 00                	add    %al,(%rax)
  5c:	00 00                	add    %al,(%rax)
  5e:	00 00                	add    %al,(%rax)
  60:	2c 00                	sub    $0x0,%al
  62:	00 00                	add    %al,(%rax)
  64:	00 00                	add    %al,(%rax)
  66:	00 00                	add    %al,(%rax)
  68:	14 00                	adc    $0x0,%al
  6a:	00 00                	add    %al,(%rax)
  6c:	6c                   	insb   (%dx),%es:(%rdi)
  6d:	00 00                	add    %al,(%rax)
  6f:	00 00                	add    %al,(%rax)
  71:	00 00                	add    %al,(%rax)
  73:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 79 <.eh_frame+0x79>
  79:	00 00                	add    %al,(%rax)
  7b:	00 00                	add    %al,(%rax)
  7d:	00 00                	add    %al,(%rax)
	...
