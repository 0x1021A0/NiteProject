
build/kernel/Video/TextModePresenterImpl.o:     file format elf64-x86-64


Disassembly of section .group:

0000000000000000 <.group>:
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        
    }

    void TextModePresenter::Clear()
    {
        for (int y = 0; y < 25; y++)
   0:	01 00                	add    %eax,(%rax)
   2:	00 00                	add    %al,(%rax)
   4:	06                   	(bad)  
   5:	00 00                	add    %al,(%rax)
   7:	00 07                	add    %al,(%rdi)
   9:	00 00                	add    %al,(%rax)
	...

Disassembly of section .text:

0000000000000000 <Video::TextModePresenter::Clear()>:
   0:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
   4:	48 8d 91 a0 00 00 00 	lea    0xa0(%rcx),%rdx
   b:	48 81 c1 40 10 00 00 	add    $0x1040,%rcx
  12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
        {
            for (int x = 0; x < 80; x++)
  18:	48 8d 82 60 ff ff ff 	lea    -0xa0(%rdx),%rax
  1f:	90                   	nop
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22 (discriminator 3)
            {
                m_TextBuffer[(y * 80) + x] = 0x00;
  20:	31 f6                	xor    %esi,%esi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
            for (int x = 0; x < 80; x++)
  22:	48 83 c0 02          	add    $0x2,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = 0x00;
  26:	66 89 70 fe          	mov    %si,-0x2(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
            for (int x = 0; x < 80; x++)
  2a:	48 39 d0             	cmp    %rdx,%rax
  2d:	75 f1                	jne    20 <Video::TextModePresenter::Clear()+0x20>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18 (discriminator 2)
        for (int y = 0; y < 25; y++)
  2f:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
  36:	48 39 ca             	cmp    %rcx,%rdx
  39:	75 dd                	jne    18 <Video::TextModePresenter::Clear()+0x18>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:25
            }
        }
    }
  3b:	c3                   	ret    
  3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000040 <Video::TextModePresenter::Rectangle(Video::Point, int, int)>:
Video::TextModePresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
        for (int col = 0; col < 80; col++)
            m_TextBuffer[1920 + col] = 0x0;
    }

    void TextModePresenter::Rectangle(Point point, int width, int height)
    {
  40:	48 89 f0             	mov    %rsi,%rax
  43:	48 c1 f8 20          	sar    $0x20,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        int x = Integers::ConstraintToRange(0, 80, point.x);
        int y = Integers::ConstraintToRange(0, 25, point.y);

        const uint16_t blank = (15 << 8);
        for (int y = point.y; y < point.y + height; y++)
  47:	44 8d 0c 01          	lea    (%rcx,%rax,1),%r9d
  4b:	44 39 c8             	cmp    %r9d,%eax
  4e:	7d 6a                	jge    ba <Video::TextModePresenter::Rectangle(Video::Point, int, int)+0x7a>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  50:	55                   	push   %rbp
  51:	8d 0c 80             	lea    (%rax,%rax,4),%ecx
  54:	49 89 fa             	mov    %rdi,%r10
  57:	41 89 f3             	mov    %esi,%r11d
  5a:	89 c7                	mov    %eax,%edi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
        {
            for (int x = point.x; x < point.x + width; x++)
  5c:	44 8d 04 32          	lea    (%rdx,%rsi,1),%r8d
  60:	c1 e1 04             	shl    $0x4,%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  63:	48 89 e5             	mov    %rsp,%rbp
  66:	41 54                	push   %r12
  68:	4c 63 e6             	movslq %esi,%r12
  6b:	53                   	push   %rbx
  6c:	8d 5a ff             	lea    -0x1(%rdx),%ebx
  6f:	4c 01 e3             	add    %r12,%rbx
  72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  78:	45 39 d8             	cmp    %r11d,%r8d
  7b:	7e 2d                	jle    aa <Video::TextModePresenter::Rectangle(Video::Point, int, int)+0x6a>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93
            {
                m_TextBuffer[(y * 80) + x] = blank;
  7d:	49 8b 72 20          	mov    0x20(%r10),%rsi
  81:	48 63 d1             	movslq %ecx,%rdx
  84:	49 8d 04 14          	lea    (%r12,%rdx,1),%rax
  88:	48 01 da             	add    %rbx,%rdx
  8b:	48 8d 04 46          	lea    (%rsi,%rax,2),%rax
  8f:	48 8d 54 56 02       	lea    0x2(%rsi,%rdx,2),%rdx
  94:	0f 1f 40 00          	nopl   0x0(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
  98:	be 00 0f 00 00       	mov    $0xf00,%esi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  9d:	48 83 c0 02          	add    $0x2,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = blank;
  a1:	66 89 70 fe          	mov    %si,-0x2(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  a5:	48 39 d0             	cmp    %rdx,%rax
  a8:	75 ee                	jne    98 <Video::TextModePresenter::Rectangle(Video::Point, int, int)+0x58>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  aa:	83 c7 01             	add    $0x1,%edi
  ad:	83 c1 50             	add    $0x50,%ecx
  b0:	44 39 cf             	cmp    %r9d,%edi
  b3:	75 c3                	jne    78 <Video::TextModePresenter::Rectangle(Video::Point, int, int)+0x38>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:96
            }
        }
    }
  b5:	5b                   	pop    %rbx
  b6:	41 5c                	pop    %r12
  b8:	5d                   	pop    %rbp
  b9:	c3                   	ret    
  ba:	c3                   	ret    
  bb:	90                   	nop
  bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000000c0 <Video::TextModePresenter::TextModePresenter()>:
Video::TextModePresenter::TextModePresenter():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  c0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  c7:	00 00 00 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:8
    TextModePresenter::TextModePresenter()
  ca:	55                   	push   %rbp
  cb:	48 89 e5             	mov    %rsp,%rbp
  ce:	53                   	push   %rbx
  cf:	48 89 fb             	mov    %rdi,%rbx
  d2:	48 83 ec 08          	sub    $0x8,%rsp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  d6:	ff d0                	call   *%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:9
      : m_TextBuffer(reinterpret_cast<uint16_t *>(0xb8000)),
  d8:	48 c7 43 20 00 80 0b 	movq   $0xb8000,0x20(%rbx)
  df:	00 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  e0:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  e7:	00 00 00 
  ea:	48 89 03             	mov    %rax,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:10
        m_OffsetX(0),
  ed:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:14
    }
  f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
  f8:	c9                   	leave  
  f9:	c3                   	ret    
  fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000100 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)>:
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
    {
 100:	55                   	push   %rbp
 101:	48 89 f0             	mov    %rsi,%rax
 104:	48 89 e5             	mov    %rsp,%rbp
 107:	41 57                	push   %r15
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
{
    inline int ConstraintToRange(uint64_t min, uint64_t max, uint64_t val)
    {
        if (val > max) val = max;
        if (val < min) val = min;
        return val;
 109:	41 bf 19 00 00 00    	mov    $0x19,%r15d
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 10f:	41 56                	push   %r14
 111:	49 89 fe             	mov    %rdi,%r14
 114:	41 55                	push   %r13
 116:	41 54                	push   %r12
 118:	45 89 c4             	mov    %r8d,%r12d
 11b:	53                   	push   %rbx
 11c:	48 89 d3             	mov    %rdx,%rbx
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 11f:	48 63 d6             	movslq %esi,%rdx
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 122:	48 83 ec 18          	sub    $0x18,%rsp
 126:	89 4d c8             	mov    %ecx,-0x38(%rbp)
 129:	48 89 f1             	mov    %rsi,%rcx
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 12c:	be 50 00 00 00       	mov    $0x50,%esi
 131:	48 c1 f9 20          	sar    $0x20,%rcx
 135:	48 39 f2             	cmp    %rsi,%rdx
 138:	48 0f 47 d6          	cmova  %rsi,%rdx
 13c:	31 f6                	xor    %esi,%esi
 13e:	83 f8 ff             	cmp    $0xffffffff,%eax
 141:	41 89 d5             	mov    %edx,%r13d
 144:	44 0f 44 ee          	cmove  %esi,%r13d
 148:	4c 39 f9             	cmp    %r15,%rcx
 14b:	4c 0f 46 f9          	cmovbe %rcx,%r15
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35
        int y = point.y == -1 ? (m_OffsetY + 1) : Integers::ConstraintToRange(0, 25, point.y);
 14f:	83 f9 ff             	cmp    $0xffffffff,%ecx
 152:	75 09                	jne    15d <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x5d>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35 (discriminator 1)
 154:	44 0f b7 7f 2a       	movzwl 0x2a(%rdi),%r15d
 159:	41 83 c7 01          	add    $0x1,%r15d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:37 (discriminator 4)
        if (y >= 25)
 15d:	41 83 ff 18          	cmp    $0x18,%r15d
 161:	7e 53                	jle    1b6 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0xb6>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 163:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
 16a:	00 00 00 
 16d:	49 8b 06             	mov    (%r14),%rax
 170:	48 8b 00             	mov    (%rax),%rax
 173:	48 39 d0             	cmp    %rdx,%rax
 176:	0f 85 2d 01 00 00    	jne    2a9 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x1a9>
 17c:	49 8b 4e 20          	mov    0x20(%r14),%rcx
 180:	48 8d 91 a0 00 00 00 	lea    0xa0(%rcx),%rdx
 187:	48 81 c1 40 10 00 00 	add    $0x1040,%rcx
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 18e:	48 8d 82 60 ff ff ff 	lea    -0xa0(%rdx),%rax
 195:	0f 1f 00             	nopl   (%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 198:	31 ff                	xor    %edi,%edi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 19a:	48 83 c0 02          	add    $0x2,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 19e:	66 89 78 fe          	mov    %di,-0x2(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 1a2:	48 39 d0             	cmp    %rdx,%rax
 1a5:	75 f1                	jne    198 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x98>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 1a7:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
 1ae:	48 39 ca             	cmp    %rcx,%rdx
 1b1:	75 db                	jne    18e <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x8e>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 1b3:	45 31 ff             	xor    %r15d,%r15d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:43
        size_t len = strlen(text);
 1b6:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 1bd:	00 00 00 
 1c0:	48 89 df             	mov    %rbx,%rdi
 1c3:	ff d0                	call   *%rax
 1c5:	49 89 c0             	mov    %rax,%r8
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44
        for (int i = 0; i < len; i++)
 1c8:	48 85 c0             	test   %rax,%rax
 1cb:	0f 84 ad 00 00 00    	je     27e <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x17e>
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1d1:	0f b7 45 c8          	movzwl -0x38(%rbp),%eax
 1d5:	41 c1 e4 0c          	shl    $0xc,%r12d
 1d9:	49 01 d8             	add    %rbx,%r8
 1dc:	c1 e0 08             	shl    $0x8,%eax
 1df:	41 09 c4             	or     %eax,%r12d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1e2:	43 8d 04 bf          	lea    (%r15,%r15,4),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1e6:	66 0f be 13          	movsbw (%rbx),%dx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1ea:	49 8b 4e 20          	mov    0x20(%r14),%rcx
 1ee:	c1 e0 04             	shl    $0x4,%eax
 1f1:	44 01 e8             	add    %r13d,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1f4:	44 09 e2             	or     %r12d,%edx
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 1f7:	41 83 c5 01          	add    $0x1,%r13d
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1fb:	48 98                	cltq   
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1fd:	66 89 14 41          	mov    %dx,(%rcx,%rax,2)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 201:	41 83 fd 4f          	cmp    $0x4f,%r13d
 205:	7e 6a                	jle    271 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x171>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:50
                y++;
 207:	41 83 c7 01          	add    $0x1,%r15d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 20b:	45 31 ed             	xor    %r13d,%r13d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:51
                if (y >= 25)
 20e:	41 83 ff 19          	cmp    $0x19,%r15d
 212:	75 5d                	jne    271 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x171>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 214:	48 bf 00 00 00 00 00 	movabs $0x0,%rdi
 21b:	00 00 00 
 21e:	49 8b 06             	mov    (%r14),%rax
 221:	48 8b 00             	mov    (%rax),%rax
 224:	48 39 f8             	cmp    %rdi,%rax
 227:	75 6e                	jne    297 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x197>
 229:	48 8d 91 a0 00 00 00 	lea    0xa0(%rcx),%rdx
 230:	48 81 c1 40 10 00 00 	add    $0x1040,%rcx
 237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 23e:	00 00 
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 240:	48 8d 82 60 ff ff ff 	lea    -0xa0(%rdx),%rax
 247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 24e:	00 00 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 250:	31 f6                	xor    %esi,%esi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 252:	48 83 c0 02          	add    $0x2,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 256:	66 89 70 fe          	mov    %si,-0x2(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 25a:	48 39 c2             	cmp    %rax,%rdx
 25d:	75 f1                	jne    250 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x150>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 25f:	48 81 c2 a0 00 00 00 	add    $0xa0,%rdx
 266:	48 39 d1             	cmp    %rdx,%rcx
 269:	75 d5                	jne    240 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x140>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 26b:	45 31 ff             	xor    %r15d,%r15d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 26e:	45 31 ed             	xor    %r13d,%r13d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44 (discriminator 2)
        for (int i = 0; i < len; i++)
 271:	48 83 c3 01          	add    $0x1,%rbx
 275:	4c 39 c3             	cmp    %r8,%rbx
 278:	0f 85 64 ff ff ff    	jne    1e2 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0xe2>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:59
        m_OffsetX = x;
 27e:	66 45 89 6e 28       	mov    %r13w,0x28(%r14)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:60
        m_OffsetY = y;
 283:	66 45 89 7e 2a       	mov    %r15w,0x2a(%r14)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:61
    }
 288:	48 83 c4 18          	add    $0x18,%rsp
 28c:	5b                   	pop    %rbx
 28d:	41 5c                	pop    %r12
 28f:	41 5d                	pop    %r13
 291:	41 5e                	pop    %r14
 293:	41 5f                	pop    %r15
 295:	5d                   	pop    %rbp
 296:	c3                   	ret    
 297:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 29b:	4c 89 f7             	mov    %r14,%rdi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 29e:	45 31 ff             	xor    %r15d,%r15d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 2a1:	ff d0                	call   *%rax
 2a3:	4c 8b 45 c8          	mov    -0x38(%rbp),%r8
 2a7:	eb c8                	jmp    271 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x171>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2a9:	4c 89 f7             	mov    %r14,%rdi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 2ac:	45 31 ff             	xor    %r15d,%r15d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2af:	ff d0                	call   *%rax
 2b1:	e9 00 ff ff ff       	jmp    1b6 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0xb6>
 2b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
 2bd:	00 00 00 

00000000000002c0 <Video::TextModePresenter::Text(Video::Point, char const*, int)>:
Video::TextModePresenter::Text(Video::Point, char const*, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:29
        Text(point, text, 15, 0);
 2c0:	45 31 c0             	xor    %r8d,%r8d
 2c3:	b9 0f 00 00 00       	mov    $0xf,%ecx
 2c8:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
 2cf:	00 00 00 
 2d2:	ff e0                	jmp    *%rax
 2d4:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
 2db:	00 00 00 00 
 2df:	90                   	nop

00000000000002e0 <Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char)>:
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2e0:	41 c1 e0 0c          	shl    $0xc,%r8d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:64
    {
 2e4:	48 89 f0             	mov    %rsi,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2e7:	48 c1 fe 20          	sar    $0x20,%rsi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2eb:	66 0f be d2          	movsbw %dl,%dx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2ef:	8d 34 b6             	lea    (%rsi,%rsi,4),%esi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2f2:	41 09 d0             	or     %edx,%r8d
 2f5:	c1 e1 08             	shl    $0x8,%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2f8:	c1 e6 04             	shl    $0x4,%esi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2fb:	44 09 c1             	or     %r8d,%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2fe:	01 c6                	add    %eax,%esi
 300:	48 8b 47 20          	mov    0x20(%rdi),%rax
 304:	48 63 f6             	movslq %esi,%rsi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 307:	66 89 0c 70          	mov    %cx,(%rax,%rsi,2)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:67
    }
 30b:	c3                   	ret    
 30c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000310 <Video::TextModePresenter::MoveUp()>:
Video::TextModePresenter::MoveUp():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 310:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
 314:	be 40 81 0b 00       	mov    $0xb8140,%esi
 319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74
            for (int col = 0; col < 80; col++)
 320:	48 8d 86 60 ff ff ff 	lea    -0xa0(%rsi),%rax
 327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 32e:	00 00 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76 (discriminator 3)
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 330:	0f b7 10             	movzwl (%rax),%edx
 333:	66 89 94 01 60 7f f4 	mov    %dx,-0xb80a0(%rcx,%rax,1)
 33a:	ff 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74 (discriminator 3)
            for (int col = 0; col < 80; col++)
 33b:	48 83 c0 02          	add    $0x2,%rax
 33f:	48 39 f0             	cmp    %rsi,%rax
 342:	75 ec                	jne    330 <Video::TextModePresenter::MoveUp()+0x20>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:72 (discriminator 2)
        for (int ln = 0; ln < 25; ln++)
 344:	48 8d b0 a0 00 00 00 	lea    0xa0(%rax),%rsi
 34b:	48 3d 40 90 0b 00    	cmp    $0xb9040,%rax
 351:	75 cd                	jne    320 <Video::TextModePresenter::MoveUp()+0x10>
 353:	48 8d 81 00 0f 00 00 	lea    0xf00(%rcx),%rax
 35a:	48 81 c1 a0 0f 00 00 	add    $0xfa0,%rcx
 361:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 368:	31 d2                	xor    %edx,%edx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 36a:	48 83 c0 02          	add    $0x2,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 36e:	66 89 50 fe          	mov    %dx,-0x2(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 372:	48 39 c1             	cmp    %rax,%rcx
 375:	75 f1                	jne    368 <Video::TextModePresenter::MoveUp()+0x58>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:81
    }
 377:	c3                   	ret    

Disassembly of section .rodata._ZTVN5Video17TextModePresenterE:

0000000000000000 <vtable for Video::TextModePresenter>:
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
   0:	87 0d 00 00 05 00    	xchg   %ecx,0x50000(%rip)        # 50006 <Video::TextModePresenter::MoveUp()+0x4fcf6>
   6:	01 08                	add    %ecx,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	00 00                	add    %al,(%rax)
   c:	2b 00                	sub    (%rax),%eax
   e:	00 00                	add    %al,(%rax)
  10:	00 21                	add    %ah,(%rcx)
	...
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
            for (int x = 0; x < 80; x++)
  22:	78 03                	js     27 <.debug_info+0x27>
	...
  2c:	00 00                	add    %al,(%rax)
  2e:	04 08                	add    $0x8,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18 (discriminator 2)
        for (int y = 0; y < 25; y++)
  30:	07                   	(bad)  
  31:	00 00                	add    %al,(%rax)
  33:	00 00                	add    %al,(%rax)
  35:	2c 04                	sub    $0x4,%al
  37:	05 69 6e 74 00       	add    $0x746e69,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:25
    }
  3c:	2d 35 00 00 00       	sub    $0x35,%eax
Video::TextModePresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  41:	1a 00                	sbb    (%rax),%al
  43:	00 00                	add    %al,(%rax)
  45:	00 04 07             	add    %al,(%rdi,%rax,1)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  48:	36 0f 8e 00 00 00 1b 	ss jle 1b00004f <Video::TextModePresenter::MoveUp()+0x1afffd3f>
  4f:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  51:	00 00                	add    %al,(%rax)
  53:	07                   	(bad)  
  54:	39 12                	cmp    %edx,(%rdx)
  56:	3c 00                	cmp    $0x0,%al
  58:	00 00                	add    %al,(%rax)
  5a:	00 01                	add    %al,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  5c:	03 00                	add    (%rax),%eax
  5e:	00 00                	add    %al,(%rax)
  60:	00 07                	add    %al,(%rdi)
  62:	3a 0a                	cmp    (%rdx),%cl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  64:	00 00                	add    %al,(%rax)
  66:	00 00                	add    %al,(%rax)
  68:	70 00                	jo     6a <.debug_info+0x6a>
  6a:	00 00                	add    %al,(%rax)
  6c:	76 00                	jbe    6e <.debug_info+0x6e>
  6e:	00 00                	add    %al,(%rax)
  70:	01 8e 00 00 00 00    	add    %ecx,0x0(%rsi)
  76:	2e 00 00             	cs add %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  79:	00 00                	add    %al,(%rax)
  7b:	07                   	(bad)  
  7c:	3b 0a                	cmp    (%rdx),%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93
                m_TextBuffer[(y * 80) + x] = blank;
  7e:	00 00                	add    %al,(%rax)
  80:	00 00                	add    %al,(%rax)
  82:	01 87 00 00 00 01    	add    %eax,0x1000000(%rdi)
  88:	8e 00                	mov    (%rax),%es
  8a:	00 00                	add    %al,(%rax)
  8c:	00 00                	add    %al,(%rax)
  8e:	05 41 00 00 00       	add    $0x41,%eax
  93:	04 01                	add    $0x1,%al
  95:	06                   	(bad)  
  96:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
  98:	00 00                	add    %al,(%rax)
  9a:	04 02                	add    $0x2,%al
  9c:	05 00 00 00 00       	add    $0x0,%eax
  a1:	04 08                	add    $0x8,%al
  a3:	05 00 00 00 00       	add    $0x0,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  a8:	10 00                	adc    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  aa:	00 00                	add    %al,(%rax)
  ac:	00 03                	add    %al,(%rbx)
  ae:	2e 18 b4 00 00 00 04 	cs sbb %dh,0x1040000(%rax,%rax,1)
  b5:	01 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:96
    }
  b6:	08 00                	or     %al,(%rax)
  b8:	00 00                	add    %al,(%rax)
  ba:	00 10                	add    %dl,(%rax)
  bc:	00 00                	add    %al,(%rax)
  be:	00 00                	add    %al,(%rax)
Video::TextModePresenter::TextModePresenter():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  c0:	03 31                	add    (%rcx),%esi
  c2:	19 cc                	sbb    %ecx,%esp
  c4:	00 00                	add    %al,(%rax)
  c6:	00 0b                	add    %cl,(%rbx)
  c8:	bb 00 00 00 04       	mov    $0x4000000,%ebx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:8
    TextModePresenter::TextModePresenter()
  cd:	02 07                	add    (%rdi),%al
  cf:	00 00                	add    %al,(%rax)
  d1:	00 00                	add    %al,(%rax)
  d3:	10 00                	adc    %al,(%rax)
  d5:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  d7:	00 03                	add    %al,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:9
      : m_TextBuffer(reinterpret_cast<uint16_t *>(0xb8000)),
  d9:	34 19                	xor    $0x19,%al
  db:	df 00                	filds  (%rax)
  dd:	00 00                	add    %al,(%rax)
  df:	04 04                	add    $0x4,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  e1:	07                   	(bad)  
  e2:	00 00                	add    %al,(%rax)
  e4:	00 00                	add    %al,(%rax)
  e6:	10 00                	adc    %al,(%rax)
  e8:	00 00                	add    %al,(%rax)
  ea:	00 03                	add    %al,(%rbx)
  ec:	37                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:10
        m_OffsetX(0),
  ed:	19 2e                	sbb    %ebp,(%rsi)
  ef:	00 00                	add    %al,(%rax)
  f1:	00 10                	add    %dl,(%rax)
  f3:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:14
    }
  f5:	00 00                	add    %al,(%rax)
  f7:	04 d1                	add    $0xd1,%al
  f9:	17                   	(bad)  
  fa:	2e 00 00             	cs add %al,(%rax)
  fd:	00 04 08             	add    %al,(%rax,%rcx,1)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
    {
 100:	05 00 00 00 00       	add    $0x0,%eax
 105:	04 10                	add    $0x10,%al
 107:	04 00                	add    $0x0,%al
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 109:	00 00                	add    %al,(%rax)
 10b:	00 2f                	add    %ch,(%rdi)
 10d:	00 00                	add    %al,(%rax)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 10f:	00 00                	add    %al,(%rax)
 111:	1c 00                	sbb    $0x0,%al
 113:	00 00                	add    %al,(%rax)
 115:	00 10                	add    %dl,(%rax)
 117:	05 07 10 39 01       	add    $0x1391007,%eax
 11c:	00 00                	add    %al,(%rax)
 11e:	09 00                	or     %eax,(%rax)
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 120:	00 00                	add    %al,(%rax)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 122:	00 05 09 0f 39 01    	add    %al,0x1390f09(%rip)        # 1391031 <Video::TextModePresenter::MoveUp()+0x1390d21>
 128:	00 00                	add    %al,(%rax)
 12a:	00 09                	add    %cl,(%rcx)
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 12c:	00 00                	add    %al,(%rax)
 12e:	00 00                	add    %al,(%rax)
 130:	05 09 1d 39 01       	add    $0x1391d09,%eax
 135:	00 00                	add    %al,(%rax)
 137:	08 00                	or     %al,(%rax)
 139:	05 11 01 00 00       	add    $0x111,%eax
 13e:	1d 00 00 00 00       	sbb    $0x0,%eax
 143:	06                   	(bad)  
 144:	07                   	(bad)  
 145:	fe 03                	incb   (%rbx)
 147:	00 00                	add    %al,(%rax)
 149:	1c 00                	sbb    $0x0,%al
 14b:	00 00                	add    %al,(%rax)
 14d:	00 08                	add    %cl,(%rax)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35
        int y = point.y == -1 ? (m_OffsetY + 1) : Integers::ConstraintToRange(0, 25, point.y);
 14f:	06                   	(bad)  
 150:	09 0c 69             	or     %ecx,(%rcx,%rbp,2)
 153:	01 00                	add    %eax,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35 (discriminator 1)
 155:	00 1e                	add    %bl,(%rsi)
 157:	78 00                	js     159 <.debug_info+0x159>
 159:	18 35 00 00 00 00    	sbb    %dh,0x0(%rip)        # 15f <.debug_info+0x15f>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:37 (discriminator 4)
        if (y >= 25)
 15f:	1e                   	(bad)  
 160:	79 00                	jns    162 <.debug_info+0x162>
 162:	1b 35 00 00 00 04    	sbb    0x4000000(%rip),%esi        # 4000168 <Video::TextModePresenter::MoveUp()+0x3fffe58>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 168:	00 30                	add    %dh,(%rax)
 16a:	00 00                	add    %al,(%rax)
 16c:	00 00                	add    %al,(%rax)
 16e:	1f                   	(bad)  
 16f:	00 00                	add    %al,(%rax)
 171:	00 00                	add    %al,(%rax)
 173:	20 06                	and    %al,(%rsi)
 175:	0d 6e 01 00 00       	or     $0x16e,%eax
 17a:	6c                   	insb   (%dx),%es:(%rdi)
 17b:	02 00                	add    (%rax),%al
 17d:	00 20                	add    %ah,(%rax)
	...
 187:	8f 01                	pop    (%rcx)
 189:	00 00                	add    %al,(%rax)
 18b:	9a                   	(bad)  
 18c:	01 00                	add    %eax,(%rax)
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 18e:	00 01                	add    %al,(%rcx)
 190:	c6 06 00             	movb   $0x0,(%rsi)
 193:	00 02                	add    %al,(%rdx)
 195:	f5                   	cmc    
 196:	06                   	(bad)  
 197:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 199:	00 31                	add    %dh,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 19b:	00 00                	add    %al,(%rax)
 19d:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 19f:	05 07 00 00 00       	add    $0x7,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 1a4:	01 1b                	add    %ebx,(%rbx)
 1a6:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 1a8:	00 00                	add    %al,(%rax)
 1aa:	06                   	(bad)  
 1ab:	10 23                	adc    %ah,(%rbx)
 1ad:	fe 03                	incb   (%rbx)
 1af:	00 00                	add    %al,(%rax)
 1b1:	08 02                	or     %al,(%rdx)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 1b3:	32 00                	xor    (%rax),%al
 1b5:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:43
        size_t len = strlen(text);
 1b7:	00 06                	add    %al,(%rsi)
 1b9:	13 09                	adc    (%rcx),%ecx
 1bb:	00 00                	add    %al,(%rax)
 1bd:	00 00                	add    %al,(%rax)
 1bf:	01 c9                	add    %ecx,%ecx
 1c1:	01 00                	add    %eax,(%rax)
 1c3:	00 00                	add    %al,(%rax)
 1c5:	cf                   	iret   
 1c6:	01 00                	add    %eax,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44
        for (int i = 0; i < len; i++)
 1c8:	00 01                	add    %al,(%rcx)
 1ca:	c6 06 00             	movb   $0x0,(%rsi)
 1cd:	00 00                	add    %al,(%rax)
 1cf:	03 00                	add    (%rax),%eax
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1d1:	00 00                	add    %al,(%rax)
 1d3:	00 06                	add    %al,(%rsi)
 1d5:	14 09                	adc    $0x9,%al
 1d7:	00 00                	add    %al,(%rax)
 1d9:	00 00                	add    %al,(%rax)
 1db:	e3 01                	jrcxz  1de <.debug_info+0x1de>
 1dd:	00 00                	add    %al,(%rax)
 1df:	ee                   	out    %al,(%dx)
 1e0:	01 00                	add    %eax,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1e2:	00 01                	add    %al,(%rcx)
 1e4:	c6 06 00             	movb   $0x0,(%rsi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1e7:	00 01                	add    %al,(%rcx)
 1e9:	35 00 00 00 00       	xor    $0x0,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1ee:	12 00                	adc    (%rax),%al
 1f0:	00 00                	add    %al,(%rax)
 1f2:	00 06                	add    %al,(%rsi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1f4:	16                   	(bad)  
 1f5:	16                   	(bad)  
 1f6:	00 00                	add    %al,(%rax)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 1f8:	00 00                	add    %al,(%rax)
 1fa:	02 10                	add    (%rax),%dl
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1fc:	00 6e 01             	add    %ch,0x1(%rsi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1ff:	00 00                	add    %al,(%rax)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 201:	09 02                	or     %eax,(%rdx)
 203:	00 00                	add    %al,(%rax)
 205:	0f 02 00             	lar    (%rax),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:50
                y++;
 208:	00 01                	add    %al,(%rcx)
 20a:	c6 06 00             	movb   $0x0,(%rsi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 20d:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:51
                if (y >= 25)
 20f:	12 00                	adc    (%rax),%al
 211:	00 00                	add    %al,(%rax)
 213:	00 06                	add    %al,(%rsi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 215:	17                   	(bad)  
 216:	16                   	(bad)  
 217:	00 00                	add    %al,(%rax)
 219:	00 00                	add    %al,(%rax)
 21b:	02 10                	add    (%rax),%dl
 21d:	01 6e 01             	add    %ebp,0x1(%rsi)
 220:	00 00                	add    %al,(%rax)
 222:	2a 02                	sub    (%rdx),%al
 224:	00 00                	add    %al,(%rax)
 226:	3f                   	(bad)  
 227:	02 00                	add    (%rax),%al
 229:	00 01                	add    %al,(%rcx)
 22b:	c6 06 00             	movb   $0x0,(%rsi)
 22e:	00 02                	add    %al,(%rdx)
 230:	49 01 00             	add    %rax,(%r8)
 233:	00 02                	add    %al,(%rdx)
 235:	e4 06                	in     $0x6,%al
 237:	00 00                	add    %al,(%rax)
 239:	02 35 00 00 00 00    	add    0x0(%rip),%dh        # 23f <.debug_info+0x23f>
 23f:	21 00                	and    %eax,(%rax)
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 241:	00 00                	add    %al,(%rax)
 243:	00 06                	add    %al,(%rsi)
 245:	18 16                	sbb    %dl,(%rsi)
 247:	00 00                	add    %al,(%rax)
 249:	00 00                	add    %al,(%rax)
 24b:	02 10                	add    (%rax),%dl
 24d:	02 6e 01             	add    0x1(%rsi),%ch
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 250:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 252:	56                   	push   %rsi
 253:	02 00                	add    (%rax),%al
 255:	00 01                	add    %al,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 257:	c6 06 00             	movb   $0x0,(%rsi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 25a:	00 02                	add    %al,(%rdx)
 25c:	49 01 00             	add    %rax,(%r8)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 25f:	00 02                	add    %al,(%rdx)
 261:	35 00 00 00 02       	xor    $0x2000000,%eax
 266:	35 00 00 00 00       	xor    $0x0,%eax
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 26b:	00 0b                	add    %cl,(%rbx)
 26d:	6e                   	outsb  %ds:(%rsi),(%dx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 26e:	01 00                	add    %eax,(%rax)
 270:	00 1f                	add    %bl,(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44 (discriminator 2)
        for (int i = 0; i < len; i++)
 272:	00 00                	add    %al,(%rax)
 274:	00 00                	add    %al,(%rax)
 276:	30 08                	xor    %cl,(%rax)
 278:	07                   	(bad)  
 279:	6e                   	outsb  %ds:(%rsi),(%dx)
 27a:	01 00                	add    %eax,(%rax)
 27c:	00 f8                	add    %bh,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:59
        m_OffsetX = x;
 27e:	03 00                	add    (%rax),%eax
 280:	00 33                	add    %dh,(%rbx)
 282:	6e                   	outsb  %ds:(%rsi),(%dx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:60
        m_OffsetY = y;
 283:	01 00                	add    %eax,(%rax)
 285:	00 00                	add    %al,(%rax)
 287:	01 20                	add    %esp,(%rax)
	...
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:61
    }
 291:	99                   	cltd   
 292:	02 00                	add    (%rax),%al
 294:	00 a4 02 00 00 01 d0 	add    %ah,-0x2fff0000(%rdx,%rax,1)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 29b:	06                   	(bad)  
 29c:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 29e:	02 da                	add    %dl,%bl
 2a0:	06                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 2a1:	00 00                	add    %al,(%rax)
 2a3:	00 09                	add    %cl,(%rcx)
 2a5:	00 00                	add    %al,(%rax)
 2a7:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2a9:	08 0a                	or     %cl,(%rdx)
 2ab:	13 df                	adc    %edi,%ebx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 2ad:	06                   	(bad)  
 2ae:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2b0:	20 09                	and    %cl,(%rcx)
 2b2:	00 00                	add    %al,(%rax)
 2b4:	00 00                	add    %al,(%rax)
 2b6:	08 0b                	or     %cl,(%rbx)
 2b8:	12 bb 00 00 00 28    	adc    0x28000000(%rbx),%bh
 2be:	09 00                	or     %eax,(%rax)
Video::TextModePresenter::Text(Video::Point, char const*, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:29
        Text(point, text, 15, 0);
 2c0:	00 00                	add    %al,(%rax)
 2c2:	00 08                	add    %cl,(%rax)
 2c4:	0c 12                	or     $0x12,%al
 2c6:	bb 00 00 00 2a       	mov    $0x2a000000,%ebx
 2cb:	03 00                	add    (%rax),%eax
 2cd:	00 00                	add    %al,(%rax)
 2cf:	00 01                	add    %al,(%rcx)
 2d1:	08 05 00 00 00 00    	or     %al,0x0(%rip)        # 2d7 <.debug_info+0x2d7>
 2d7:	df 02                	filds  (%rdx)
 2d9:	00 00                	add    %al,(%rax)
 2db:	e5 02                	in     $0x2,%eax
 2dd:	00 00                	add    %al,(%rax)
 2df:	01 d0                	add    %edx,%eax
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2e1:	06                   	(bad)  
 2e2:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:64
    {
 2e4:	00 03                	add    %al,(%rbx)
 2e6:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2e8:	00 00                	add    %al,(%rax)
 2ea:	08 10                	or     %dl,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2ec:	09 00                	or     %eax,(%rax)
 2ee:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2f0:	00 f9                	add    %bh,%cl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2f2:	02 00                	add    (%rax),%al
 2f4:	00 04 03             	add    %al,(%rbx,%rax,1)
 2f7:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2f9:	01 d0                	add    %edx,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2fb:	06                   	(bad)  
 2fc:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2fe:	01 35 00 00 00 00    	add    %esi,0x0(%rip)        # 304 <.debug_info+0x304>
 304:	12 00                	adc    (%rax),%al
 306:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 308:	00 01                	add    %al,(%rcx)
 30a:	10 0a                	adc    %cl,(%rdx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:67
    }
 30c:	00 00                	add    %al,(%rax)
 30e:	00 00                	add    %al,(%rax)
Video::TextModePresenter::MoveUp():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 310:	02 10                	add    (%rax),%dl
 312:	00 71 02             	add    %dh,0x2(%rcx)
 315:	00 00                	add    %al,(%rax)
 317:	1f                   	(bad)  
 318:	03 00                	add    (%rax),%eax
 31a:	00 25 03 00 00 01    	add    %ah,0x1000003(%rip)        # 1000323 <Video::TextModePresenter::MoveUp()+0x1000013>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74
            for (int col = 0; col < 80; col++)
 320:	d0 06                	rolb   (%rsi)
 322:	00 00                	add    %al,(%rax)
 324:	00 12                	add    %dl,(%rdx)
 326:	00 00                	add    %al,(%rax)
 328:	00 00                	add    %al,(%rax)
 32a:	01 1b                	add    %ebx,(%rbx)
 32c:	0a 00                	or     (%rax),%al
 32e:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76 (discriminator 3)
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 330:	00 02                	add    %al,(%rdx)
 332:	10 01                	adc    %al,(%rcx)
 334:	71 02                	jno    338 <.debug_info+0x338>
 336:	00 00                	add    %al,(%rax)
 338:	40 03 00             	rex add (%rax),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74 (discriminator 3)
            for (int col = 0; col < 80; col++)
 33b:	00 55 03             	add    %dl,0x3(%rbp)
 33e:	00 00                	add    %al,(%rax)
 340:	01 d0                	add    %edx,%eax
 342:	06                   	(bad)  
 343:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:72 (discriminator 2)
        for (int ln = 0; ln < 25; ln++)
 345:	02 49 01             	add    0x1(%rcx),%cl
 348:	00 00                	add    %al,(%rax)
 34a:	02 e4                	add    %ah,%ah
 34c:	06                   	(bad)  
 34d:	00 00                	add    %al,(%rax)
 34f:	02 35 00 00 00 00    	add    0x0(%rip),%dh        # 355 <.debug_info+0x355>
 355:	03 00                	add    (%rax),%eax
 357:	00 00                	add    %al,(%rax)
 359:	00 01                	add    %al,(%rcx)
 35b:	20 0a                	and    %cl,(%rdx)
 35d:	00 00                	add    %al,(%rax)
 35f:	00 00                	add    %al,(%rax)
 361:	69 03 00 00 83 03    	imul   $0x3830000,(%rbx),%eax
 367:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 369:	01 d0                	add    %edx,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 36b:	06                   	(bad)  
 36c:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 36e:	02 49 01             	add    0x1(%rcx),%cl
 371:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 373:	02 e4                	add    %ah,%ah
 375:	06                   	(bad)  
 376:	00 00                	add    %al,(%rax)
 378:	02 a8 00 00 00 02    	add    0x2000000(%rax),%ch
 37e:	a8 00                	test   $0x0,%al
 380:	00 00                	add    %al,(%rax)
 382:	00 03                	add    %al,(%rbx)
 384:	00 00                	add    %al,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	01 3f                	add    %edi,(%rdi)
 38a:	0a 00                	or     (%rax),%al
 38c:	00 00                	add    %al,(%rax)
 38e:	00 97 03 00 00 b1    	add    %dl,-0x4efffffd(%rdi)
 394:	03 00                	add    (%rax),%eax
 396:	00 01                	add    %al,(%rcx)
 398:	d0 06                	rolb   (%rsi)
 39a:	00 00                	add    %al,(%rax)
 39c:	02 49 01             	add    0x1(%rcx),%cl
 39f:	00 00                	add    %al,(%rax)
 3a1:	02 e9                	add    %cl,%ch
 3a3:	06                   	(bad)  
 3a4:	00 00                	add    %al,(%rax)
 3a6:	02 a8 00 00 00 02    	add    0x2000000(%rax),%ch
 3ac:	a8 00                	test   $0x0,%al
 3ae:	00 00                	add    %al,(%rax)
 3b0:	00 03                	add    %al,(%rbx)
 3b2:	00 00                	add    %al,(%rax)
 3b4:	00 00                	add    %al,(%rax)
 3b6:	01 45 0a             	add    %eax,0xa(%rbp)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	c5 03 00             	(bad)
 3c0:	00 cb                	add    %cl,%bl
 3c2:	03 00                	add    (%rax),%eax
 3c4:	00 01                	add    %al,(%rcx)
 3c6:	d0 06                	rolb   (%rsi)
 3c8:	00 00                	add    %al,(%rax)
 3ca:	00 21                	add    %ah,(%rcx)
 3cc:	00 00                	add    %al,(%rax)
 3ce:	00 00                	add    %al,(%rax)
 3d0:	01 53 0a             	add    %edx,0xa(%rbx)
 3d3:	00 00                	add    %al,(%rax)
 3d5:	00 00                	add    %al,(%rax)
 3d7:	02 10                	add    (%rax),%dl
 3d9:	02 71 02             	add    0x2(%rcx),%dh
 3dc:	00 00                	add    %al,(%rax)
 3de:	e2 03                	loop   3e3 <.debug_info+0x3e3>
 3e0:	00 00                	add    %al,(%rax)
 3e2:	01 d0                	add    %edx,%eax
 3e4:	06                   	(bad)  
 3e5:	00 00                	add    %al,(%rax)
 3e7:	02 49 01             	add    0x1(%rcx),%cl
 3ea:	00 00                	add    %al,(%rax)
 3ec:	02 35 00 00 00 02    	add    0x2000000(%rip),%dh        # 20003f2 <Video::TextModePresenter::MoveUp()+0x20000e2>
 3f2:	35 00 00 00 00       	xor    $0x0,%eax
 3f7:	00 0b                	add    %cl,(%rbx)
 3f9:	71 02                	jno    3fd <.debug_info+0x3fd>
 3fb:	00 00                	add    %al,(%rax)
 3fd:	00 1a                	add    %bl,(%rdx)
 3ff:	00 00                	add    %al,(%rax)
 401:	00 00                	add    %al,(%rax)
 403:	18 05 17 07 92 06    	sbb    %al,0x6920717(%rip)        # 6920b20 <Video::TextModePresenter::MoveUp()+0x6920810>
 409:	00 00                	add    %al,(%rax)
 40b:	03 00                	add    (%rax),%eax
 40d:	00 00                	add    %al,(%rax)
 40f:	00 05 1a 05 00 00    	add    %al,0x51a(%rip)        # 92f <.debug_info+0x92f>
 415:	00 00                	add    %al,(%rax)
 417:	1f                   	(bad)  
 418:	04 00                	add    $0x0,%al
 41a:	00 25 04 00 00 01    	add    %ah,0x1000004(%rip)        # 1000424 <Video::TextModePresenter::MoveUp()+0x1000114>
 420:	97                   	xchg   %eax,%edi
 421:	06                   	(bad)  
 422:	00 00                	add    %al,(%rax)
 424:	00 03                	add    %al,(%rbx)
 426:	00 00                	add    %al,(%rax)
 428:	00 00                	add    %al,(%rax)
 42a:	05 22 05 00 00       	add    $0x522,%eax
 42f:	00 00                	add    %al,(%rax)
 431:	39 04 00             	cmp    %eax,(%rax,%rax,1)
 434:	00 44 04 00          	add    %al,0x0(%rsp,%rax,1)
 438:	00 01                	add    %al,(%rcx)
 43a:	97                   	xchg   %eax,%edi
 43b:	06                   	(bad)  
 43c:	00 00                	add    %al,(%rax)
 43e:	01 35 00 00 00 00    	add    %esi,0x0(%rip)        # 444 <.debug_info+0x444>
 444:	0c 00                	or     $0x0,%al
 446:	00 00                	add    %al,(%rax)
 448:	00 27                	add    %ah,(%rdi)
 44a:	11 00                	adc    %eax,(%rax)
 44c:	00 00                	add    %al,(%rax)
 44e:	00 9c 06 00 00 5b 04 	add    %bl,0x45b0000(%rsi,%rax,1)
 455:	00 00                	add    %al,(%rax)
 457:	66 04 00             	data16 add $0x0,%al
 45a:	00 01                	add    %al,(%rcx)
 45c:	97                   	xchg   %eax,%edi
 45d:	06                   	(bad)  
 45e:	00 00                	add    %al,(%rax)
 460:	02 a1 06 00 00 00    	add    0x6(%rcx),%ah
 466:	03 00                	add    (%rax),%eax
 468:	00 00                	add    %al,(%rax)
 46a:	00 05 2b 0a 00 00    	add    %al,0xa2b(%rip)        # e9b <Video::TextModePresenter::MoveUp()+0xb8b>
 470:	00 00                	add    %al,(%rax)
 472:	7a 04                	jp     478 <.debug_info+0x478>
 474:	00 00                	add    %al,(%rax)
 476:	80 04 00 00          	addb   $0x0,(%rax,%rax,1)
 47a:	01 97 06 00 00 00    	add    %edx,0x6(%rdi)
 480:	22 41 64             	and    0x64(%rcx),%al
 483:	64 00 3e             	add    %bh,%fs:(%rsi)
 486:	00 00                	add    %al,(%rax)
 488:	00 00                	add    %al,(%rax)
 48a:	92                   	xchg   %eax,%edx
 48b:	04 00                	add    $0x0,%al
 48d:	00 9d 04 00 00 01    	add    %bl,0x1000004(%rbp)
 493:	97                   	xchg   %eax,%edi
 494:	06                   	(bad)  
 495:	00 00                	add    %al,(%rax)
 497:	02 39                	add    (%rcx),%bh
 499:	01 00                	add    %eax,(%rax)
 49b:	00 00                	add    %al,(%rax)
 49d:	22 41 64             	and    0x64(%rcx),%al
 4a0:	64 00 4c 00 00       	add    %cl,%fs:0x0(%rax,%rax,1)
 4a5:	00 00                	add    %al,(%rax)
 4a7:	af                   	scas   %es:(%rdi),%eax
 4a8:	04 00                	add    $0x0,%al
 4aa:	00 ba 04 00 00 01    	add    %bh,0x1000004(%rdx)
 4b0:	97                   	xchg   %eax,%edi
 4b1:	06                   	(bad)  
 4b2:	00 00                	add    %al,(%rax)
 4b4:	02 a6 06 00 00 00    	add    0x6(%rsi),%ah
 4ba:	23 41 64             	and    0x64(%rcx),%eax
 4bd:	64 00 62 12          	add    %ah,%fs:0x12(%rdx)
 4c1:	00 00                	add    %al,(%rax)
 4c3:	00 00                	add    %al,(%rax)
 4c5:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 4c6:	06                   	(bad)  
 4c7:	00 00                	add    %al,(%rax)
 4c9:	d1 04 00             	roll   (%rax,%rax,1)
 4cc:	00 dc                	add    %bl,%ah
 4ce:	04 00                	add    $0x0,%al
 4d0:	00 01                	add    %al,(%rcx)
 4d2:	97                   	xchg   %eax,%edi
 4d3:	06                   	(bad)  
 4d4:	00 00                	add    %al,(%rax)
 4d6:	02 b0 06 00 00 00    	add    0x6(%rax),%dh
 4dc:	03 00                	add    (%rax),%eax
 4de:	00 00                	add    %al,(%rax)
 4e0:	00 05 69 0a 00 00    	add    %al,0xa69(%rip)        # f4f <Video::TextModePresenter::MoveUp()+0xc3f>
 4e6:	00 00                	add    %al,(%rax)
 4e8:	f0 04 00             	lock add $0x0,%al
 4eb:	00 00                	add    %al,(%rax)
 4ed:	05 00 00 01 97       	add    $0x97010000,%eax
 4f2:	06                   	(bad)  
 4f3:	00 00                	add    %al,(%rax)
 4f5:	02 a6 06 00 00 02    	add    0x2000006(%rsi),%ah
 4fb:	d3 00                	roll   %cl,(%rax)
 4fd:	00 00                	add    %al,(%rax)
 4ff:	00 03                	add    %al,(%rbx)
 501:	00 00                	add    %al,(%rax)
 503:	00 00                	add    %al,(%rax)
 505:	05 6d 0a 00 00       	add    $0xa6d,%eax
 50a:	00 00                	add    %al,(%rax)
 50c:	14 05                	adc    $0x5,%al
 50e:	00 00                	add    %al,(%rax)
 510:	1f                   	(bad)  
 511:	05 00 00 01 97       	add    $0x97010000,%eax
 516:	06                   	(bad)  
 517:	00 00                	add    %al,(%rax)
 519:	02 39                	add    (%rcx),%bh
 51b:	01 00                	add    %eax,(%rax)
 51d:	00 00                	add    %al,(%rax)
 51f:	03 00                	add    (%rax),%eax
 521:	00 00                	add    %al,(%rax)
 523:	00 05 72 0a 00 00    	add    %al,0xa72(%rip)        # f9b <Video::TextModePresenter::MoveUp()+0xc8b>
 529:	00 00                	add    %al,(%rax)
 52b:	33 05 00 00 3e 05    	xor    0x53e0000(%rip),%eax        # 53e0531 <Video::TextModePresenter::MoveUp()+0x53e0221>
 531:	00 00                	add    %al,(%rax)
 533:	01 97 06 00 00 02    	add    %edx,0x2000006(%rdi)
 539:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 53a:	06                   	(bad)  
 53b:	00 00                	add    %al,(%rax)
 53d:	00 03                	add    %al,(%rbx)
 53f:	00 00                	add    %al,(%rax)
 541:	00 00                	add    %al,(%rax)
 543:	05 86 0a 00 00       	add    $0xa86,%eax
 548:	00 00                	add    %al,(%rax)
 54a:	52                   	push   %rdx
 54b:	05 00 00 5d 05       	add    $0x55d0000,%eax
 550:	00 00                	add    %al,(%rax)
 552:	01 97 06 00 00 02    	add    %edx,0x2000006(%rdi)
 558:	d3 00                	roll   %cl,(%rax)
 55a:	00 00                	add    %al,(%rax)
 55c:	00 0c 00             	add    %cl,(%rax,%rax,1)
 55f:	00 00                	add    %al,(%rax)
 561:	00 8b 0a 00 00 00    	add    %cl,0xa(%rbx)
 567:	00 b5 06 00 00 74    	add    %dh,0x74000006(%rbp)
 56d:	05 00 00 7f 05       	add    $0x57f0000,%eax
 572:	00 00                	add    %al,(%rax)
 574:	01 97 06 00 00 02    	add    %edx,0x2000006(%rdi)
 57a:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
 57b:	06                   	(bad)  
 57c:	00 00                	add    %al,(%rax)
 57e:	00 0c 00             	add    %cl,(%rax,%rax,1)
 581:	00 00                	add    %al,(%rax)
 583:	00 96 0a 00 00 00    	add    %dl,0xa(%rsi)
 589:	00 b5 06 00 00 96    	add    %dh,-0x69fffffa(%rbp)
 58f:	05 00 00 a1 05       	add    $0x5a10000,%eax
 594:	00 00                	add    %al,(%rax)
 596:	01 97 06 00 00 02    	add    %edx,0x2000006(%rdi)
 59c:	bc 06 00 00 00       	mov    $0x6,%esp
 5a1:	03 00                	add    (%rax),%eax
 5a3:	00 00                	add    %al,(%rax)
 5a5:	00 05 a4 0a 00 00    	add    %al,0xaa4(%rip)        # 104f <Video::TextModePresenter::MoveUp()+0xd3f>
 5ab:	00 00                	add    %al,(%rax)
 5ad:	b5 05                	mov    $0x5,%ch
 5af:	00 00                	add    %al,(%rax)
 5b1:	bb 05 00 00 01       	mov    $0x1000005,%ebx
 5b6:	97                   	xchg   %eax,%edi
 5b7:	06                   	(bad)  
 5b8:	00 00                	add    %al,(%rax)
 5ba:	00 0c 00             	add    %cl,(%rax,%rax,1)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 a9 0e 00 00 00    	add    %ch,0xe(%rcx)
 5c5:	00 d3                	add    %dl,%bl
 5c7:	00 00                	add    %al,(%rax)
 5c9:	00 d2                	add    %dl,%dl
 5cb:	05 00 00 d8 05       	add    $0x5d80000,%eax
 5d0:	00 00                	add    %al,(%rax)
 5d2:	01 97 06 00 00 00    	add    %edx,0x6(%rdi)
 5d8:	23 47 65             	and    0x65(%rdi),%eax
 5db:	74 00                	je     5dd <.debug_info+0x5dd>
 5dd:	ae                   	scas   %es:(%rdi),%al
 5de:	08 00                	or     %al,(%rax)
 5e0:	00 00                	add    %al,(%rax)
 5e2:	00 c1                	add    %al,%cl
 5e4:	06                   	(bad)  
 5e5:	00 00                	add    %al,(%rax)
 5e7:	ef                   	out    %eax,(%dx)
 5e8:	05 00 00 fa 05       	add    $0x5fa0000,%eax
 5ed:	00 00                	add    %al,(%rax)
 5ef:	01 97 06 00 00 02    	add    %edx,0x2000006(%rdi)
 5f5:	d3 00                	roll   %cl,(%rax)
 5f7:	00 00                	add    %al,(%rax)
 5f9:	00 0c 00             	add    %cl,(%rax,%rax,1)
 5fc:	00 00                	add    %al,(%rax)
 5fe:	00 ba 12 00 00 00    	add    %bh,0x12(%rdx)
 604:	00 a6 06 00 00 11    	add    %ah,0x11000006(%rsi)
 60a:	06                   	(bad)  
 60b:	00 00                	add    %al,(%rax)
 60d:	17                   	(bad)  
 60e:	06                   	(bad)  
 60f:	00 00                	add    %al,(%rax)
 611:	01 97 06 00 00 00    	add    %edx,0x6(%rdi)
 617:	0c 00                	or     $0x0,%al
 619:	00 00                	add    %al,(%rax)
 61b:	00 bf 12 00 00 00    	add    %bh,0x12(%rdi)
 621:	00 a6 06 00 00 2e    	add    %ah,0x2e000006(%rsi)
 627:	06                   	(bad)  
 628:	00 00                	add    %al,(%rax)
 62a:	34 06                	xor    $0x6,%al
 62c:	00 00                	add    %al,(%rax)
 62e:	01 97 06 00 00 00    	add    %edx,0x6(%rdi)
 634:	0c 00                	or     $0x0,%al
 636:	00 00                	add    %al,(%rax)
 638:	00 d3                	add    %dl,%bl
 63a:	08 00                	or     %al,(%rax)
 63c:	00 00                	add    %al,(%rax)
 63e:	00 bc 06 00 00 4b 06 	add    %bh,0x64b0000(%rsi,%rax,1)
 645:	00 00                	add    %al,(%rax)
 647:	56                   	push   %rsi
 648:	06                   	(bad)  
 649:	00 00                	add    %al,(%rax)
 64b:	01 97 06 00 00 02    	add    %edx,0x2000006(%rdi)
 651:	35 00 00 00 00       	xor    $0x0,%eax
 656:	09 00                	or     %eax,(%rax)
 658:	00 00                	add    %al,(%rax)
 65a:	00 05 d9 12 a6 06    	add    %al,0x6a612d9(%rip)        # 6a61939 <Video::TextModePresenter::MoveUp()+0x6a61629>
 660:	00 00                	add    %al,(%rax)
 662:	00 09                	add    %cl,(%rcx)
 664:	00 00                	add    %al,(%rax)
 666:	00 00                	add    %al,(%rax)
 668:	05 d9 1c a6 06       	add    $0x6a61cd9,%eax
 66d:	00 00                	add    %al,(%rax)
 66f:	08 09                	or     %cl,(%rcx)
 671:	00 00                	add    %al,(%rax)
 673:	00 00                	add    %al,(%rax)
 675:	05 da 0e d3 00       	add    $0xd30eda,%eax
 67a:	00 00                	add    %al,(%rax)
 67c:	10 09                	adc    %cl,(%rcx)
 67e:	00 00                	add    %al,(%rax)
 680:	00 00                	add    %al,(%rax)
 682:	05 db 0e 41 00       	add    $0x410edb,%eax
 687:	00 00                	add    %al,(%rax)
 689:	14 34                	adc    $0x34,%al
 68b:	54                   	push   %rsp
 68c:	00 b0 06 00 00 00    	add    %dh,0x6(%rax)
 692:	0b fe                	or     %esi,%edi
 694:	03 00                	add    (%rax),%eax
 696:	00 05 fe 03 00 00    	add    %al,0x3fe(%rip)        # a9a <.debug_info+0xa9a>
 69c:	11 fe                	adc    %edi,%esi
 69e:	03 00                	add    (%rax),%eax
 6a0:	00 11                	add    %dl,(%rcx)
 6a2:	92                   	xchg   %eax,%edx
 6a3:	06                   	(bad)  
 6a4:	00 00                	add    %al,(%rax)
 6a6:	05 ab 06 00 00       	add    $0x6ab,%eax
 6ab:	35 00 00 00 00       	xor    $0x0,%eax
 6b0:	05 69 01 00 00       	add    $0x169,%eax
 6b5:	04 01                	add    $0x1,%al
 6b7:	02 00                	add    (%rax),%al
 6b9:	00 00                	add    %al,(%rax)
 6bb:	00 11                	add    %dl,(%rcx)
 6bd:	b0 06                	mov    $0x6,%al
 6bf:	00 00                	add    %al,(%rax)
 6c1:	05 b0 06 00 00       	add    $0x6b0,%eax
 6c6:	05 6e 01 00 00       	add    $0x16e,%eax
 6cb:	0b c6                	or     %esi,%eax
 6cd:	06                   	(bad)  
 6ce:	00 00                	add    %al,(%rax)
 6d0:	05 71 02 00 00       	add    $0x271,%eax
 6d5:	0b d0                	or     %eax,%edx
 6d7:	06                   	(bad)  
 6d8:	00 00                	add    %al,(%rax)
 6da:	11 f8                	adc    %edi,%eax
 6dc:	03 00                	add    (%rax),%eax
 6de:	00 05 bb 00 00 00    	add    %al,0xbb(%rip)        # 79f <.debug_info+0x79f>
 6e4:	05 f0 06 00 00       	add    $0x6f0,%eax
 6e9:	04 01                	add    $0x1,%al
 6eb:	06                   	(bad)  
 6ec:	00 00                	add    %al,(%rax)
 6ee:	00 00                	add    %al,(%rax)
 6f0:	0b e9                	or     %ecx,%ebp
 6f2:	06                   	(bad)  
 6f3:	00 00                	add    %al,(%rax)
 6f5:	11 6c 02 00          	adc    %ebp,0x0(%rdx,%rax,1)
 6f9:	00 36                	add    %dh,(%rsi)
 6fb:	35 00 00 00 05       	xor    $0x5000000,%eax
 700:	07                   	(bad)  
 701:	00 00                	add    %al,(%rax)
 703:	37                   	(bad)  
 704:	00 05 0a 07 00 00    	add    %al,0x70a(%rip)        # e14 <Video::TextModePresenter::MoveUp()+0xb04>
 70a:	38 08                	cmp    %cl,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	fa                   	cli    
 711:	06                   	(bad)  
 712:	00 00                	add    %al,(%rax)
 714:	39 00                	cmp    %eax,(%rax)
 716:	00 00                	add    %al,(%rax)
 718:	00 09                	add    %cl,(%rcx)
 71a:	0e                   	(bad)  
 71b:	08 f2                	or     %dh,%dl
 71d:	00 00                	add    %al,(%rax)
 71f:	00 2a                	add    %ch,(%rdx)
 721:	07                   	(bad)  
 722:	00 00                	add    %al,(%rax)
 724:	02 e4                	add    %ah,%ah
 726:	06                   	(bad)  
 727:	00 00                	add    %al,(%rax)
 729:	00 3a                	add    %bh,(%rdx)
 72b:	b3 01                	mov    $0x1,%bl
 72d:	00 00                	add    %al,(%rax)
 72f:	00 00                	add    %al,(%rax)
 731:	00 00                	add    %al,(%rax)
 733:	3b 07                	cmp    (%rdi),%eax
 735:	00 00                	add    %al,(%rax)
 737:	45 07                	rex.RB (bad) 
 739:	00 00                	add    %al,(%rax)
 73b:	13 00                	adc    (%rax),%eax
 73d:	00 00                	add    %al,(%rax)
 73f:	00 cb                	add    %cl,%bl
 741:	06                   	(bad)  
 742:	00 00                	add    %al,(%rax)
 744:	00 14 cb             	add    %dl,(%rbx,%rcx,8)
 747:	03 00                	add    (%rax),%eax
 749:	00 64 07 00          	add    %ah,0x0(%rdi,%rax,1)
	...
 755:	00 7b 00             	add    %bh,0x0(%rbx)
 758:	00 00                	add    %al,(%rax)
 75a:	00 00                	add    %al,(%rax)
 75c:	00 00                	add    %al,(%rax)
 75e:	01 9c 0d 08 00 00 16 	add    %ebx,0x16000008(%rbp,%rcx,1)
 765:	00 00                	add    %al,(%rax)
 767:	00 00                	add    %al,(%rax)
 769:	d5                   	(bad)  
 76a:	06                   	(bad)  
	...
 773:	00 00                	add    %al,(%rax)
 775:	07                   	(bad)  
 776:	00 00                	add    %al,(%rax)
 778:	00 00                	add    %al,(%rax)
 77a:	53                   	push   %rbx
 77b:	2d 49 01 00 00       	sub    $0x149,%eax
	...
 788:	07                   	(bad)  
 789:	00 00                	add    %al,(%rax)
 78b:	00 00                	add    %al,(%rax)
 78d:	53                   	push   %rbx
 78e:	38 35 00 00 00 00    	cmp    %dh,0x0(%rip)        # 794 <.debug_info+0x794>
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	00 00                	add    %al,(%rax)
 79a:	00 07                	add    %al,(%rdi)
 79c:	00 00                	add    %al,(%rax)
 79e:	00 00                	add    %al,(%rax)
 7a0:	53                   	push   %rbx
 7a1:	43 35 00 00 00 00    	rex.XB xor $0x0,%eax
 7a7:	00 00                	add    %al,(%rax)
 7a9:	00 00                	add    %al,(%rax)
 7ab:	00 00                	add    %al,(%rax)
 7ad:	00 06                	add    %al,(%rsi)
 7af:	78 00                	js     7b1 <.debug_info+0x7b1>
 7b1:	55                   	push   %rbp
 7b2:	0d 35 00 00 00       	or     $0x35,%eax
	...
 7bf:	06                   	(bad)  
 7c0:	79 00                	jns    7c2 <.debug_info+0x7c2>
 7c2:	56                   	push   %rsi
 7c3:	0d 35 00 00 00       	or     $0x35,%eax
	...
 7d0:	3b 00                	cmp    (%rax),%eax
 7d2:	00 00                	add    %al,(%rax)
 7d4:	00 01                	add    %al,(%rcx)
 7d6:	58                   	pop    %rax
 7d7:	18 c7                	sbb    %al,%bh
 7d9:	00 00                	add    %al,(%rax)
 7db:	00 00                	add    %al,(%rax)
 7dd:	0f 24                	(bad)  
 7df:	00 00                	add    %al,(%rax)
 7e1:	00 00                	add    %al,(%rax)
 7e3:	06                   	(bad)  
 7e4:	79 00                	jns    7e6 <.debug_info+0x7e6>
 7e6:	59                   	pop    %rcx
 7e7:	12 35 00 00 00 00    	adc    0x0(%rip),%dh        # 7ed <.debug_info+0x7ed>
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 00                	add    %al,(%rax)
 7f1:	00 00                	add    %al,(%rax)
 7f3:	00 24 00             	add    %ah,(%rax,%rax,1)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	00 06                	add    %al,(%rsi)
 7fa:	78 00                	js     7fc <.debug_info+0x7fc>
 7fc:	5b                   	pop    %rbx
 7fd:	16                   	(bad)  
 7fe:	35 00 00 00 00       	xor    $0x0,%eax
	...
 80b:	00 00                	add    %al,(%rax)
 80d:	14 b1                	adc    $0xb1,%al
 80f:	03 00                	add    (%rax),%eax
 811:	00 2c 08             	add    %ch,(%rax,%rcx,1)
	...
 81c:	00 00                	add    %al,(%rax)
 81e:	68 00 00 00 00       	push   $0x0
 823:	00 00                	add    %al,(%rax)
 825:	00 01                	add    %al,(%rcx)
 827:	9c                   	pushf  
 828:	ba 08 00 00 3c       	mov    $0x3c000008,%edx
 82d:	00 00                	add    %al,(%rax)
 82f:	00 00                	add    %al,(%rax)
 831:	d5                   	(bad)  
 832:	06                   	(bad)  
 833:	00 00                	add    %al,(%rax)
 835:	01 55 3d             	add    %edx,0x3d(%rbp)
 838:	00 00                	add    %al,(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	01 47 13             	add    %eax,0x13(%rdi)
 83f:	df 06                	filds  (%rsi)
 841:	00 00                	add    %al,(%rax)
 843:	a0 80 0b 00 3e 00 00 	movabs 0x3e000b80,%al
 84a:	00 00 
 84c:	00 00                	add    %al,(%rax)
 84e:	00 00                	add    %al,(%rax)
 850:	58                   	pop    %rax
 851:	00 00                	add    %al,(%rax)
 853:	00 00                	add    %al,(%rax)
 855:	00 00                	add    %al,(%rax)
 857:	00 94 08 00 00 06 6c 	add    %dl,0x6c060000(%rax,%rcx,1)
 85e:	6e                   	outsb  %ds:(%rsi),(%dx)
 85f:	00 48 12             	add    %cl,0x12(%rax)
 862:	35 00 00 00 00       	xor    $0x0,%eax
 867:	00 00                	add    %al,(%rax)
 869:	00 00                	add    %al,(%rax)
 86b:	00 00                	add    %al,(%rax)
 86d:	00 25 00 00 00 00    	add    %ah,0x0(%rip)        # 873 <.debug_info+0x873>
 873:	00 00                	add    %al,(%rax)
 875:	00 00                	add    %al,(%rax)
 877:	34 00                	xor    $0x0,%al
 879:	00 00                	add    %al,(%rax)
 87b:	00 00                	add    %al,(%rax)
 87d:	00 00                	add    %al,(%rax)
 87f:	06                   	(bad)  
 880:	63 6f 6c             	movsxd 0x6c(%rdi),%ebp
 883:	00 4a 16             	add    %cl,0x16(%rdx)
 886:	35 00 00 00 00       	xor    $0x0,%eax
	...
 893:	00 25 00 00 00 00    	add    %ah,0x0(%rip)        # 899 <.debug_info+0x899>
 899:	00 00                	add    %al,(%rax)
 89b:	00 00                	add    %al,(%rax)
 89d:	0f 00 00             	sldt   (%rax)
 8a0:	00 00                	add    %al,(%rax)
 8a2:	00 00                	add    %al,(%rax)
 8a4:	00 06                	add    %al,(%rsi)
 8a6:	63 6f 6c             	movsxd 0x6c(%rdi),%ebp
 8a9:	00 4f 12             	add    %cl,0x12(%rdi)
 8ac:	35 00 00 00 00       	xor    $0x0,%eax
	...
 8b9:	00 17                	add    %dl,(%rdi)
 8bb:	83 03 00             	addl   $0x0,(%rbx)
 8be:	00 c8                	add    %cl,%al
 8c0:	08 00                	or     %al,(%rax)
 8c2:	00 01                	add    %al,(%rcx)
 8c4:	fa                   	cli    
 8c5:	08 00                	or     %al,(%rax)
 8c7:	00 13                	add    %dl,(%rbx)
 8c9:	00 00                	add    %al,(%rax)
 8cb:	00 00                	add    %al,(%rax)
 8cd:	d5                   	(bad)  
 8ce:	06                   	(bad)  
 8cf:	00 00                	add    %al,(%rax)
 8d1:	18 00                	sbb    %al,(%rax)
 8d3:	00 00                	add    %al,(%rax)
 8d5:	00 28                	add    %ch,(%rax)
 8d7:	49 01 00             	add    %rax,(%r8)
 8da:	00 15 63 00 01 3f    	add    %dl,0x3f010063(%rip)        # 3f010943 <Video::TextModePresenter::MoveUp()+0x3f010633>
 8e0:	34 e9                	xor    $0xe9,%al
 8e2:	06                   	(bad)  
 8e3:	00 00                	add    %al,(%rax)
 8e5:	18 00                	sbb    %al,(%rax)
 8e7:	00 00                	add    %al,(%rax)
 8e9:	00 3f                	add    %bh,(%rdi)
 8eb:	a8 00                	test   $0x0,%al
 8ed:	00 00                	add    %al,(%rax)
 8ef:	18 00                	sbb    %al,(%rax)
 8f1:	00 00                	add    %al,(%rax)
 8f3:	00 53 a8             	add    %dl,-0x58(%rbx)
 8f6:	00 00                	add    %al,(%rax)
 8f8:	00 00                	add    %al,(%rax)
 8fa:	14 55                	adc    $0x55,%al
 8fc:	03 00                	add    (%rax),%eax
 8fe:	00 19                	add    %bl,(%rcx)
 900:	09 00                	or     %eax,(%rax)
	...
 90a:	00 b6 01 00 00 00    	add    %dh,0x1(%rsi)
 910:	00 00                	add    %al,(%rax)
 912:	00 01                	add    %al,(%rcx)
 914:	9c                   	pushf  
 915:	56                   	push   %rsi
 916:	0b 00                	or     (%rax),%eax
 918:	00 16                	add    %dl,(%rsi)
 91a:	00 00                	add    %al,(%rax)
 91c:	00 00                	add    %al,(%rax)
 91e:	d5                   	(bad)  
 91f:	06                   	(bad)  
	...
 928:	00 00                	add    %al,(%rax)
 92a:	07                   	(bad)  
 92b:	00 00                	add    %al,(%rax)
 92d:	00 00                	add    %al,(%rax)
 92f:	20 28                	and    %ch,(%rax)
 931:	49 01 00             	add    %rax,(%r8)
	...
 93c:	00 07                	add    %al,(%rdi)
 93e:	00 00                	add    %al,(%rax)
 940:	00 00                	add    %al,(%rax)
 942:	20 3b                	and    %bh,(%rbx)
 944:	e4 06                	in     $0x6,%al
	...
 94e:	00 00                	add    %al,(%rax)
 950:	07                   	(bad)  
 951:	00 00                	add    %al,(%rax)
 953:	00 00                	add    %al,(%rax)
 955:	20 49 a8             	and    %cl,-0x58(%rcx)
	...
 960:	00 00                	add    %al,(%rax)
 962:	00 07                	add    %al,(%rdi)
 964:	00 00                	add    %al,(%rax)
 966:	00 00                	add    %al,(%rax)
 968:	20 5d a8             	and    %bl,-0x58(%rbp)
	...
 973:	00 00                	add    %al,(%rax)
 975:	00 06                	add    %al,(%rsi)
 977:	78 00                	js     979 <.debug_info+0x979>
 979:	22 0d 35 00 00 00    	and    0x35(%rip),%cl        # 9b4 <.debug_info+0x9b4>
	...
 987:	06                   	(bad)  
 988:	79 00                	jns    98a <.debug_info+0x98a>
 98a:	23 0d 35 00 00 00    	and    0x35(%rip),%ecx        # 9c5 <.debug_info+0x9c5>
	...
 998:	06                   	(bad)  
 999:	6c                   	insb   (%dx),%es:(%rdi)
 99a:	65 6e                	outsb  %gs:(%rsi),(%dx)
 99c:	00 2b                	add    %ch,(%rbx)
 99e:	10 f2                	adc    %dh,%dl
	...
 9a8:	00 00                	add    %al,(%rax)
 9aa:	00 3f                	add    %bh,(%rdi)
 9ac:	00 00                	add    %al,(%rax)
 9ae:	00 00                	add    %al,(%rax)
 9b0:	88 0a                	mov    %cl,(%rdx)
 9b2:	00 00                	add    %al,(%rax)
 9b4:	06                   	(bad)  
 9b5:	69 00 2c 12 35 00    	imul   $0x35122c,(%rax),%eax
	...
 9c3:	00 00                	add    %al,(%rax)
 9c5:	40 ba 08 00 00 00    	rex mov $0x8,%edx
 9cb:	00 00                	add    %al,(%rax)
 9cd:	00 00                	add    %al,(%rax)
 9cf:	00 00                	add    %al,(%rax)
 9d1:	00 02                	add    %al,(%rdx)
 9d3:	00 00                	add    %al,(%rax)
 9d5:	00 00                	add    %al,(%rax)
 9d7:	01 2e                	add    %ebp,(%rsi)
 9d9:	11 10                	adc    %edx,(%rax)
 9db:	0a 00                	or     (%rax),%al
 9dd:	00 08                	add    %cl,(%rax)
 9df:	ef                   	out    %eax,(%dx)
 9e0:	08 00                	or     %al,(%rax)
 9e2:	00 08                	add    %cl,(%rax)
 9e4:	e5 08                	in     $0x8,%eax
 9e6:	00 00                	add    %al,(%rax)
 9e8:	0d db 08 00 00       	or     $0x8db,%eax
	...
 9f5:	0d d1 08 00 00       	or     $0x8d1,%eax
	...
 a02:	0d c8 08 00 00       	or     $0x8c8,%eax
	...
 a0f:	00 26                	add    %ah,(%rsi)
 a11:	e6 0b                	out    %al,$0xb
	...
 a1b:	00 00                	add    %al,(%rax)
 a1d:	2b 00                	sub    (%rax),%eax
 a1f:	00 00                	add    %al,(%rax)
 a21:	00 00                	add    %al,(%rax)
 a23:	00 00                	add    %al,(%rax)
 a25:	36 1a 77 0a          	ss sbb 0xa(%rdi),%dh
 a29:	00 00                	add    %al,(%rax)
 a2b:	08 f4                	or     %dh,%ah
 a2d:	0b 00                	or     (%rax),%eax
 a2f:	00 0e                	add    %cl,(%rsi)
 a31:	fd                   	std    
 a32:	0b 00                	or     (%rax),%eax
	...
 a3c:	00 2b                	add    %ch,(%rbx)
 a3e:	00 00                	add    %al,(%rax)
 a40:	00 00                	add    %al,(%rax)
 a42:	00 00                	add    %al,(%rax)
 a44:	00 0f                	add    %cl,(%rdi)
 a46:	fe 0b                	decb   (%rbx)
	...
 a50:	00 00                	add    %al,(%rax)
 a52:	0e                   	(bad)  
 a53:	07                   	(bad)  
 a54:	0c 00                	or     $0x0,%al
	...
 a5e:	00 1f                	add    %bl,(%rdi)
 a60:	00 00                	add    %al,(%rax)
 a62:	00 00                	add    %al,(%rax)
 a64:	00 00                	add    %al,(%rax)
 a66:	00 0f                	add    %cl,(%rdi)
 a68:	08 0c 00             	or     %cl,(%rax,%rax,1)
	...
 a77:	27                   	(bad)  
	...
 a80:	0a 01                	or     (%rcx),%al
 a82:	55                   	push   %rbp
 a83:	02 7e 00             	add    0x0(%rsi),%bh
 a86:	00 00                	add    %al,(%rax)
 a88:	28 9d 0c 00 00 00    	sub    %bl,0xc(%rbp)
 a8e:	00 00                	add    %al,(%rax)
 a90:	00 23                	add    %ah,(%rbx)
 a92:	4e a7                	rex.WRX cmpsq %es:(%rdi),%ds:(%rsi)
 a94:	0a 00                	or     (%rax),%al
 a96:	00 08                	add    %cl,(%rax)
 a98:	bf 0c 00 00 08       	mov    $0x800000c,%edi
 a9d:	b3 0c                	mov    $0xc,%bl
 a9f:	00 00                	add    %al,(%rax)
 aa1:	08 a7 0c 00 00 00    	or     %ah,0xc(%rdi)
 aa7:	28 9d 0c 00 00 00    	sub    %bl,0xc(%rbp)
 aad:	00 00                	add    %al,(%rax)
 aaf:	00 22                	add    %ah,(%rdx)
 ab1:	42 c6                	rex.X (bad) 
 ab3:	0a 00                	or     (%rax),%al
 ab5:	00 08                	add    %cl,(%rax)
 ab7:	bf 0c 00 00 08       	mov    $0x800000c,%edi
 abc:	b3 0c                	mov    $0xc,%bl
 abe:	00 00                	add    %al,(%rax)
 ac0:	08 a7 0c 00 00 00    	or     %ah,0xc(%rdi)
 ac6:	26 e6 0b             	es out %al,$0xb
	...
 ad1:	00 00                	add    %al,(%rax)
 ad3:	25 00 00 00 00       	and    $0x0,%eax
 ad8:	00 00                	add    %al,(%rax)
 ada:	00 28                	add    %ch,(%rax)
 adc:	12 2d 0b 00 00 08    	adc    0x800000b(%rip),%ch        # 8000aed <Video::TextModePresenter::MoveUp()+0x80007dd>
 ae2:	f4                   	hlt    
 ae3:	0b 00                	or     (%rax),%eax
 ae5:	00 0e                	add    %cl,(%rsi)
 ae7:	fd                   	std    
 ae8:	0b 00                	or     (%rax),%eax
	...
 af2:	00 25 00 00 00 00    	add    %ah,0x0(%rip)        # af8 <.debug_info+0xaf8>
 af8:	00 00                	add    %al,(%rax)
 afa:	00 0f                	add    %cl,(%rdi)
 afc:	fe 0b                	decb   (%rbx)
	...
 b06:	00 00                	add    %al,(%rax)
 b08:	0e                   	(bad)  
 b09:	07                   	(bad)  
 b0a:	0c 00                	or     $0x0,%al
	...
 b14:	00 19                	add    %bl,(%rcx)
 b16:	00 00                	add    %al,(%rax)
 b18:	00 00                	add    %al,(%rax)
 b1a:	00 00                	add    %al,(%rax)
 b1c:	00 0f                	add    %cl,(%rdi)
 b1e:	08 0c 00             	or     %cl,(%rax,%rax,1)
	...
 b2d:	41 00 00             	add    %al,(%r8)
 b30:	00 00                	add    %al,(%rax)
 b32:	00 00                	add    %al,(%rax)
 b34:	00 00                	add    %al,(%rax)
 b36:	14 07                	adc    $0x7,%al
 b38:	00 00                	add    %al,(%rax)
 b3a:	45 0b 00             	or     (%r8),%r8d
 b3d:	00 0a                	add    %cl,(%rdx)
 b3f:	01 55 02             	add    %edx,0x2(%rbp)
 b42:	73 00                	jae    b44 <.debug_info+0xb44>
 b44:	00 27                	add    %ah,(%rdi)
	...
 b4e:	0a 01                	or     (%rcx),%al
 b50:	55                   	push   %rbp
 b51:	02 7e 00             	add    0x0(%rsi),%bh
 b54:	00 00                	add    %al,(%rax)
 b56:	14 25                	adc    $0x25,%al
 b58:	03 00                	add    (%rax),%eax
 b5a:	00 75 0b             	add    %dh,0xb(%rbp)
	...
 b65:	00 00                	add    %al,(%rax)
 b67:	14 00                	adc    $0x0,%al
 b69:	00 00                	add    %al,(%rax)
 b6b:	00 00                	add    %al,(%rax)
 b6d:	00 00                	add    %al,(%rax)
 b6f:	01 9c e6 0b 00 00 16 	add    %ebx,0x1600000b(%rsi,%riz,8)
 b76:	00 00                	add    %al,(%rax)
 b78:	00 00                	add    %al,(%rax)
 b7a:	d5                   	(bad)  
 b7b:	06                   	(bad)  
	...
 b84:	00 00                	add    %al,(%rax)
 b86:	07                   	(bad)  
 b87:	00 00                	add    %al,(%rax)
 b89:	00 00                	add    %al,(%rax)
 b8b:	1b 28                	sbb    (%rax),%ebp
 b8d:	49 01 00             	add    %rax,(%r8)
	...
 b98:	00 07                	add    %al,(%rdi)
 b9a:	00 00                	add    %al,(%rax)
 b9c:	00 00                	add    %al,(%rax)
 b9e:	1b 3b                	sbb    (%rbx),%edi
 ba0:	e4 06                	in     $0x6,%al
	...
 baa:	00 00                	add    %al,(%rax)
 bac:	07                   	(bad)  
 bad:	00 00                	add    %al,(%rax)
 baf:	00 00                	add    %al,(%rax)
 bb1:	1b 45 35             	sbb    0x35(%rbp),%eax
	...
 bbc:	00 00                	add    %al,(%rax)
 bbe:	00 42 00             	add    %al,0x0(%rdx)
 bc1:	00 00                	add    %al,(%rax)
 bc3:	00 00                	add    %al,(%rax)
 bc5:	00 00                	add    %al,(%rax)
 bc7:	00 fa                	add    %bh,%dl
 bc9:	08 00                	or     %al,(%rax)
 bcb:	00 0a                	add    %cl,(%rdx)
 bcd:	01 55 03             	add    %edx,0x3(%rbp)
 bd0:	a3 01 55 0a 01 51 03 	movabs %eax,0x1a30351010a5501
 bd7:	a3 01 
 bd9:	51                   	push   %rcx
 bda:	0a 01                	or     (%rcx),%al
 bdc:	52                   	push   %rdx
 bdd:	01 3f                	add    %edi,(%rdi)
 bdf:	0a 01                	or     (%rcx),%al
 be1:	58                   	pop    %rax
 be2:	01 30                	add    %esi,(%rax)
 be4:	00 00                	add    %al,(%rax)
 be6:	17                   	(bad)  
 be7:	04 03                	add    $0x3,%al
 be9:	00 00                	add    %al,(%rax)
 beb:	f4                   	hlt    
 bec:	0b 00                	or     (%rax),%eax
 bee:	00 01                	add    %al,(%rcx)
 bf0:	14 0c                	adc    $0xc,%al
 bf2:	00 00                	add    %al,(%rax)
 bf4:	13 00                	adc    (%rax),%eax
 bf6:	00 00                	add    %al,(%rax)
 bf8:	00 d5                	add    %dl,%ch
 bfa:	06                   	(bad)  
 bfb:	00 00                	add    %al,(%rax)
 bfd:	29 2a                	sub    %ebp,(%rdx)
 bff:	79 00                	jns    c01 <.debug_info+0xc01>
 c01:	12 12                	adc    (%rdx),%dl
 c03:	35 00 00 00 29       	xor    $0x29000000,%eax
 c08:	2a 78 00             	sub    0x0(%rax),%bh
 c0b:	14 16                	adc    $0x16,%al
 c0d:	35 00 00 00 00       	xor    $0x0,%eax
 c12:	00 00                	add    %al,(%rax)
 c14:	17                   	(bad)  
 c15:	cb                   	lret   
 c16:	02 00                	add    (%rax),%al
 c18:	00 22                	add    %ah,(%rdx)
 c1a:	0c 00                	or     $0x0,%al
 c1c:	00 00                	add    %al,(%rax)
 c1e:	2c 0c                	sub    $0xc,%al
 c20:	00 00                	add    %al,(%rax)
 c22:	13 00                	adc    (%rax),%eax
 c24:	00 00                	add    %al,(%rax)
 c26:	00 d5                	add    %dl,%ch
 c28:	06                   	(bad)  
 c29:	00 00                	add    %al,(%rax)
 c2b:	00 43 14             	add    %al,0x14(%rbx)
 c2e:	0c 00                	or     $0x0,%al
 c30:	00 00                	add    %al,(%rax)
 c32:	00 00                	add    %al,(%rax)
 c34:	00 4f 0c             	add    %cl,0xc(%rdi)
	...
 c3f:	00 00                	add    %al,(%rax)
 c41:	3a 00                	cmp    (%rax),%al
 c43:	00 00                	add    %al,(%rax)
 c45:	00 00                	add    %al,(%rax)
 c47:	00 00                	add    %al,(%rax)
 c49:	01 9c 71 0c 00 00 0d 	add    %ebx,0xd00000c(%rcx,%rsi,2)
 c50:	22 0c 00             	and    (%rax,%rax,1),%cl
	...
 c5b:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 c5f:	00 00                	add    %al,(%rax)
 c61:	00 00                	add    %al,(%rax)
 c63:	00 00                	add    %al,(%rax)
 c65:	2a 07                	sub    (%rdi),%al
 c67:	00 00                	add    %al,(%rax)
 c69:	0a 01                	or     (%rcx),%al
 c6b:	55                   	push   %rbp
 c6c:	02 73 00             	add    0x0(%rbx),%dh
 c6f:	00 00                	add    %al,(%rax)
 c71:	1d 00 00 00 00       	sbb    $0x0,%eax
 c76:	02 13                	add    (%rbx),%dl
 c78:	9d                   	popf   
 c79:	0c 00                	or     $0x0,%al
 c7b:	00 45 00             	add    %al,0x0(%rbp)
 c7e:	00 00                	add    %al,(%rax)
 c80:	00 02                	add    %al,(%rdx)
 c82:	15 10 00 00 00       	adc    $0x10,%eax
 c87:	00 35 00 00 00 02    	add    %dh,0x2000000(%rip)        # 2000c8d <Video::TextModePresenter::MoveUp()+0x200097d>
 c8d:	e6 00                	out    %al,$0x0
 c8f:	00 00                	add    %al,(%rax)
 c91:	02 e6                	add    %dh,%ah
 c93:	00 00                	add    %al,(%rax)
 c95:	00 02                	add    %al,(%rdx)
 c97:	e6 00                	out    %al,$0x0
 c99:	00 00                	add    %al,(%rax)
 c9b:	00 00                	add    %al,(%rax)
 c9d:	46 7c 0c             	rex.RX jl cac <.debug_info+0xcac>
 ca0:	00 00                	add    %al,(%rax)
 ca2:	03 cc                	add    %esp,%ecx
 ca4:	0c 00                	or     $0x0,%al
 ca6:	00 15 6d 69 6e 00    	add    %dl,0x6e696d(%rip)        # 6e7619 <Video::TextModePresenter::MoveUp()+0x6e7309>
 cac:	02 15 2b e6 00 00    	add    0xe62b(%rip),%dl        # f2dd <Video::TextModePresenter::MoveUp()+0xefcd>
 cb2:	00 15 6d 61 78 00    	add    %dl,0x78616d(%rip)        # 786e25 <Video::TextModePresenter::MoveUp()+0x786b15>
 cb8:	02 15 39 e6 00 00    	add    0xe639(%rip),%dl        # f2f7 <Video::TextModePresenter::MoveUp()+0xefe7>
 cbe:	00 15 76 61 6c 00    	add    %dl,0x6c6176(%rip)        # 6c6e3a <Video::TextModePresenter::MoveUp()+0x6c6b2a>
 cc4:	02 15 47 e6 00 00    	add    0xe647(%rip),%dl        # f311 <Video::TextModePresenter::MoveUp()+0xf001>
 cca:	00 00                	add    %al,(%rax)
 ccc:	47 e6 0b             	rex.RXB out %al,$0xb
	...
 cdb:	00 00                	add    %al,(%rax)
 cdd:	3c 00                	cmp    $0x0,%al
 cdf:	00 00                	add    %al,(%rax)
 ce1:	00 00                	add    %al,(%rax)
 ce3:	00 00                	add    %al,(%rax)
 ce5:	01 9c 39 0d 00 00 19 	add    %ebx,0x1900000d(%rcx,%rdi,1)
 cec:	f4                   	hlt    
 ced:	0b 00                	or     (%rax),%eax
 cef:	00 01                	add    %al,(%rcx)
 cf1:	55                   	push   %rbp
 cf2:	0e                   	(bad)  
 cf3:	fd                   	std    
 cf4:	0b 00                	or     (%rax),%eax
	...
 cfe:	00 3b                	add    %bh,(%rbx)
 d00:	00 00                	add    %al,(%rax)
 d02:	00 00                	add    %al,(%rax)
 d04:	00 00                	add    %al,(%rax)
 d06:	00 0f                	add    %cl,(%rdi)
 d08:	fe 0b                	decb   (%rbx)
	...
 d12:	00 00                	add    %al,(%rax)
 d14:	0e                   	(bad)  
 d15:	07                   	(bad)  
 d16:	0c 00                	or     $0x0,%al
	...
 d20:	00 17                	add    %dl,(%rdi)
 d22:	00 00                	add    %al,(%rax)
 d24:	00 00                	add    %al,(%rax)
 d26:	00 00                	add    %al,(%rax)
 d28:	00 0f                	add    %cl,(%rdi)
 d2a:	08 0c 00             	or     %cl,(%rax,%rax,1)
	...
 d39:	48 ba 08 00 00 00 00 	movabs $0x8,%rdx
 d40:	00 00 00 
 d43:	00 00                	add    %al,(%rax)
 d45:	00 00                	add    %al,(%rax)
 d47:	00 00                	add    %al,(%rax)
 d49:	00 2c 00             	add    %ch,(%rax,%rax,1)
 d4c:	00 00                	add    %al,(%rax)
 d4e:	00 00                	add    %al,(%rax)
 d50:	00 00                	add    %al,(%rax)
 d52:	01 9c 19 c8 08 00 00 	add    %ebx,0x8c8(%rcx,%rbx,1)
 d59:	01 55 0d             	add    %edx,0xd(%rbp)
 d5c:	d1 08                	rorl   (%rax)
	...
 d66:	00 00                	add    %al,(%rax)
 d68:	19 db                	sbb    %ebx,%ebx
 d6a:	08 00                	or     %al,(%rax)
 d6c:	00 01                	add    %al,(%rcx)
 d6e:	51                   	push   %rcx
 d6f:	0d e5 08 00 00       	or     $0x8e5,%eax
	...
 d7c:	0d ef 08 00 00       	or     $0x8ef,%eax
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
   0:	01 05 00 49 13 34    	add    %eax,0x34134900(%rip)        # 34134906 <Video::TextModePresenter::MoveUp()+0x341345f6>
   6:	19 00                	sbb    %eax,(%rax)
   8:	00 02                	add    %al,(%rdx)
   a:	05 00 49 13 00       	add    $0x134900,%eax
   f:	00 03                	add    %al,(%rbx)
  11:	2e 01 3f             	cs add %edi,(%rdi)
  14:	19 03                	sbb    %eax,(%rbx)
  16:	0e                   	(bad)  
  17:	3a 0b                	cmp    (%rbx),%cl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
  19:	3b 0b                	cmp    (%rbx),%ecx
  1b:	39 0b                	cmp    %ecx,(%rbx)
  1d:	6e                   	outsb  %ds:(%rsi),(%dx)
  1e:	0e                   	(bad)  
  1f:	32 21                	xor    (%rcx),%ah
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = 0x00;
  21:	01 3c 19             	add    %edi,(%rcx,%rbx,1)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
            for (int x = 0; x < 80; x++)
  24:	64 13 01             	adc    %fs:(%rcx),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = 0x00;
  27:	13 00                	adc    (%rax),%eax
  29:	00 04 24             	add    %al,(%rsp)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
            for (int x = 0; x < 80; x++)
  2c:	00 0b                	add    %cl,(%rbx)
  2e:	0b 3e                	or     (%rsi),%edi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18 (discriminator 2)
        for (int y = 0; y < 25; y++)
  30:	0b 03                	or     (%rbx),%eax
  32:	0e                   	(bad)  
  33:	00 00                	add    %al,(%rax)
  35:	05 0f 00 0b 21       	add    $0x210b000f,%eax
  3a:	08 49 13             	or     %cl,0x13(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:25
    }
  3d:	00 00                	add    %al,(%rax)
  3f:	06                   	(bad)  
Video::TextModePresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  40:	34 00                	xor    $0x0,%al
  42:	03 08                	add    (%rax),%ecx
  44:	3a 21                	cmp    (%rcx),%ah
  46:	01 3b                	add    %edi,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  48:	0b 39                	or     (%rcx),%edi
  4a:	0b 49 13             	or     0x13(%rcx),%ecx
  4d:	02 17                	add    (%rdi),%dl
  4f:	b7 42                	mov    $0x42,%bh
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  51:	17                   	(bad)  
  52:	00 00                	add    %al,(%rax)
  54:	07                   	(bad)  
  55:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
  5a:	21 01                	and    %eax,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  5c:	3b 0b                	cmp    (%rbx),%ecx
  5e:	39 0b                	cmp    %ecx,(%rbx)
  60:	49 13 02             	adc    (%r10),%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  63:	17                   	(bad)  
  64:	b7 42                	mov    $0x42,%bh
  66:	17                   	(bad)  
  67:	00 00                	add    %al,(%rax)
  69:	08 05 00 31 13 00    	or     %al,0x133100(%rip)        # 13316f <Video::TextModePresenter::MoveUp()+0x132e5f>
  6f:	00 09                	add    %cl,(%rcx)
  71:	0d 00 03 0e 3a       	or     $0x3a0e0300,%eax
  76:	0b 3b                	or     (%rbx),%edi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  78:	0b 39                	or     (%rcx),%edi
  7a:	0b 49 13             	or     0x13(%rcx),%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93
                m_TextBuffer[(y * 80) + x] = blank;
  7d:	38 0b                	cmp    %cl,(%rbx)
  7f:	00 00                	add    %al,(%rax)
  81:	0a 49 00             	or     0x0(%rcx),%cl
  84:	02 18                	add    (%rax),%bl
  86:	7e 18                	jle    a0 <.debug_abbrev+0xa0>
  88:	00 00                	add    %al,(%rax)
  8a:	0b 26                	or     (%rsi),%esp
  8c:	00 49 13             	add    %cl,0x13(%rcx)
  8f:	00 00                	add    %al,(%rax)
  91:	0c 2e                	or     $0x2e,%al
  93:	01 3f                	add    %edi,(%rdi)
  95:	19 03                	sbb    %eax,(%rbx)
  97:	0e                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
  98:	3a 21                	cmp    (%rcx),%ah
  9a:	05 3b 0b 39 0b       	add    $0xb390b3b,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  9f:	6e                   	outsb  %ds:(%rsi),(%dx)
  a0:	0e                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = blank;
  a1:	49 13 32             	adc    (%r10),%rsi
  a4:	21 01                	and    %eax,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  a6:	3c 19                	cmp    $0x19,%al
  a8:	64 13 01             	adc    %fs:(%rcx),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  ab:	13 00                	adc    (%rax),%eax
  ad:	00 0d 05 00 31 13    	add    %cl,0x13310005(%rip)        # 133100b8 <Video::TextModePresenter::MoveUp()+0x1330fda8>
  b3:	02 17                	add    (%rdi),%dl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:96
    }
  b5:	b7 42                	mov    $0x42,%bh
  b7:	17                   	(bad)  
  b8:	00 00                	add    %al,(%rax)
  ba:	0e                   	(bad)  
  bb:	0b 01                	or     (%rcx),%eax
  bd:	31 13                	xor    %edx,(%rbx)
  bf:	11 01                	adc    %eax,(%rcx)
Video::TextModePresenter::TextModePresenter():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  c1:	12 07                	adc    (%rdi),%al
  c3:	00 00                	add    %al,(%rax)
  c5:	0f 34                	sysenter 
  c7:	00 31                	add    %dh,(%rcx)
  c9:	13 02                	adc    (%rdx),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:8
    TextModePresenter::TextModePresenter()
  cb:	17                   	(bad)  
  cc:	b7 42                	mov    $0x42,%bh
  ce:	17                   	(bad)  
  cf:	00 00                	add    %al,(%rax)
  d1:	10 16                	adc    %dl,(%rsi)
  d3:	00 03                	add    %al,(%rbx)
  d5:	0e                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  d6:	3a 0b                	cmp    (%rbx),%cl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:9
      : m_TextBuffer(reinterpret_cast<uint16_t *>(0xb8000)),
  d8:	3b 0b                	cmp    (%rbx),%ecx
  da:	39 0b                	cmp    %ecx,(%rbx)
  dc:	49 13 00             	adc    (%r8),%rax
  df:	00 11                	add    %dl,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  e1:	10 00                	adc    %al,(%rax)
  e3:	0b 21                	or     (%rcx),%esp
  e5:	08 49 13             	or     %cl,0x13(%rcx)
  e8:	00 00                	add    %al,(%rax)
  ea:	12 2e                	adc    (%rsi),%ch
  ec:	01 3f                	add    %edi,(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:10
        m_OffsetX(0),
  ee:	19 03                	sbb    %eax,(%rbx)
  f0:	0e                   	(bad)  
  f1:	3a 0b                	cmp    (%rbx),%cl
  f3:	3b 0b                	cmp    (%rbx),%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:14
    }
  f5:	39 0b                	cmp    %ecx,(%rbx)
  f7:	6e                   	outsb  %ds:(%rsi),(%dx)
  f8:	0e                   	(bad)  
  f9:	4c 21 01             	and    %r8,(%rcx)
  fc:	4d 18 1d 13 32 21 01 	rex.WRB sbb %r11b,0x1213213(%rip)        # 1213316 <Video::TextModePresenter::MoveUp()+0x1213006>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
    {
 103:	3c 19                	cmp    $0x19,%al
 105:	64 13 01             	adc    %fs:(%rcx),%eax
 108:	13 00                	adc    (%rax),%eax
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 10a:	00 13                	add    %dl,(%rbx)
 10c:	05 00 03 0e 49       	add    $0x490e0300,%eax
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 111:	13 34 19             	adc    (%rcx,%rbx,1),%esi
 114:	00 00                	add    %al,(%rax)
 116:	14 2e                	adc    $0x2e,%al
 118:	01 47 13             	add    %eax,0x13(%rdi)
 11b:	64 13 11             	adc    %fs:(%rcx),%edx
 11e:	01 12                	add    %edx,(%rdx)
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 120:	07                   	(bad)  
 121:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 125:	01 13                	add    %edx,(%rbx)
 127:	00 00                	add    %al,(%rax)
 129:	15 05 00 03 08       	adc    $0x8030005,%eax
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 12e:	3a 0b                	cmp    (%rbx),%cl
 130:	3b 0b                	cmp    (%rbx),%ecx
 132:	39 0b                	cmp    %ecx,(%rbx)
 134:	49 13 00             	adc    (%r8),%rax
 137:	00 16                	add    %dl,(%rsi)
 139:	05 00 03 0e 49       	add    $0x490e0300,%eax
 13e:	13 34 19             	adc    (%rcx,%rbx,1),%esi
 141:	02 17                	add    (%rdi),%dl
 143:	b7 42                	mov    $0x42,%bh
 145:	17                   	(bad)  
 146:	00 00                	add    %al,(%rax)
 148:	17                   	(bad)  
 149:	2e 01 47 13          	cs add %eax,0x13(%rdi)
 14d:	64 13 20             	adc    %fs:(%rax),%esp
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35
        int y = point.y == -1 ? (m_OffsetY + 1) : Integers::ConstraintToRange(0, 25, point.y);
 150:	0b 01                	or     (%rcx),%eax
 152:	13 00                	adc    (%rax),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35 (discriminator 1)
 154:	00 18                	add    %bl,(%rax)
 156:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 15b:	21 01                	and    %eax,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:37 (discriminator 4)
        if (y >= 25)
 15d:	3b 21                	cmp    (%rcx),%esp
 15f:	3f                   	(bad)  
 160:	39 0b                	cmp    %ecx,(%rbx)
 162:	49 13 00             	adc    (%r8),%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 165:	00 19                	add    %bl,(%rcx)
 167:	05 00 31 13 02       	add    $0x2133100,%eax
 16c:	18 00                	sbb    %al,(%rax)
 16e:	00 1a                	add    %bl,(%rdx)
 170:	02 01                	add    (%rcx),%al
 172:	03 0e                	add    (%rsi),%ecx
 174:	0b 0b                	or     (%rbx),%ecx
 176:	3a 0b                	cmp    (%rbx),%cl
 178:	3b 0b                	cmp    (%rbx),%ecx
 17a:	39 0b                	cmp    %ecx,(%rbx)
 17c:	01 13                	add    %edx,(%rbx)
 17e:	00 00                	add    %al,(%rax)
 180:	1b 0d 00 03 0e 3a    	sbb    0x3a0e0300(%rip),%ecx        # 3a0e0486 <Video::TextModePresenter::MoveUp()+0x3a0e0176>
 186:	0b 3b                	or     (%rbx),%edi
 188:	0b 39                	or     (%rcx),%edi
 18a:	0b 49 13             	or     0x13(%rcx),%ecx
 18d:	38 0b                	cmp    %cl,(%rbx)
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 18f:	32 0b                	xor    (%rbx),%cl
 191:	00 00                	add    %al,(%rax)
 193:	1c 13                	sbb    $0x13,%al
 195:	01 03                	add    %eax,(%rbx)
 197:	0e                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 198:	0b 0b                	or     (%rbx),%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 19a:	3a 0b                	cmp    (%rbx),%cl
 19c:	3b 0b                	cmp    (%rbx),%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 19e:	39 0b                	cmp    %ecx,(%rbx)
 1a0:	01 13                	add    %edx,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 1a2:	00 00                	add    %al,(%rax)
 1a4:	1d 39 01 03 0e       	sbb    $0xe030139,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 1a9:	3a 0b                	cmp    (%rbx),%cl
 1ab:	3b 0b                	cmp    (%rbx),%ecx
 1ad:	39 21                	cmp    %esp,(%rcx)
 1af:	0b 01                	or     (%rcx),%eax
 1b1:	13 00                	adc    (%rax),%eax
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 1b3:	00 1e                	add    %bl,(%rsi)
 1b5:	0d 00 03 08 3a       	or     $0x3a080300,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:43
        size_t len = strlen(text);
 1ba:	21 06                	and    %eax,(%rsi)
 1bc:	3b 21                	cmp    (%rcx),%esp
 1be:	09 39                	or     %edi,(%rcx)
 1c0:	0b 49 13             	or     0x13(%rcx),%ecx
 1c3:	38 0b                	cmp    %cl,(%rbx)
 1c5:	00 00                	add    %al,(%rax)
 1c7:	1f                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44
        for (int i = 0; i < len; i++)
 1c8:	02 01                	add    (%rcx),%al
 1ca:	03 0e                	add    (%rsi),%ecx
 1cc:	0b 0b                	or     (%rbx),%ecx
 1ce:	3a 0b                	cmp    (%rbx),%cl
 1d0:	3b 0b                	cmp    (%rbx),%ecx
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1d2:	39 21                	cmp    %esp,(%rcx)
 1d4:	0b 1d 13 01 13 00    	or     0x130113(%rip),%ebx        # 1302ed <Video::TextModePresenter::MoveUp()+0x12ffdd>
 1da:	00 20                	add    %ah,(%rax)
 1dc:	2e 01 3f             	cs add %edi,(%rdi)
 1df:	19 03                	sbb    %eax,(%rbx)
 1e1:	0e                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1e2:	6e                   	outsb  %ds:(%rsi),(%dx)
 1e3:	0e                   	(bad)  
 1e4:	34 19                	xor    $0x19,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1e6:	32 21                	xor    (%rcx),%ah
 1e8:	01 3c 19             	add    %edi,(%rcx,%rbx,1)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1eb:	64 13 01             	adc    %fs:(%rcx),%eax
 1ee:	13 00                	adc    (%rax),%eax
 1f0:	00 21                	add    %ah,(%rcx)
 1f2:	2e 01 3f             	cs add %edi,(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1f5:	19 03                	sbb    %eax,(%rbx)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 1f7:	0e                   	(bad)  
 1f8:	3a 0b                	cmp    (%rbx),%cl
 1fa:	3b 0b                	cmp    (%rbx),%ecx
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1fc:	39 0b                	cmp    %ecx,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1fe:	6e                   	outsb  %ds:(%rsi),(%dx)
 1ff:	0e                   	(bad)  
 200:	4c 21 01             	and    %r8,(%rcx)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 203:	4d 18 1d 13 32 21 01 	rex.WRB sbb %r11b,0x1213213(%rip)        # 121341d <Video::TextModePresenter::MoveUp()+0x121310d>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:50
                y++;
 20a:	3c 19                	cmp    $0x19,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 20c:	64 13 00             	adc    %fs:(%rax),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:51
                if (y >= 25)
 20f:	00 22                	add    %ah,(%rdx)
 211:	2e 01 3f             	cs add %edi,(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 214:	19 03                	sbb    %eax,(%rbx)
 216:	08 3a                	or     %bh,(%rdx)
 218:	21 05 3b 0b 39 21    	and    %eax,0x21390b3b(%rip)        # 21390d59 <Video::TextModePresenter::MoveUp()+0x21390a49>
 21e:	0a 6e 0e             	or     0xe(%rsi),%ch
 221:	32 21                	xor    (%rcx),%ah
 223:	01 3c 19             	add    %edi,(%rcx,%rbx,1)
 226:	64 13 01             	adc    %fs:(%rcx),%eax
 229:	13 00                	adc    (%rax),%eax
 22b:	00 23                	add    %ah,(%rbx)
 22d:	2e 01 3f             	cs add %edi,(%rdi)
 230:	19 03                	sbb    %eax,(%rbx)
 232:	08 3a                	or     %bh,(%rdx)
 234:	21 05 3b 0b 39 0b    	and    %eax,0xb390b3b(%rip)        # b390d75 <Video::TextModePresenter::MoveUp()+0xb390a65>
 23a:	6e                   	outsb  %ds:(%rsi),(%dx)
 23b:	0e                   	(bad)  
 23c:	49 13 32             	adc    (%r10),%rsi
 23f:	21 01                	and    %eax,(%rcx)
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 241:	3c 19                	cmp    $0x19,%al
 243:	64 13 01             	adc    %fs:(%rcx),%eax
 246:	13 00                	adc    (%rax),%eax
 248:	00 24 0b             	add    %ah,(%rbx,%rcx,1)
 24b:	01 55 17             	add    %edx,0x17(%rbp)
 24e:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 250:	25 0b 01 11 01       	and    $0x111010b,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 255:	12 07                	adc    (%rdi),%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 257:	00 00                	add    %al,(%rax)
 259:	26 1d 01 31 13 11    	es sbb $0x11133101,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 25f:	01 12                	add    %edx,(%rdx)
 261:	07                   	(bad)  
 262:	58                   	pop    %rax
 263:	21 01                	and    %eax,(%rcx)
 265:	59                   	pop    %rcx
 266:	0b 57 0b             	or     0xb(%rdi),%edx
 269:	01 13                	add    %edx,(%rbx)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 26b:	00 00                	add    %al,(%rax)
 26d:	27                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 26e:	48 01 7d 01          	add    %rdi,0x1(%rbp)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44 (discriminator 2)
        for (int i = 0; i < len; i++)
 272:	00 00                	add    %al,(%rax)
 274:	28 1d 01 31 13 55    	sub    %bl,0x55133101(%rip)        # 5513337b <Video::TextModePresenter::MoveUp()+0x5513306b>
 27a:	17                   	(bad)  
 27b:	58                   	pop    %rax
 27c:	21 01                	and    %eax,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:59
        m_OffsetX = x;
 27e:	59                   	pop    %rcx
 27f:	0b 57 0b             	or     0xb(%rdi),%edx
 282:	01 13                	add    %edx,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:60
        m_OffsetY = y;
 284:	00 00                	add    %al,(%rax)
 286:	29 0b                	sub    %ecx,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:61
    }
 288:	01 00                	add    %eax,(%rax)
 28a:	00 2a                	add    %ch,(%rdx)
 28c:	34 00                	xor    $0x0,%al
 28e:	03 08                	add    (%rax),%ecx
 290:	3a 21                	cmp    (%rcx),%ah
 292:	01 3b                	add    %edi,(%rbx)
 294:	0b 39                	or     (%rcx),%edi
 296:	0b 49 13             	or     0x13(%rcx),%ecx
 299:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 29b:	2b 11                	sub    (%rcx),%edx
 29d:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b15b1 <Video::TextModePresenter::MoveUp()+0x30b12a1>
 2a3:	1f                   	(bad)  
 2a4:	1b 1f                	sbb    (%rdi),%ebx
 2a6:	11 01                	adc    %eax,(%rcx)
 2a8:	12 07                	adc    (%rdi),%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2aa:	10 17                	adc    %dl,(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 2ac:	00 00                	add    %al,(%rax)
 2ae:	2c 24                	sub    $0x24,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2b0:	00 0b                	add    %cl,(%rbx)
 2b2:	0b 3e                	or     (%rsi),%edi
 2b4:	0b 03                	or     (%rbx),%eax
 2b6:	08 00                	or     %al,(%rax)
 2b8:	00 2d 35 00 49 13    	add    %ch,0x13490035(%rip)        # 134902f3 <Video::TextModePresenter::MoveUp()+0x1348ffe3>
 2be:	00 00                	add    %al,(%rax)
Video::TextModePresenter::Text(Video::Point, char const*, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:29
        Text(point, text, 15, 0);
 2c0:	2e 2e 01 3f          	cs cs add %edi,(%rdi)
 2c4:	19 03                	sbb    %eax,(%rbx)
 2c6:	0e                   	(bad)  
 2c7:	3a 0b                	cmp    (%rbx),%cl
 2c9:	3b 0b                	cmp    (%rbx),%ecx
 2cb:	39 0b                	cmp    %ecx,(%rbx)
 2cd:	6e                   	outsb  %ds:(%rsi),(%dx)
 2ce:	0e                   	(bad)  
 2cf:	32 0b                	xor    (%rbx),%cl
 2d1:	3c 19                	cmp    $0x19,%al
 2d3:	64 13 00             	adc    %fs:(%rax),%eax
 2d6:	00 2f                	add    %ch,(%rdi)
 2d8:	3b 00                	cmp    (%rax),%eax
 2da:	03 0e                	add    (%rsi),%ecx
 2dc:	00 00                	add    %al,(%rax)
 2de:	30 02                	xor    %al,(%rdx)
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2e0:	00 03                	add    %al,(%rbx)
 2e2:	0e                   	(bad)  
 2e3:	3c 19                	cmp    $0x19,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:64
    {
 2e5:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2e7:	31 0d 00 03 0e 49    	xor    %ecx,0x490e0300(%rip)        # 490e05ed <Video::TextModePresenter::MoveUp()+0x490e02dd>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2ed:	13 38                	adc    (%rax),%edi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2ef:	0b 34 19             	or     (%rcx,%rbx,1),%esi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2f2:	32 0b                	xor    (%rbx),%cl
 2f4:	00 00                	add    %al,(%rax)
 2f6:	32 2e                	xor    (%rsi),%ch
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2f8:	01 3f                	add    %edi,(%rdi)
 2fa:	19 03                	sbb    %eax,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2fc:	0e                   	(bad)  
 2fd:	3a 0b                	cmp    (%rbx),%cl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2ff:	3b 0b                	cmp    (%rbx),%ecx
 301:	39 0b                	cmp    %ecx,(%rbx)
 303:	6e                   	outsb  %ds:(%rsi),(%dx)
 304:	0e                   	(bad)  
 305:	32 0b                	xor    (%rbx),%cl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 307:	3c 19                	cmp    $0x19,%al
 309:	64 13 20             	adc    %fs:(%rax),%esp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:67
    }
 30c:	0b 01                	or     (%rcx),%eax
 30e:	13 00                	adc    (%rax),%eax
Video::TextModePresenter::MoveUp():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 310:	00 33                	add    %dh,(%rbx)
 312:	1c 00                	sbb    $0x0,%al
 314:	49 13 38             	adc    (%r8),%rdi
 317:	0b 32                	or     (%rdx),%esi
 319:	0b 00                	or     (%rax),%eax
 31b:	00 34 2f             	add    %dh,(%rdi,%rbp,1)
 31e:	00 03                	add    %al,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74
            for (int col = 0; col < 80; col++)
 320:	08 49 13             	or     %cl,0x13(%rcx)
 323:	00 00                	add    %al,(%rax)
 325:	35 13 00 03 0e       	xor    $0xe030013,%eax
 32a:	3c 19                	cmp    $0x19,%al
 32c:	00 00                	add    %al,(%rax)
 32e:	36 15 01 49 13 01    	ss adc $0x1134901,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76 (discriminator 3)
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 334:	13 00                	adc    (%rax),%eax
 336:	00 37                	add    %dh,(%rdi)
 338:	18 00                	sbb    %al,(%rax)
 33a:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74 (discriminator 3)
            for (int col = 0; col < 80; col++)
 33c:	38 0f                	cmp    %cl,(%rdi)
 33e:	00 0b                	add    %cl,(%rbx)
 340:	0b 03                	or     (%rbx),%eax
 342:	0e                   	(bad)  
 343:	49 13 00             	adc    (%r8),%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:72 (discriminator 2)
        for (int ln = 0; ln < 25; ln++)
 346:	00 39                	add    %bh,(%rcx)
 348:	2e 01 3f             	cs add %edi,(%rdi)
 34b:	19 03                	sbb    %eax,(%rbx)
 34d:	0e                   	(bad)  
 34e:	3a 0b                	cmp    (%rbx),%cl
 350:	3b 0b                	cmp    (%rbx),%ecx
 352:	39 0b                	cmp    %ecx,(%rbx)
 354:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 358:	01 13                	add    %edx,(%rbx)
 35a:	00 00                	add    %al,(%rax)
 35c:	3a 2e                	cmp    (%rsi),%ch
 35e:	01 31                	add    %esi,(%rcx)
 360:	13 6e 0e             	adc    0xe(%rsi),%ebp
 363:	64 13 01             	adc    %fs:(%rcx),%eax
 366:	13 00                	adc    (%rax),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 368:	00 3b                	add    %bh,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 36a:	34 00                	xor    $0x0,%al
 36c:	03 0e                	add    (%rsi),%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 36e:	3a 0b                	cmp    (%rbx),%cl
 370:	3b 0b                	cmp    (%rbx),%ecx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 372:	39 0b                	cmp    %ecx,(%rbx)
 374:	49 13 1c 05 00 00 3c 	adc    0x53c0000(,%rax,1),%rbx
 37b:	05 
 37c:	00 03                	add    %al,(%rbx)
 37e:	0e                   	(bad)  
 37f:	49 13 34 19          	adc    (%r9,%rbx,1),%rsi
 383:	02 18                	add    (%rax),%bl
 385:	00 00                	add    %al,(%rax)
 387:	3d 34 00 03 0e       	cmp    $0xe030034,%eax
 38c:	3a 0b                	cmp    (%rbx),%cl
 38e:	3b 0b                	cmp    (%rbx),%ecx
 390:	39 0b                	cmp    %ecx,(%rbx)
 392:	49 13 1c 06          	adc    (%r14,%rax,1),%rbx
 396:	00 00                	add    %al,(%rax)
 398:	3e 0b 01             	ds or  (%rcx),%eax
 39b:	11 01                	adc    %eax,(%rcx)
 39d:	12 07                	adc    (%rdi),%al
 39f:	01 13                	add    %edx,(%rbx)
 3a1:	00 00                	add    %al,(%rax)
 3a3:	3f                   	(bad)  
 3a4:	0b 01                	or     (%rcx),%eax
 3a6:	55                   	push   %rbp
 3a7:	17                   	(bad)  
 3a8:	01 13                	add    %edx,(%rbx)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	40 1d 01 31 13 52    	rex sbb $0x52133101,%eax
 3b2:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%rax)
 3b8:	58                   	pop    %rax
 3b9:	0b 59 0b             	or     0xb(%rcx),%ebx
 3bc:	57                   	push   %rdi
 3bd:	0b 01                	or     (%rcx),%eax
 3bf:	13 00                	adc    (%rax),%eax
 3c1:	00 41 48             	add    %al,0x48(%rcx)
 3c4:	01 7d 01             	add    %edi,0x1(%rbp)
 3c7:	7f 13                	jg     3dc <.debug_abbrev+0x3dc>
 3c9:	01 13                	add    %edx,(%rbx)
 3cb:	00 00                	add    %al,(%rax)
 3cd:	42                   	rex.X
 3ce:	48 01 7d 01          	add    %rdi,0x1(%rbp)
 3d2:	82                   	(bad)  
 3d3:	01 19                	add    %ebx,(%rcx)
 3d5:	7f 13                	jg     3ea <.debug_abbrev+0x3ea>
 3d7:	00 00                	add    %al,(%rax)
 3d9:	43                   	rex.XB
 3da:	2e 01 31             	cs add %esi,(%rcx)
 3dd:	13 6e 0e             	adc    0xe(%rsi),%ebp
 3e0:	64 13 11             	adc    %fs:(%rcx),%edx
 3e3:	01 12                	add    %edx,(%rdx)
 3e5:	07                   	(bad)  
 3e6:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 3ea:	01 13                	add    %edx,(%rbx)
 3ec:	00 00                	add    %al,(%rax)
 3ee:	44                   	rex.R
 3ef:	48 01 7d 01          	add    %rdi,0x1(%rbp)
 3f3:	7f 13                	jg     408 <.debug_abbrev+0x408>
 3f5:	00 00                	add    %al,(%rax)
 3f7:	45                   	rex.RB
 3f8:	2e 01 3f             	cs add %edi,(%rdi)
 3fb:	19 03                	sbb    %eax,(%rbx)
 3fd:	0e                   	(bad)  
 3fe:	3a 0b                	cmp    (%rbx),%cl
 400:	3b 0b                	cmp    (%rbx),%ecx
 402:	39 0b                	cmp    %ecx,(%rbx)
 404:	6e                   	outsb  %ds:(%rsi),(%dx)
 405:	0e                   	(bad)  
 406:	49 13 3c 19          	adc    (%r9,%rbx,1),%rdi
 40a:	00 00                	add    %al,(%rax)
 40c:	46                   	rex.RX
 40d:	2e 01 47 13          	cs add %eax,0x13(%rdi)
 411:	20 0b                	and    %cl,(%rbx)
 413:	01 13                	add    %edx,(%rbx)
 415:	00 00                	add    %al,(%rax)
 417:	47                   	rex.RXB
 418:	2e 01 31             	cs add %esi,(%rcx)
 41b:	13 6e 0e             	adc    0xe(%rsi),%ebp
 41e:	11 01                	adc    %eax,(%rcx)
 420:	12 07                	adc    (%rdi),%al
 422:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 426:	01 13                	add    %edx,(%rbx)
 428:	00 00                	add    %al,(%rax)
 42a:	48                   	rex.W
 42b:	2e 01 31             	cs add %esi,(%rcx)
 42e:	13 6e 0e             	adc    0xe(%rsi),%ebp
 431:	11 01                	adc    %eax,(%rcx)
 433:	12 07                	adc    (%rdi),%al
 435:	40 18 7a 19          	sbb    %dil,0x19(%rdx)
 439:	00 00                	add    %al,(%rax)
	...

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
   0:	db 05 00 00 05 00    	fildl  0x50000(%rip)        # 50006 <Video::TextModePresenter::MoveUp()+0x4fcf6>
   6:	08 00                	or     %al,(%rax)
	...
  10:	00 00                	add    %al,(%rax)
  12:	04 40                	add    $0x40,%al
  14:	5c                   	pop    %rsp
  15:	01 55 04             	add    %edx,0x4(%rbp)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
  18:	5c                   	pop    %rsp
  19:	ba 01 01 5a 04       	mov    $0x45a0101,%edx
  1e:	ba 01 bb 01 01       	mov    $0x101bb01,%edx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
  23:	55                   	push   %rbp
  24:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = 0x00;
  26:	00 00                	add    %al,(%rax)
  28:	00 04 40             	add    %al,(%rax,%rax,2)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
            for (int x = 0; x < 80; x++)
  2b:	81 01 01 54 04 aa    	addl   $0xaa045401,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18 (discriminator 2)
        for (int y = 0; y < 25; y++)
  31:	01 bb 01 01 54 00    	add    %edi,0x540101(%rbx)
  37:	00 00                	add    %al,(%rax)
  39:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:25
    }
  3b:	00 00                	add    %al,(%rax)
  3d:	04 40                	add    $0x40,%al
  3f:	72 01                	jb     42 <.debug_loclists+0x42>
Video::TextModePresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  41:	51                   	push   %rcx
  42:	04 72                	add    $0x72,%al
  44:	ba 01 04 a3 01       	mov    $0x1a30401,%edx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  49:	51                   	push   %rcx
  4a:	9f                   	lahf   
  4b:	04 ba                	add    $0xba,%al
  4d:	01 bb 01 01 51 00    	add    %edi,0x510101(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  53:	00 00                	add    %al,(%rax)
  55:	00 00                	add    %al,(%rax)
  57:	00 00                	add    %al,(%rax)
  59:	04 40                	add    $0x40,%al
  5b:	54                   	push   %rsp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  5c:	01 52 04             	add    %edx,0x4(%rdx)
  5f:	54                   	push   %rsp
  60:	ba 01 04 a3 01       	mov    $0x1a30401,%edx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  65:	52                   	push   %rdx
  66:	9f                   	lahf   
  67:	04 ba                	add    $0xba,%al
  69:	01 bb 01 01 52 00    	add    %edi,0x520101(%rbx)
  6f:	01 00                	add    %eax,(%rax)
  71:	00 00                	add    %al,(%rax)
  73:	00 00                	add    %al,(%rax)
  75:	00 00                	add    %al,(%rax)
  77:	04 47                	add    $0x47,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  79:	6b 2a 74             	imul   $0x74,(%rdx),%ebp
  7c:	00 08                	add    %cl,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93
                m_TextBuffer[(y * 80) + x] = blank;
  7e:	20 24 08             	and    %ah,(%rax,%rcx,1)
  81:	20 26                	and    %ah,(%rsi)
  83:	12 23                	adc    (%rbx),%ah
  85:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
  8c:	80 80 01 08 50 16 14 	addb   $0x14,0x16500801(%rax)
  93:	23 80 80 80 80 80    	and    -0x7f7f7f80(%rax),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
  99:	80 80 80 80 01 2d 28 	addb   $0x28,0x2d018080(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  a0:	01 00                	add    %eax,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = blank;
  a2:	16                   	(bad)  
  a3:	13 9f 04 6b b8 01    	adc    0x1b86b04(%rdi),%ebx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  a9:	24 7c                	and    $0x7c,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  ab:	00 12                	add    %dl,(%rdx)
  ad:	23 80 80 80 80 80    	and    -0x7f7f7f80(%rax),%eax
  b3:	80 80 80 80 01 08 50 	addb   $0x50,0x8018080(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:96
    }
  ba:	16                   	(bad)  
  bb:	14 23                	adc    $0x23,%al
  bd:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
Video::TextModePresenter::TextModePresenter():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  c4:	80 80 01 2d 28 01 00 	addb   $0x0,0x1282d01(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:8
    TextModePresenter::TextModePresenter()
  cb:	16                   	(bad)  
  cc:	13 9f 04 b8 01 ba    	adc    -0x45fe47fc(%rdi),%ebx
  d2:	01 2a                	add    %ebp,(%rdx)
  d4:	7b 00                	jnp    d6 <.debug_loclists+0xd6>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  d6:	08 20                	or     %ah,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:9
      : m_TextBuffer(reinterpret_cast<uint16_t *>(0xb8000)),
  d8:	24 08                	and    $0x8,%al
  da:	20 26                	and    %ah,(%rsi)
  dc:	12 23                	adc    (%rbx),%ah
  de:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  e5:	80 80 01 08 50 16 14 	addb   $0x14,0x16500801(%rax)
  ec:	23 80 80 80 80 80    	and    -0x7f7f7f80(%rax),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:10
        m_OffsetX(0),
  f2:	80 80 80 80 01 2d 28 	addb   $0x28,0x2d018080(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:14
    }
  f9:	01 00                	add    %eax,(%rax)
  fb:	16                   	(bad)  
  fc:	13 9f 04 ba 01 bb    	adc    -0x44fe45fc(%rdi),%ebx
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
    {
 102:	01 2a                	add    %ebp,(%rdx)
 104:	74 00                	je     106 <.debug_loclists+0x106>
 106:	08 20                	or     %ah,(%rax)
 108:	24 08                	and    $0x8,%al
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 10a:	20 26                	and    %ah,(%rsi)
 10c:	12 23                	adc    (%rbx),%ah
 10e:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 115:	80 80 01 08 50 16 14 	addb   $0x14,0x16500801(%rax)
 11c:	23 80 80 80 80 80    	and    -0x7f7f7f80(%rax),%eax
 122:	80 80 80 80 01 2d 28 	addb   $0x28,0x2d018080(%rax)
 129:	01 00                	add    %eax,(%rax)
 12b:	16                   	(bad)  
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 12c:	13 9f 00 02 00 00    	adc    0x200(%rdi),%ebx
 132:	00 04 47             	add    %al,(%rdi,%rax,2)
 135:	72 29                	jb     160 <.debug_loclists+0x160>
 137:	70 00                	jo     139 <.debug_loclists+0x139>
 139:	08 20                	or     %ah,(%rax)
 13b:	24 08                	and    $0x8,%al
 13d:	20 26                	and    %ah,(%rsi)
 13f:	12 23                	adc    (%rbx),%ah
 141:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
 148:	80 80 01 49 16 14 23 	addb   $0x23,0x14164901(%rax)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35
        int y = point.y == -1 ? (m_OffsetY + 1) : Integers::ConstraintToRange(0, 25, point.y);
 14f:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35 (discriminator 1)
 156:	80 80 01 2d 28 01 00 	addb   $0x0,0x1282d01(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:37 (discriminator 4)
        if (y >= 25)
 15d:	16                   	(bad)  
 15e:	13 9f 04 ba 01 bb    	adc    -0x44fe45fc(%rdi),%ebx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 164:	01 29                	add    %ebp,(%rcx)
 166:	70 00                	jo     168 <.debug_loclists+0x168>
 168:	08 20                	or     %ah,(%rax)
 16a:	24 08                	and    $0x8,%al
 16c:	20 26                	and    %ah,(%rsi)
 16e:	12 23                	adc    (%rbx),%ah
 170:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
 177:	80 80 01 49 16 14 23 	addb   $0x23,0x14164901(%rax)
 17e:	80 80 80 80 80 80 80 	addb   $0x80,-0x7f7f7f80(%rax)
 185:	80 80 01 2d 28 01 00 	addb   $0x0,0x1282d01(%rax)
 18c:	16                   	(bad)  
 18d:	13 9f 00 04 00 00    	adc    0x400(%rdi),%ebx
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 193:	00 00                	add    %al,(%rax)
 195:	00 04 47             	add    %al,(%rdi,%rax,2)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 198:	72 01                	jb     19b <.debug_loclists+0x19b>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 19a:	50                   	push   %rax
 19b:	04 72                	add    $0x72,%al
 19d:	ba 01 01 55 04       	mov    $0x4550101,%edx
 1a2:	ba 01 bb 01 01       	mov    $0x101bb01,%edx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 1a7:	50                   	push   %rax
 1a8:	00 00                	add    %al,(%rax)
 1aa:	00 00                	add    %al,(%rax)
 1ac:	00 00                	add    %al,(%rax)
 1ae:	01 04 72             	add    %eax,(%rdx,%rsi,2)
 1b1:	94                   	xchg   %eax,%esp
 1b2:	01 01                	add    %eax,(%rcx)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 1b4:	5b                   	pop    %rbx
 1b5:	04 94                	add    $0x94,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:43
        size_t len = strlen(text);
 1b7:	01 a1 01 20 70 00    	add    %esp,0x702001(%rcx)
 1bd:	7a 20                	jp     1df <.debug_loclists+0x1df>
 1bf:	06                   	(bad)  
 1c0:	1c 72                	sbb    $0x72,%al
 1c2:	00 08                	add    %cl,(%rax)
 1c4:	20 24 08             	and    %ah,(%rax,%rcx,1)
 1c7:	20 26                	and    %ah,(%rsi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44
        for (int i = 0; i < len; i++)
 1c9:	7b 00                	jnp    1cb <.debug_loclists+0x1cb>
 1cb:	08 20                	or     %ah,(%rax)
 1cd:	24 08                	and    $0x8,%al
 1cf:	20 26                	and    %ah,(%rsi)
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1d1:	22 31                	and    (%rcx),%dh
 1d3:	24 1c                	and    $0x1c,%al
 1d5:	31 25 7b 00 22 9f    	xor    %esp,-0x60ddff85(%rip)        # ffffffff9f220256 <Video::TextModePresenter::MoveUp()+0xffffffff9f21ff46>
 1db:	04 a1                	add    $0xa1,%al
 1dd:	01 a5 01 22 70 00    	add    %esp,0x702201(%rbp)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1e3:	7a 20                	jp     205 <.debug_loclists+0x205>
 1e5:	06                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1e6:	1c 72                	sbb    $0x72,%al
 1e8:	00 08                	add    %cl,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1ea:	20 24 08             	and    %ah,(%rax,%rcx,1)
 1ed:	20 26                	and    %ah,(%rsi)
 1ef:	7b 00                	jnp    1f1 <.debug_loclists+0x1f1>
 1f1:	08 20                	or     %ah,(%rax)
 1f3:	24 08                	and    $0x8,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1f5:	20 26                	and    %ah,(%rsi)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 1f7:	22 31                	and    (%rcx),%dh
 1f9:	24 1c                	and    $0x1c,%al
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1fb:	32 1c 31             	xor    (%rcx,%rsi,1),%bl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1fe:	25 7b 00 22 9f       	and    $0x9f22007b,%eax
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 203:	00 03                	add    %al,(%rbx)
 205:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:50
                y++;
 207:	01 01                	add    %eax,(%rcx)
 209:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 20b:	00 04 90             	add    %al,(%rax,%rdx,4)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:51
                if (y >= 25)
 20e:	06                   	(bad)  
 20f:	99                   	cltd   
 210:	06                   	(bad)  
 211:	02 30                	add    (%rax),%dh
 213:	9f                   	lahf   
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 214:	04 99                	add    $0x99,%al
 216:	06                   	(bad)  
 217:	c4                   	(bad)  
 218:	06                   	(bad)  
 219:	0e                   	(bad)  
 21a:	74 c0                	je     1dc <.debug_loclists+0x1dc>
 21c:	fd                   	std    
 21d:	51                   	push   %rcx
 21e:	a8 2e                	test   $0x2e,%al
 220:	08 a0 a8 2e 1b a8    	or     %ah,-0x57e4d158(%rax)
 226:	00 9f 04 c4 06 da    	add    %bl,-0x25f93bfc(%rdi)
 22c:	06                   	(bad)  
 22d:	10 70 c0             	adc    %dh,-0x40(%rax)
 230:	fd                   	std    
 231:	51                   	push   %rcx
 232:	a8 2e                	test   $0x2e,%al
 234:	08 a0 a8 2e 1b a8    	or     %ah,-0x57e4d158(%rax)
 23a:	00 23                	add    %ah,(%rbx)
 23c:	01 9f 04 da 06 f8    	add    %ebx,-0x7f925fc(%rdi)
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 242:	06                   	(bad)  
 243:	10 74 a0 fc          	adc    %dh,-0x4(%rax,%riz,4)
 247:	51                   	push   %rcx
 248:	a8 2e                	test   $0x2e,%al
 24a:	08 a0 a8 2e 1b a8    	or     %ah,-0x57e4d158(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 250:	00 23                	add    %ah,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 252:	01 9f 00 00 00 04    	add    %ebx,0x4000000(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 258:	99                   	cltd   
 259:	06                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 25a:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
 25b:	06                   	(bad)  
 25c:	02 30                	add    (%rax),%dh
 25e:	9f                   	lahf   
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 25f:	00 00                	add    %al,(%rax)
 261:	00 00                	add    %al,(%rax)
 263:	01 04 e8             	add    %eax,(%rax,%rbp,8)
 266:	06                   	(bad)  
 267:	ee                   	out    %al,(%dx)
 268:	06                   	(bad)  
 269:	0d 70 00 75 20       	or     $0x20750070,%eax
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 26e:	06                   	(bad)  
 26f:	1c 0a                	sbb    $0xa,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44 (discriminator 2)
        for (int i = 0; i < len; i++)
 271:	00 0f                	add    %cl,(%rdi)
 273:	1c 31                	sbb    $0x31,%al
 275:	25 9f 04 ee 06       	and    $0x6ee049f,%eax
 27a:	f2 06                	repnz (bad) 
 27c:	0d 70 00 75 20       	or     $0x20750070,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:59
        m_OffsetX = x;
 281:	06                   	(bad)  
 282:	1c 0a                	sbb    $0xa,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:60
        m_OffsetY = y;
 284:	02 0f                	add    (%rdi),%cl
 286:	1c 31                	sbb    $0x31,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:61
    }
 288:	25 9f 00 00 00       	and    $0x9f,%eax
	...
 295:	00 00                	add    %al,(%rax)
 297:	04 80                	add    $0x80,%al
 299:	02 8e 03 01 55 04    	add    0x4550103(%rsi),%cl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 29f:	8e 03                	mov    (%rbx),%es
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 2a1:	93                   	xchg   %eax,%ebx
 2a2:	05 01 5e 04 93       	add    $0x93045e01,%eax
 2a7:	05 97 05 04 a3       	add    $0xa3040597,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 2ac:	01 55 9f             	add    %edx,-0x61(%rbp)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2af:	04 97                	add    $0x97,%al
 2b1:	05 a9 05 01 5e       	add    $0x5e0105a9,%eax
 2b6:	04 a9                	add    $0xa9,%al
 2b8:	05 ac 05 01 55       	add    $0x550105ac,%eax
 2bd:	04 ac                	add    $0xac,%al
 2bf:	05 b6 05 01 5e       	add    $0x5e0105b6,%eax
Video::TextModePresenter::Text(Video::Point, char const*, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:29
        Text(point, text, 15, 0);
 2c4:	00 00                	add    %al,(%rax)
 2c6:	00 00                	add    %al,(%rax)
 2c8:	00 00                	add    %al,(%rax)
 2ca:	00 04 80             	add    %al,(%rax,%rax,4)
 2cd:	02 84 02 01 54 04 84 	add    -0x7bfbabff(%rdx,%rax,1),%al
 2d4:	02 f0                	add    %al,%dh
 2d6:	02 01                	add    (%rcx),%al
 2d8:	50                   	push   %rax
 2d9:	04 b6                	add    $0xb6,%al
 2db:	03 c0                	add    %eax,%eax
 2dd:	03 01                	add    (%rcx),%eax
 2df:	50                   	push   %rax
	...
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2e8:	00 04 80             	add    %al,(%rax,%rax,4)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2eb:	02 a2 02 01 51 04    	add    0x4510102(%rdx),%ah
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2f1:	a2 02 e2 03 01 53 04 	movabs %al,0x3e204530103e202
 2f8:	e2 03 
 2fa:	a9 05 04 a3 01       	test   $0x1a30405,%eax
 2ff:	51                   	push   %rcx
 300:	9f                   	lahf   
 301:	04 a9                	add    $0xa9,%al
 303:	05 b6 05 01 53       	add    $0x530105b6,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 308:	00 00                	add    %al,(%rax)
 30a:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:67
    }
 30c:	00 04 80             	add    %al,(%rax,%rax,4)
 30f:	02 ac 02 01 52 04 ac 	add    -0x53fbadff(%rdx,%rax,1),%ch
Video::TextModePresenter::MoveUp():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 316:	02 b6 05 04 a3 01    	add    0x1a30405(%rsi),%dh
 31c:	52                   	push   %rdx
 31d:	9f                   	lahf   
	...
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74
            for (int col = 0; col < 80; col++)
 326:	00 04 80             	add    %al,(%rax,%rax,4)
 329:	02 b6 03 01 58 04    	add    0x4580103(%rsi),%dh
 32f:	b6 03                	mov    $0x3,%dh
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76 (discriminator 3)
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 331:	a9 05 04 a3 01       	test   $0x1a30405,%eax
 336:	58                   	pop    %rax
 337:	9f                   	lahf   
 338:	04 a9                	add    $0xa9,%al
 33a:	05 b0 05 01 58       	add    $0x580105b0,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74 (discriminator 3)
            for (int col = 0; col < 80; col++)
 33f:	04 b0                	add    $0xb0,%al
 341:	05 b6 05 04 a3       	add    $0xa30405b6,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:72 (discriminator 2)
        for (int ln = 0; ln < 25; ln++)
 346:	01 58 9f             	add    %ebx,-0x61(%rax)
 349:	00 00                	add    %al,(%rax)
 34b:	00 00                	add    %al,(%rax)
 34d:	02 02                	add    (%rdx),%al
 34f:	01 01                	add    %eax,(%rcx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 04 c8             	add    %al,(%rax,%rcx,8)
 35a:	02 fb                	add    %bl,%bh
 35c:	03 01                	add    (%rcx),%eax
 35e:	5d                   	pop    %rbp
 35f:	04 fb                	add    $0xfb,%al
 361:	03 81 04 03 7d 7f    	add    0x7f7d0304(%rcx),%eax
 367:	9f                   	lahf   
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 368:	04 81                	add    $0x81,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 36a:	04 87                	add    $0x87,%al
 36c:	04 01                	add    $0x1,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 36e:	5d                   	pop    %rbp
 36f:	04 87                	add    $0x87,%al
 371:	04 f1                	add    $0xf1,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 373:	04 02                	add    $0x2,%al
 375:	30 9f 04 f1 04 91    	xor    %bl,-0x6efb0efc(%rdi)
 37b:	05 01 5d 04 97       	add    $0x97045d01,%eax
 380:	05 a9 05 02 30       	add    $0x300205a9,%eax
 385:	9f                   	lahf   
 386:	04 a9                	add    $0xa9,%al
 388:	05 b6 05 01 5d       	add    $0x5d0105b6,%eax
 38d:	00 00                	add    %al,(%rax)
 38f:	01 01                	add    %eax,(%rcx)
 391:	00 00                	add    %al,(%rax)
 393:	01 01                	add    %eax,(%rcx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 04 dd 02 e3 02 01 	add    %al,0x102e302(,%rbx,8)
 3a0:	5f                   	pop    %rdi
 3a1:	04 e3                	add    $0xe3,%al
 3a3:	02 b6 03 02 30 9f    	add    -0x60cffdfd(%rsi),%dh
 3a9:	04 b6                	add    $0xb6,%al
 3ab:	03 94 04 01 5f 04 94 	add    -0x6bfba0ff(%rsp,%rax,1),%edx
 3b2:	04 f1                	add    $0xf1,%al
 3b4:	04 02                	add    $0x2,%al
 3b6:	30 9f 04 f1 04 95    	xor    %bl,-0x6afb0efc(%rdi)
 3bc:	05 01 5f 04 97       	add    $0x97045f01,%eax
 3c1:	05 b6 05 02 30       	add    $0x300205b6,%eax
 3c6:	9f                   	lahf   
 3c7:	00 00                	add    %al,(%rax)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 04 c8             	add    %al,(%rax,%rcx,8)
 3ce:	03 d5                	add    %ebp,%edx
 3d0:	03 01                	add    (%rcx),%eax
 3d2:	50                   	push   %rax
 3d3:	04 d5                	add    $0xd5,%al
 3d5:	03 dc                	add    %esp,%ebx
 3d7:	03 01                	add    (%rcx),%eax
 3d9:	58                   	pop    %rax
 3da:	00 01                	add    %al,(%rcx)
 3dc:	00 00                	add    %al,(%rax)
 3de:	01 01                	add    %eax,(%rcx)
 3e0:	00 00                	add    %al,(%rax)
 3e2:	00 04 c8             	add    %al,(%rax,%rcx,8)
 3e5:	03 e2                	add    %edx,%esp
 3e7:	03 02                	add    (%rdx),%eax
 3e9:	30 9f 04 e2 03 f1    	xor    %bl,-0xefc1dfc(%rdi)
 3ef:	04 07                	add    $0x7,%al
 3f1:	73 00                	jae    3f3 <.debug_loclists+0x3f3>
 3f3:	a3 01 51 1c 9f 04 f1 	movabs %eax,0xf504f1049f1c5101
 3fa:	04 f5 
 3fc:	04 09                	add    $0x9,%al
 3fe:	73 00                	jae    400 <.debug_loclists+0x400>
 400:	a3 01 51 1c 23 01 9f 	movabs %eax,0x97049f01231c5101
 407:	04 97 
 409:	05 a9 05 07 73       	add    $0x730705a9,%eax
 40e:	00 a3 01 51 1c 9f    	add    %ah,-0x60e3aeff(%rbx)
 414:	00 02                	add    %al,(%rdx)
 416:	00 04 e2             	add    %al,(%rdx,%riz,8)
 419:	03 81 04 02 73 00    	add    0x730204(%rcx),%eax
 41f:	00 02                	add    %al,(%rdx)
 421:	00 00                	add    %al,(%rax)
 423:	00 04 e2             	add    %al,(%rdx,%riz,8)
 426:	03 fb                	add    %ebx,%edi
 428:	03 06                	add    (%rsi),%eax
 42a:	5d                   	pop    %rbp
 42b:	93                   	xchg   %eax,%ebx
 42c:	04 5f                	add    $0x5f,%al
 42e:	93                   	xchg   %eax,%ebx
 42f:	04 04                	add    $0x4,%al
 431:	fb                   	sti    
 432:	03 81 04 08 7d 7f    	add    0x7f7d0804(%rcx),%eax
 438:	9f                   	lahf   
 439:	93                   	xchg   %eax,%ebx
 43a:	04 5f                	add    $0x5f,%al
 43c:	93                   	xchg   %eax,%ebx
 43d:	04 00                	add    $0x0,%al
 43f:	02 00                	add    (%rax),%al
 441:	04 e2                	add    $0xe2,%al
 443:	03 81 04 01 5e 00    	add    0x5e0104(%rcx),%eax
 449:	00 01                	add    %al,(%rcx)
 44b:	01 00                	add    %eax,(%rax)
 44d:	00 00                	add    %al,(%rax)
 44f:	04 c0                	add    $0xc0,%al
 451:	04 df                	add    $0xdf,%al
 453:	04 13                	add    $0x13,%al
 455:	71 00                	jno    457 <.debug_loclists+0x457>
 457:	7e 20                	jle    479 <.debug_loclists+0x479>
 459:	06                   	(bad)  
 45a:	1c 08                	sbb    $0x8,%al
 45c:	a0 1c a8 2e 08 a0 a8 	movabs 0x1b2ea8a0082ea81c,%al
 463:	2e 1b 
 465:	a8 00                	test   $0x0,%al
 467:	9f                   	lahf   
 468:	04 df                	add    $0xdf,%al
 46a:	04 e6                	add    $0xe6,%al
 46c:	04 15                	add    $0x15,%al
 46e:	71 00                	jno    470 <.debug_loclists+0x470>
 470:	7e 20                	jle    492 <.debug_loclists+0x492>
 472:	06                   	(bad)  
 473:	1c 08                	sbb    $0x8,%al
 475:	a0 1c a8 2e 08 a0 a8 	movabs 0x1b2ea8a0082ea81c,%al
 47c:	2e 1b 
 47e:	a8 00                	test   $0x0,%al
 480:	23 01                	and    (%rcx),%eax
 482:	9f                   	lahf   
 483:	04 e6                	add    $0xe6,%al
 485:	04 f1                	add    $0xf1,%al
 487:	04 16                	add    $0x16,%al
 489:	71 00                	jno    48b <.debug_loclists+0x48b>
 48b:	7e 20                	jle    4ad <.debug_loclists+0x4ad>
 48d:	06                   	(bad)  
 48e:	1c 0a                	sbb    $0xa,%al
 490:	40 01 1c a8          	rex add %ebx,(%rax,%rbp,4)
 494:	2e 08 a0 a8 2e 1b a8 	cs or  %ah,-0x57e4d158(%rax)
 49b:	00 23                	add    %ah,(%rbx)
 49d:	01 9f 00 00 00 04    	add    %ebx,0x4000000(%rdi)
 4a3:	c0 04 c7 04          	rolb   $0x4,(%rdi,%rax,8)
 4a7:	02 30                	add    (%rax),%dh
 4a9:	9f                   	lahf   
 4aa:	00 00                	add    %al,(%rax)
 4ac:	01 01                	add    %eax,(%rcx)
 4ae:	00 04 8e             	add    %al,(%rsi,%rcx,4)
 4b1:	03 a7 03 13 71 00    	add    0x711303(%rdi),%esp
 4b7:	7e 20                	jle    4d9 <.debug_loclists+0x4d9>
 4b9:	06                   	(bad)  
 4ba:	1c 08                	sbb    $0x8,%al
 4bc:	a0 1c a8 2e 08 a0 a8 	movabs 0x1b2ea8a0082ea81c,%al
 4c3:	2e 1b 
 4c5:	a8 00                	test   $0x0,%al
 4c7:	9f                   	lahf   
 4c8:	04 a7                	add    $0xa7,%al
 4ca:	03 b6 03 15 70 00    	add    0x701503(%rsi),%esi
 4d0:	7e 20                	jle    4f2 <.debug_loclists+0x4f2>
 4d2:	06                   	(bad)  
 4d3:	1c 08                	sbb    $0x8,%al
 4d5:	a0 1c a8 2e 08 a0 a8 	movabs 0x1b2ea8a0082ea81c,%al
 4dc:	2e 1b 
 4de:	a8 00                	test   $0x0,%al
 4e0:	23 01                	and    (%rcx),%eax
 4e2:	9f                   	lahf   
 4e3:	00 00                	add    %al,(%rax)
 4e5:	00 04 8e             	add    %al,(%rsi,%rcx,4)
 4e8:	03 95 03 02 30 9f    	add    -0x60cffdfd(%rbp),%edx
 4ee:	00 00                	add    %al,(%rax)
 4f0:	00 00                	add    %al,(%rax)
 4f2:	00 04 c0             	add    %al,(%rax,%rax,8)
 4f5:	05 d3 05 01 55       	add    $0x550105d3,%eax
 4fa:	04 d3                	add    $0xd3,%al
 4fc:	05 d4 05 04 a3       	add    $0xa30405d4,%eax
 501:	01 55 9f             	add    %edx,-0x61(%rbp)
 504:	00 00                	add    %al,(%rax)
 506:	00 04 c0             	add    %al,(%rax,%rax,8)
 509:	05 d3 05 01 54       	add    $0x540105d3,%eax
 50e:	00 00                	add    %al,(%rax)
 510:	00 00                	add    %al,(%rax)
 512:	00 04 c0             	add    %al,(%rax,%rax,8)
 515:	05 d3 05 01 51       	add    $0x510105d3,%eax
 51a:	04 d3                	add    $0xd3,%al
 51c:	05 d4 05 04 a3       	add    $0xa30405d4,%eax
 521:	01 51 9f             	add    %edx,-0x61(%rcx)
 524:	00 00                	add    %al,(%rax)
 526:	00 00                	add    %al,(%rax)
 528:	00 04 c0             	add    %al,(%rax,%rax,8)
 52b:	05 c8 05 01 52       	add    $0x520105c8,%eax
 530:	04 c8                	add    $0xc8,%al
 532:	05 d4 05 04 a3       	add    $0xa30405d4,%eax
 537:	01 52 9f             	add    %edx,-0x61(%rdx)
 53a:	00 00                	add    %al,(%rax)
 53c:	00 00                	add    %al,(%rax)
 53e:	00 00                	add    %al,(%rax)
 540:	00 04 c0             	add    %al,(%rax,%rax,8)
 543:	01 d7                	add    %edx,%edi
 545:	01 01                	add    %eax,(%rcx)
 547:	55                   	push   %rbp
 548:	04 d7                	add    $0xd7,%al
 54a:	01 f8                	add    %edi,%eax
 54c:	01 01                	add    %eax,(%rcx)
 54e:	53                   	push   %rbx
 54f:	04 f8                	add    $0xf8,%al
 551:	01 fa                	add    %edi,%edx
 553:	01 04 a3             	add    %eax,(%rbx,%riz,4)
 556:	01 55 9f             	add    %edx,-0x61(%rbp)
 559:	00 02                	add    %al,(%rdx)
 55b:	00 00                	add    %al,(%rax)
 55d:	01 01                	add    %eax,(%rcx)
 55f:	00 04 00             	add    %al,(%rax,%rax,1)
 562:	12 02                	adc    (%rdx),%al
 564:	30 9f 04 12 2f 13    	xor    %bl,0x132f1204(%rdi)
 56a:	71 00                	jno    56c <.debug_loclists+0x56c>
 56c:	75 20                	jne    58e <.debug_loclists+0x58e>
 56e:	06                   	(bad)  
 56f:	1c 08                	sbb    $0x8,%al
 571:	a0 1c a8 2e 08 a0 a8 	movabs 0x1b2ea8a0082ea81c,%al
 578:	2e 1b 
 57a:	a8 00                	test   $0x0,%al
 57c:	9f                   	lahf   
 57d:	04 2f                	add    $0x2f,%al
 57f:	3c 15                	cmp    $0x15,%al
 581:	70 00                	jo     583 <.debug_loclists+0x583>
 583:	75 20                	jne    5a5 <.debug_loclists+0x5a5>
 585:	06                   	(bad)  
 586:	1c 08                	sbb    $0x8,%al
 588:	a0 1c a8 2e 08 a0 a8 	movabs 0x1b2ea8a0082ea81c,%al
 58f:	2e 1b 
 591:	a8 00                	test   $0x0,%al
 593:	23 01                	and    (%rcx),%eax
 595:	9f                   	lahf   
 596:	00 00                	add    %al,(%rax)
 598:	00 04 12             	add    %al,(%rdx,%rdx,1)
 59b:	1f                   	(bad)  
 59c:	02 30                	add    (%rax),%dh
 59e:	9f                   	lahf   
 59f:	00 00                	add    %al,(%rax)
 5a1:	00 00                	add    %al,(%rax)
 5a3:	00 04 e0             	add    %al,(%rax,%riz,8)
 5a6:	05 e7 05 01 54       	add    $0x540105e7,%eax
 5ab:	04 e7                	add    $0xe7,%al
 5ad:	05 84 06 01 50       	add    $0x50010684,%eax
 5b2:	00 00                	add    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 04 e0             	add    %al,(%rax,%riz,8)
 5b9:	05 f8 05 01 52       	add    $0x520105f8,%eax
 5be:	04 f8                	add    $0xf8,%al
 5c0:	05 8c 06 04 a3       	add    $0xa304068c,%eax
 5c5:	01 52 9f             	add    %edx,-0x61(%rdx)
 5c8:	00 00                	add    %al,(%rax)
 5ca:	00 00                	add    %al,(%rax)
 5cc:	00 04 e0             	add    %al,(%rax,%riz,8)
 5cf:	05 e4 05 01 58       	add    $0x580105e4,%eax
 5d4:	04 e4                	add    $0xe4,%al
 5d6:	05 8c 06 04 a3       	add    $0xa304068c,%eax
 5db:	01 58 9f             	add    %ebx,-0x61(%rax)
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
	...
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
  18:	78 03                	js     1d <.debug_aranges+0x1d>
	...

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
   0:	51                   	push   %rcx
   1:	00 00                	add    %al,(%rax)
   3:	00 05 00 08 00 00    	add    %al,0x800(%rip)        # 809 <Video::TextModePresenter::MoveUp()+0x4f9>
   9:	00 00                	add    %al,(%rax)
   b:	00 04 47             	add    %al,(%rdi,%rax,2)
   e:	50                   	push   %rax
   f:	04 5c                	add    $0x5c,%al
  11:	63 04 78             	movsxd (%rax,%rdi,2),%eax
  14:	b5 01                	mov    $0x1,%ch
  16:	00 04 5c             	add    %al,(%rsp,%rbx,2)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
  19:	63 04 78             	movsxd (%rax,%rdi,2),%eax
  1c:	aa                   	stos   %al,%es:(%rdi)
  1d:	01 00                	add    %eax,(%rax)
  1f:	04 89                	add    $0x89,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = 0x00;
  21:	02 8f 02 04 c8 02    	add    0x2c80402(%rdi),%cl
  27:	cf                   	iret   
  28:	02 00                	add    (%rax),%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
            for (int x = 0; x < 80; x++)
  2a:	04 9f                	add    $0x9f,%al
  2c:	02 a2 02 04 ac 02    	add    0x2ac0402(%rdx),%ah
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18 (discriminator 2)
        for (int y = 0; y < 25; y++)
  32:	b5 02                	mov    $0x2,%ch
  34:	04 b5                	add    $0xb5,%al
  36:	02 c8                	add    %al,%cl
  38:	02 00                	add    (%rax),%al
  3a:	04 c8                	add    $0xc8,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:25
    }
  3c:	03 fe                	add    %esi,%edi
  3e:	04 04                	add    $0x4,%al
Video::TextModePresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  40:	9b                   	fwait
  41:	05 a9 05 00 04       	add    $0x40005a9,%eax
  46:	d1 03                	roll   (%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  48:	e2 03                	loop   4d <.debug_rnglists+0x4d>
  4a:	04 e2                	add    $0xe2,%al
  4c:	03 f7                	add    %edi,%esi
  4e:	03 04 fb             	add    (%rbx,%rdi,8),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  51:	03                   	.byte 0x3
  52:	81                   	.byte 0x81
  53:	04 00                	add    $0x0,%al

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
   0:	ac                   	lods   %ds:(%rsi),%al
   1:	03 00                	add    (%rax),%eax
   3:	00 05 00 08 00 6a    	add    %al,0x6a000800(%rip)        # 6a000809 <Video::TextModePresenter::MoveUp()+0x6a0004f9>
   9:	00 00                	add    %al,(%rax)
   b:	00 01                	add    %al,(%rcx)
   d:	01 01                	add    %eax,(%rcx)
   f:	fb                   	sti    
  10:	0e                   	(bad)  
  11:	0d 00 01 01 01       	or     $0x1010100,%eax
  16:	01 00                	add    %eax,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
  18:	00 00                	add    %al,(%rax)
  1a:	01 00                	add    %eax,(%rax)
  1c:	00 01                	add    %al,(%rcx)
  1e:	01 01                	add    %eax,(%rcx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = 0x00;
  20:	1f                   	(bad)  
  21:	07                   	(bad)  
	...
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:25
    }
  3e:	02 01                	add    (%rcx),%al
Video::TextModePresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  40:	1f                   	(bad)  
  41:	02 0f                	add    (%rdi),%cl
  43:	0a 00                	or     (%rax),%al
  45:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  47:	00 01                	add    %al,(%rcx)
  49:	00 00                	add    %al,(%rax)
  4b:	00 00                	add    %al,(%rax)
  4d:	01 00                	add    %eax,(%rax)
  4f:	00 00                	add    %al,(%rax)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  51:	00 02                	add    %al,(%rdx)
  53:	00 00                	add    %al,(%rax)
  55:	00 00                	add    %al,(%rax)
  57:	03 00                	add    (%rax),%eax
  59:	00 00                	add    %al,(%rax)
  5b:	00 03                	add    %al,(%rbx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  5d:	00 00                	add    %al,(%rax)
  5f:	00 00                	add    %al,(%rax)
  61:	04 00                	add    $0x0,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  63:	00 00                	add    %al,(%rax)
  65:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 6b <.debug_line+0x6b>
  6b:	04 00                	add    $0x0,%al
  6d:	00 00                	add    %al,(%rax)
  6f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 75 <.debug_line+0x75>
  75:	06                   	(bad)  
  76:	05 05 00 09 02       	add    $0x2090005,%eax
	...
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93
                m_TextBuffer[(y * 80) + x] = blank;
  83:	03 10                	add    (%rax),%edx
  85:	01 05 09 13 05 1b    	add    %eax,0x1b051309(%rip)        # 1b051394 <Video::TextModePresenter::MoveUp()+0x1b051084>
  8b:	01 05 1f 08 76 05    	add    %eax,0x576081f(%rip)        # 57608b0 <Video::TextModePresenter::MoveUp()+0x57605a0>
  91:	11 00                	adc    %eax,(%rax)
  93:	02 04 03             	add    (%rbx,%rax,1),%al
  96:	84 05 2c 00 02 04    	test   %al,0x402002c(%rip)        # 40200c8 <Video::TextModePresenter::MoveUp()+0x401fdb8>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
  9c:	03 06                	add    (%rsi),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  9e:	01 05 1f 00 02 04    	add    %eax,0x402001f(%rip)        # 40200c3 <Video::TextModePresenter::MoveUp()+0x401fdb3>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = blank;
  a4:	03 2c 05 2c 00 02 04 	add    0x402002c(,%rax,1),%ebp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  ab:	03 4c 05 0d          	add    0xd(%rbp,%rax,1),%ecx
  af:	00 02                	add    %al,(%rdx)
  b1:	04 03                	add    $0x3,%al
  b3:	06                   	(bad)  
  b4:	48 05 1f 00 02 04    	add    $0x402001f,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:96
    }
  ba:	03 01                	add    (%rcx),%eax
  bc:	05 09 00 02 04       	add    $0x4020009,%eax
Video::TextModePresenter::TextModePresenter():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  c1:	02 56 05             	add    0x5(%rsi),%dl
  c4:	1b 00                	sbb    (%rax),%eax
  c6:	02 04 02             	add    (%rdx,%rax,1),%al
  c9:	01 05 05 06 c1 06    	add    %eax,0x6c10605(%rip)        # 6c106d4 <Video::TextModePresenter::MoveUp()+0x6c103c4>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:8
    TextModePresenter::TextModePresenter()
  cf:	03 3b                	add    (%rbx),%edi
  d1:	58                   	pop    %rax
  d2:	06                   	(bad)  
  d3:	01 05 09 06 75 13    	add    %eax,0x13750609(%rip)        # 137506e2 <Video::TextModePresenter::MoveUp()+0x137503d2>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:9
      : m_TextBuffer(reinterpret_cast<uint16_t *>(0xb8000)),
  d9:	14 13                	adc    $0x13,%al
  db:	05 21 01 05 2b       	add    $0x2b050121,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  e0:	06                   	(bad)  
  e1:	01 05 21 4a 05 05    	add    %eax,0x5054a21(%rip)        # 5054b08 <Video::TextModePresenter::MoveUp()+0x50547f8>
  e7:	53                   	push   %rbx
  e8:	4a 05 2f 89 05 05    	rex.WX add $0x505892f,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:10
        m_OffsetX(0),
  ee:	03 79 74             	add    0x74(%rcx),%edi
  f1:	82                   	(bad)  
  f2:	05 25 06 cf 05       	add    $0x5cf0625,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:14
    }
  f7:	11 06                	adc    %eax,(%rsi)
  f9:	5a                   	pop    %rdx
  fa:	4a 00 02             	rex.WX add %al,(%rdx)
  fd:	04 03                	add    $0x3,%al
  ff:	06                   	(bad)  
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
    {
 100:	08 66 05             	or     %ah,0x5(%rsi)
 103:	2c 00                	sub    $0x0,%al
 105:	02 04 03             	add    (%rbx,%rax,1),%al
 108:	06                   	(bad)  
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 109:	01 05 25 00 02 04    	add    %eax,0x4020025(%rip)        # 4020134 <Video::TextModePresenter::MoveUp()+0x401fe24>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 10f:	03 56 05             	add    0x5(%rsi),%edx
 112:	2c 00                	sub    $0x0,%al
 114:	02 04 03             	add    (%rbx,%rax,1),%al
 117:	4c 05 0d 00 02 04    	rex.WR add $0x402000d,%rax
 11d:	03 06                	add    (%rsi),%eax
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 11f:	48 05 25 00 02 04    	add    $0x4020025,%rax
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 125:	03 01                	add    (%rcx),%eax
 127:	00 02                	add    %al,(%rdx)
 129:	04 03                	add    $0x3,%al
 12b:	06                   	(bad)  
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 12c:	58                   	pop    %rax
 12d:	05 09 06 10 05       	add    $0x5100609,%eax
 132:	21 3c 05 05 06 89 3c 	and    %edi,0x3c890605(,%rax,1)
 139:	2e 06                	cs (bad) 
 13b:	03 a8 7f 66 05 14    	add    0x1405667f(%rax),%ebp
 141:	06                   	(bad)  
 142:	15 05 05 9b 05       	adc    $0x59b0505,%eax
 147:	14 bd                	adc    $0xbd,%al
 149:	05 09 2c 05 14       	add    $0x14052c09,%eax
 14e:	84 05 09 c7 05 05    	test   %al,0x505c709(%rip)        # 505c85d <Video::TextModePresenter::MoveUp()+0x505c54d>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35 (discriminator 1)
        int y = point.y == -1 ? (m_OffsetY + 1) : Integers::ConstraintToRange(0, 25, point.y);
 154:	78 4a                	js     1a0 <.debug_line+0x1a0>
 156:	06                   	(bad)  
 157:	03 13                	add    (%rbx),%edx
 159:	82                   	(bad)  
 15a:	06                   	(bad)  
 15b:	01 4a 04             	add    %ecx,0x4(%rdx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:37 (discriminator 4)
        if (y >= 25)
 15e:	02 05 10 03 78 58    	add    0x58780310(%rip),%al        # 58780474 <Video::TextModePresenter::MoveUp()+0x58780164>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 164:	04 01                	add    $0x1,%al
 166:	05 05 6e 04 02       	add    $0x2046e05,%eax
 16b:	05 10 03 78 f2       	add    $0xf2780310,%eax
 170:	3c 04                	cmp    $0x4,%al
 172:	01 05 05 1a 4a 04    	add    %eax,0x44a1a05(%rip)        # 44a1b7d <Video::TextModePresenter::MoveUp()+0x44a186d>
 178:	02 05 10 03 78 66    	add    0x66780310(%rip),%al        # 6678048e <Video::TextModePresenter::MoveUp()+0x6678017e>
 17e:	04 01                	add    $0x1,%al
 180:	05 09 06 03 09       	add    $0x9030609,%eax
 185:	90                   	nop
 186:	04 02                	add    $0x2,%al
 188:	05 10 06 03 77       	add    $0x77030610,%eax
 18d:	01 08                	add    %ecx,(%rax)
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 18f:	2e 04 01             	cs add $0x1,%al
 192:	05 09 06 03 0a       	add    $0xa030609,%eax
 197:	01 04 02             	add    %eax,(%rdx,%rax,1)
 19a:	05 10 06 03 76       	add    $0x76030610,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 19f:	01 04 01             	add    %eax,(%rcx,%rax,1)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 1a2:	05 1f 03 0a 74       	add    $0x740a031f,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 1a7:	05 22 00 02 04       	add    $0x4020022,%eax
 1ac:	01 58 05             	add    %ebx,0x5(%rax)
 1af:	1f                   	(bad)  
 1b0:	00 02                	add    %al,(%rdx)
 1b2:	04 01                	add    $0x1,%al
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 1b4:	58                   	pop    %rax
 1b5:	05 09 00 02 04       	add    $0x4020009,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:43
        size_t len = strlen(text);
 1ba:	04 06                	add    $0x6,%al
 1bc:	4c 05 0d 68 13 05    	rex.WR add $0x513680d,%rax
 1c2:	12 06                	adc    (%rsi),%al
 1c4:	9e                   	sahf   
 1c5:	3c 05                	cmp    $0x5,%al
 1c7:	1f                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44
        for (int i = 0; i < len; i++)
 1c8:	06                   	(bad)  
 1c9:	03 6c 08 c8          	add    -0x38(%rax,%rcx,1),%ebp
 1cd:	05 11 a0 05 2c       	add    $0x2c05a011,%eax
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1d2:	06                   	(bad)  
 1d3:	01 05 1f 2c 05 2c    	add    %eax,0x2c052c1f(%rip)        # 2c052df8 <Video::TextModePresenter::MoveUp()+0x2c052ae8>
 1d9:	4c 05 0d 06 48 05    	rex.WR add $0x548060d,%rax
 1df:	1f                   	(bad)  
 1e0:	01 05 09 56 05 1b    	add    %eax,0x1b055609(%rip)        # 1b0557ef <Video::TextModePresenter::MoveUp()+0x1b0554df>
 1e6:	01 05 0f 06 03 15    	add    %eax,0x1503060f(%rip)        # 150307fb <Video::TextModePresenter::MoveUp()+0x150304eb>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1ec:	ba 05 09 06 40       	mov    $0x40060905,%edx
 1f1:	05 1c 06 01 9e       	add    $0x9e01061c,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1f6:	05 09 06 83 05       	add    $0x5830609,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1fb:	1b 01                	sbb    (%rcx),%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1fd:	05 33 06 03 16       	add    $0x16030633,%eax
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 202:	90                   	nop
 203:	05 50 4a 05 33       	add    $0x33054a50,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:50
                y++;
 208:	74 66                	je     270 <.debug_line+0x270>
 20a:	05 0d 06 03 6c       	add    $0x6c03060d,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:51
                if (y >= 25)
 20f:	01 05 0a 03 11 01    	add    %eax,0x111030a(%rip)        # 111051f <Video::TextModePresenter::MoveUp()+0x111020f>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 215:	05 09 14 05 1f       	add    $0x1f051409,%eax
 21a:	06                   	(bad)  
 21b:	01 05 0e 4b 05 09    	add    %eax,0x9054b0e(%rip)        # 9054d2f <Video::TextModePresenter::MoveUp()+0x9054a1f>
 221:	49 05 1f 4a 05 25    	rex.WB add $0x25054a1f,%rax
 227:	3c 05                	cmp    $0x5,%al
 229:	38 3d 05 15 03 6d    	cmp    %bh,0x6d031505(%rip)        # 6d031734 <Video::TextModePresenter::MoveUp()+0x6d031424>
 22f:	3c 05                	cmp    $0x5,%al
 231:	25 03 12 4a 05       	and    $0x54a1203,%eax
 236:	38 2f                	cmp    %ch,(%rdi)
 238:	4a 05 0d 06 03 6d    	rex.WX add $0x6d03060d,%rax
 23e:	01 06                	add    %eax,(%rsi)
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 240:	01 05 11 06 68 13    	add    %eax,0x13680611(%rip)        # 13680857 <Video::TextModePresenter::MoveUp()+0x13680547>
 246:	05 12 06 01 05       	add    $0x5010612,%eax
 24b:	11 06                	adc    %eax,(%rsi)
 24d:	4b 05 13 06 10 05    	rex.WXB add $0x5100613,%rax
 253:	11 3e                	adc    %edi,(%rsi)
 255:	05 15 06 68 13       	add    $0x13680615,%eax
 25a:	05 1a 06 9e 05       	add    $0x59e061a,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 25f:	1f                   	(bad)  
 260:	06                   	(bad)  
 261:	03 5e 02             	add    0x2(%rsi),%ebx
 264:	22 01                	and    (%rcx),%al
 266:	05 11 f4 05 2c       	add    $0x2c05f411,%eax
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 26b:	06                   	(bad)  
 26c:	01 05 1f 2c 05 2c    	add    %eax,0x2c052c1f(%rip)        # 2c052e91 <Video::TextModePresenter::MoveUp()+0x2c052b81>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44 (discriminator 2)
        for (int i = 0; i < len; i++)
 272:	4c 05 0d 06 48 05    	rex.WR add $0x548060d,%rax
 278:	1f                   	(bad)  
 279:	01 05 09 56 05 1b    	add    %eax,0x1b055609(%rip)        # 1b055888 <Video::TextModePresenter::MoveUp()+0x1b055578>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:59
        m_OffsetX = x;
 27f:	01 06                	add    %eax,(%rsi)
 281:	74 05                	je     288 <.debug_line+0x288>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:60
        m_OffsetY = y;
 283:	17                   	(bad)  
 284:	03 23                	add    (%rbx),%esp
 286:	58                   	pop    %rax
 287:	05 13 38 05 09       	add    $0x9053813,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:61
    }
 28c:	00 02                	add    %al,(%rdx)
 28e:	04 02                	add    $0x2,%al
 290:	06                   	(bad)  
 291:	37                   	(bad)  
 292:	05 1b 00 02 04       	add    $0x402001b,%eax
 297:	02 01                	add    (%rcx),%al
 299:	00 02                	add    %al,(%rdx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 29b:	04 02                	add    $0x2,%al
 29d:	06                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 29e:	4a 00 02             	rex.WX add %al,(%rdx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 2a1:	04 02                	add    $0x2,%al
 2a3:	90                   	nop
 2a4:	05 09 06 03 0f       	add    $0xf030609,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2a9:	01 05 13 06 01 05    	add    %eax,0x5010613(%rip)        # 50108c2 <Video::TextModePresenter::MoveUp()+0x50105b2>
 2af:	09 06                	or     %eax,(%rsi)
 2b1:	59                   	pop    %rcx
 2b2:	05 13 06 01 05       	add    $0x5010613,%eax
 2b7:	05 59 90 2e 2e       	add    $0x2e2e9059,%eax
 2bc:	2e 05 1a 03 79 4a    	cs add $0x4a79031a,%eax
Video::TextModePresenter::Text(Video::Point, char const*, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:29
        Text(point, text, 15, 0);
 2c2:	05 17 3b 05 1a       	add    $0x1a053b17,%eax
 2c7:	3d 82 05 12 03       	cmp    $0x3120582,%eax
 2cc:	72 01                	jb     2cf <.debug_line+0x2cf>
 2ce:	05 0f 3b 05 12       	add    $0x12053b0f,%eax
 2d3:	3d 2e 05 05 06       	cmp    $0x605052e,%eax
 2d8:	03 74 e4 05          	add    0x5(%rsp,%riz,8),%esi
 2dc:	09 13                	or     %edx,(%rbx)
 2de:	05 0d 06 01 82       	add    $0x8201060d,%eax
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2e3:	ba 05 05 06 00       	mov    $0x60505,%edx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2e8:	09 02                	or     %eax,(%rdx)
	...
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2f2:	03 23                	add    (%rbx),%esp
 2f4:	01 05 09 13 05 50    	add    %eax,0x50051309(%rip)        # 50051603 <Video::TextModePresenter::MoveUp()+0x500512f3>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2fa:	06                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2fb:	13 05 05 48 05 1d    	adc    0x1d054805(%rip),%eax        # 1d054b06 <Video::TextModePresenter::MoveUp()+0x1d0547f6>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 301:	3d 05 0e 4b 05       	cmp    $0x54b0e05,%eax
 306:	1f                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 307:	49 05 38 3d 05 33    	rex.WB add $0x33053d38,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:67
    }
 30d:	3c 05                	cmp    $0x5,%al
 30f:	1f                   	(bad)  
Video::TextModePresenter::MoveUp():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 310:	3b 05 38 3d 05 25    	cmp    0x25053d38(%rip),%eax        # 2505404e <Video::TextModePresenter::MoveUp()+0x25053d3e>
 316:	3b 05 30 2e 05 25    	cmp    0x25052e30(%rip),%eax        # 2505314c <Video::TextModePresenter::MoveUp()+0x25052e3c>
 31c:	4a 05 38 3d 05 05    	rex.WX add $0x5053d38,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74
            for (int col = 0; col < 80; col++)
 322:	4b 06                	rex.WXB (bad) 
 324:	5b                   	pop    %rbx
 325:	05 09 13 13 05       	add    $0x5131309,%eax
 32a:	1d 01 05 11 06       	sbb    $0x6110501,%eax
 32f:	16                   	(bad)  
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76 (discriminator 3)
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 330:	05 23 06 f0 05       	add    $0x5f00623,%eax
 335:	11 00                	adc    %eax,(%rax)
 337:	02 04 03             	add    (%rbx,%rax,1),%al
 33a:	f4                   	hlt    
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74 (discriminator 3)
            for (int col = 0; col < 80; col++)
 33b:	05 45 00 02 04       	add    $0x4020045,%eax
 340:	03 06                	add    (%rsi),%eax
 342:	01 05 2f 00 02 04    	add    %eax,0x402002f(%rip)        # 4020377 <Video::TextModePresenter::MoveUp()+0x4020067>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:72 (discriminator 2)
        for (int ln = 0; ln < 25; ln++)
 348:	03 3c 05 0d 00 02 04 	add    0x402000d(,%rax,1),%edi
 34f:	03 06                	add    (%rsi),%eax
 351:	80 05 23 00 02 04 03 	addb   $0x3,0x4020023(%rip)        # 402037b <Video::TextModePresenter::MoveUp()+0x402006b>
 358:	01 00                	add    %eax,(%rax)
 35a:	02 04 03             	add    (%rbx,%rax,1),%al
 35d:	06                   	(bad)  
 35e:	4a 05 09 00 02 04    	rex.WX add $0x4020009,%rax
 364:	02 06                	add    (%rsi),%al
 366:	56                   	push   %rsi
 367:	05 1d 00 02 04       	add    $0x402001d,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 36c:	02 01                	add    (%rcx),%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 36e:	00 02                	add    %al,(%rdx)
 370:	04 02                	add    $0x2,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 372:	06                   	(bad)  
 373:	08 58 00             	or     %bl,0x0(%rax)
 376:	02 04 02             	add    (%rdx,%rax,1),%al
 379:	d6                   	(bad)  
 37a:	05 0d 00 02 04       	add    $0x402000d,%eax
 37f:	03 06                	add    (%rsi),%eax
 381:	1a 05 26 00 02 04    	sbb    0x4020026(%rip),%al        # 40203ad <Video::TextModePresenter::MoveUp()+0x402009d>
 387:	03 06                	add    (%rsi),%eax
 389:	01 05 1f 00 02 04    	add    %eax,0x402001f(%rip)        # 40203ae <Video::TextModePresenter::MoveUp()+0x402009e>
 38f:	03 2d 05 26 00 02    	add    0x2002605(%rip),%ebp        # 200299a <Video::TextModePresenter::MoveUp()+0x200268a>
 395:	04 03                	add    $0x3,%al
 397:	4b 05 09 00 02 04    	rex.WXB add $0x4020009,%rax
 39d:	03 06                	add    (%rsi),%eax
 39f:	49 05 1f 00 02 04    	rex.WB add $0x402001f,%rax
 3a5:	03 01                	add    (%rcx),%eax
 3a7:	05 05 06 5a 02       	add    $0x25a0605,%eax
 3ac:	01 00                	add    %eax,(%rax)
 3ae:	01 01                	add    %eax,(%rcx)

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
   0:	5f                   	pop    %rdi
   1:	5a                   	pop    %rdx
   2:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
   8:	6f                   	outsl  %ds:(%rsi),(%dx)
   9:	31 37                	xor    %esi,(%rdi)
   b:	54                   	push   %rsp
   c:	65 78 74             	gs js  83 <.debug_str+0x83>
   f:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
  11:	64 65 50             	fs gs push %rax
  14:	72 65                	jb     7b <.debug_str+0x7b>
  16:	73 65                	jae    7d <.debug_str+0x7d>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 65                	je     80 <.debug_str+0x80>
  1b:	72 34                	jb     51 <.debug_str+0x51>
  1d:	54                   	push   %rsp
  1e:	65 78 74             	gs js  95 <.debug_str+0x95>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = 0x00;
  21:	45                   	rex.RB
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
            for (int x = 0; x < 80; x++)
  22:	4e 53                	rex.WRX push %rbx
  24:	5f                   	pop    %rdi
  25:	35 50 6f 69 6e       	xor    $0x6e696f50,%eax
  2a:	74 45                	je     71 <.debug_str+0x71>
  2c:	50                   	push   %rax
  2d:	4b 63 69 00          	rex.WXB movslq 0x0(%r9),%rbp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18 (discriminator 2)
        for (int y = 0; y < 25; y++)
  31:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
  33:	73 65                	jae    9a <.debug_str+0x9a>
  35:	72 74                	jb     ab <.debug_str+0xab>
  37:	41 74 00             	rex.B je 3a <.debug_str+0x3a>
  3a:	5f                   	pop    %rdi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:25
    }
  3b:	5a                   	pop    %rdx
  3c:	4e 31 30             	rex.WRX xor %r14,(%rax)
  3f:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
  46:	69 
Video::TextModePresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  47:	73 74                	jae    bd <.debug_str+0xbd>
  49:	49 50                	rex.WB push %r8
  4b:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  51:	6f                   	outsl  %ds:(%rsi),(%dx)
  52:	31 31                	xor    %esi,(%rcx)
  54:	56                   	push   %rsi
  55:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
  5c:	70 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  5d:	75 74                	jne    d3 <.debug_str+0xd3>
  5f:	45                   	rex.RB
  60:	45 35 43 6c 65 61    	rex.RB xor $0x61656c43,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  66:	72 45                	jb     ad <.debug_str+0xad>
  68:	76 00                	jbe    6a <.debug_str+0x6a>
  6a:	5f                   	pop    %rdi
  6b:	5a                   	pop    %rdx
  6c:	4e 31 30             	rex.WRX xor %r14,(%rax)
  6f:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
  76:	69 
  77:	73 74                	jae    ed <.debug_str+0xed>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  79:	49 50                	rex.WB push %r8
  7b:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93
                m_TextBuffer[(y * 80) + x] = blank;
  81:	6f                   	outsl  %ds:(%rsi),(%dx)
  82:	31 31                	xor    %esi,(%rcx)
  84:	56                   	push   %rsi
  85:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
  8c:	70 
  8d:	75 74                	jne    103 <.debug_str+0x103>
  8f:	45                   	rex.RB
  90:	45 37                	rex.RB (bad) 
  92:	46 6f                	rex.RX outsl %ds:(%rsi),(%dx)
  94:	72 45                	jb     db <.debug_str+0xdb>
  96:	61                   	(bad)  
  97:	63 68 45             	movsxd 0x45(%rax),%ebp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
  9a:	76 00                	jbe    9c <.debug_str+0x9c>
  9c:	64 65 63 6c 74 79    	fs movsxd %gs:0x79(%rsp,%rsi,2),%ebp
  a2:	70 65                	jo     109 <.debug_str+0x109>
  a4:	28 6e 75             	sub    %ch,0x75(%rsi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  a7:	6c                   	insb   (%dx),%es:(%rdi)
  a8:	6c                   	insb   (%dx),%es:(%rdi)
  a9:	70 74                	jo     11f <.debug_str+0x11f>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  ab:	72 29                	jb     d6 <.debug_str+0xd6>
  ad:	00 74 65 78          	add    %dh,0x78(%rbp,%riz,2)
  b1:	74 00                	je     b3 <.debug_str+0xb3>
  b3:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:96
    }
  b5:	74 65                	je     11c <.debug_str+0x11c>
  b7:	67 65 72 73          	addr32 gs jb 12e <.debug_str+0x12e>
  bb:	00 6d 5f             	add    %ch,0x5f(%rbp)
  be:	46 72 6f             	rex.RX jb 130 <.debug_str+0x130>
Video::TextModePresenter::TextModePresenter():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  c1:	6e                   	outsb  %ds:(%rsi),(%dx)
  c2:	74 00                	je     c4 <.debug_str+0xc4>
  c4:	5f                   	pop    %rdi
  c5:	76 70                	jbe    137 <.debug_str+0x137>
  c7:	74 72                	je     13b <.debug_str+0x13b>
  c9:	2e 56                	cs push %rsi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:8
    TextModePresenter::TextModePresenter()
  cb:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
  d2:	73 
  d3:	65 6e                	outsb  %gs:(%rsi),(%dx)
  d5:	74 65                	je     13c <.debug_str+0x13c>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  d7:	72 00                	jb     d9 <.debug_str+0xd9>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:9
      : m_TextBuffer(reinterpret_cast<uint16_t *>(0xb8000)),
  d9:	75 69                	jne    144 <.debug_str+0x144>
  db:	6e                   	outsb  %ds:(%rsi),(%dx)
  dc:	74 36                	je     114 <.debug_str+0x114>
  de:	34 5f                	xor    $0x5f,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  e0:	74 00                	je     e2 <.debug_str+0xe2>
  e2:	73 68                	jae    14c <.debug_str+0x14c>
  e4:	6f                   	outsl  %ds:(%rsi),(%dx)
  e5:	72 74                	jb     15b <.debug_str+0x15b>
  e7:	20 69 6e             	and    %ch,0x6e(%rcx)
  ea:	74 00                	je     ec <.debug_str+0xec>
  ec:	5f                   	pop    %rdi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:10
        m_OffsetX(0),
  ed:	5a                   	pop    %rdx
  ee:	4e 38 53 70          	rex.WRX cmp %r10b,0x70(%rbx)
  f2:	69 6e 6c 6f 63 6b 37 	imul   $0x376b636f,0x6c(%rsi),%ebp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:14
    }
  f9:	52                   	push   %rdx
  fa:	65 6c                	gs insb (%dx),%es:(%rdi)
  fc:	65 61                	gs (bad) 
  fe:	73 65                	jae    165 <.debug_str+0x165>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
    {
 100:	45 76 00             	rex.RB jbe 103 <.debug_str+0x103>
 103:	5f                   	pop    %rdi
 104:	5a                   	pop    %rdx
 105:	4e 38 49 6e          	rex.WRX cmp %r9b,0x6e(%rcx)
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 109:	74 65                	je     170 <.debug_str+0x170>
 10b:	67 65 72 73          	addr32 gs jb 182 <.debug_str+0x182>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 10f:	31 37                	xor    %esi,(%rdi)
 111:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
 113:	6e                   	outsb  %ds:(%rsi),(%dx)
 114:	73 74                	jae    18a <.debug_str+0x18a>
 116:	72 61                	jb     179 <.debug_str+0x179>
 118:	69 6e 74 54 6f 52 61 	imul   $0x61526f54,0x74(%rsi),%ebp
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 11f:	6e                   	outsb  %ds:(%rsi),(%dx)
 120:	67 65 45 6d          	gs rex.RB insl (%dx),%es:(%edi)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 124:	6d                   	insl   (%dx),%es:(%rdi)
 125:	6d                   	insl   (%dx),%es:(%rdi)
 126:	00 5f 5a             	add    %bl,0x5a(%rdi)
 129:	4e 31 30             	rex.WRX xor %r14,(%rax)
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 12c:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 133:	69 
 134:	73 74                	jae    1aa <.debug_str+0x1aa>
 136:	49 50                	rex.WB push %r8
 138:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 13e:	6f                   	outsl  %ds:(%rsi),(%dx)
 13f:	31 31                	xor    %esi,(%rcx)
 141:	56                   	push   %rsi
 142:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 149:	70 
 14a:	75 74                	jne    1c0 <.debug_str+0x1c0>
 14c:	45                   	rex.RB
 14d:	45 38 43 6f          	cmp    %r8b,0x6f(%r11)
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35
        int y = point.y == -1 ? (m_OffsetY + 1) : Integers::ConstraintToRange(0, 25, point.y);
 151:	6e                   	outsb  %ds:(%rsi),(%dx)
 152:	74 61                	je     1b5 <.debug_str+0x1b5>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35 (discriminator 1)
 154:	69 6e 73 45 50 38 4c 	imul   $0x4c385045,0x73(%rsi),%ebp
 15b:	69 73 74 4e 6f 64 65 	imul   $0x65646f4e,0x74(%rbx),%esi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:37 (discriminator 4)
        if (y >= 25)
 162:	49 53                	rex.WB push %r11
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 164:	32 5f 45             	xor    0x45(%rdi),%bl
 167:	00 47 4e             	add    %al,0x4e(%rdi)
 16a:	55                   	push   %rbp
 16b:	20 43 2b             	and    %al,0x2b(%rbx)
 16e:	2b 31                	sub    (%rcx),%esi
 170:	37                   	(bad)  
 171:	20 31                	and    %dh,(%rcx)
 173:	31 2e                	xor    %ebp,(%rsi)
 175:	32 2e                	xor    (%rsi),%ch
 177:	30 20                	xor    %ah,(%rax)
 179:	2d 6d 6e 6f 2d       	sub    $0x2d6f6e6d,%eax
 17e:	6d                   	insl   (%dx),%es:(%rdi)
 17f:	6d                   	insl   (%dx),%es:(%rdi)
 180:	78 20                	js     1a2 <.debug_str+0x1a2>
 182:	2d 6d 6e 6f 2d       	sub    $0x2d6f6e6d,%eax
 187:	73 73                	jae    1fc <.debug_str+0x1fc>
 189:	65 20 2d 6d 6e 6f 2d 	and    %ch,%gs:0x2d6f6e6d(%rip)        # 2d6f6ffd <Video::TextModePresenter::MoveUp()+0x2d6f6ced>
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 190:	73 73                	jae    205 <.debug_str+0x205>
 192:	65 32 20             	xor    %gs:(%rax),%ah
 195:	2d 6d 63 6d 6f       	sub    $0x6f6d636d,%eax
 19a:	64 65 6c             	fs gs insb (%dx),%es:(%rdi)
 19d:	3d 6c 61 72 67       	cmp    $0x6772616c,%eax
 1a2:	65 20 2d 6d 6e 6f 2d 	and    %ch,%gs:0x2d6f6e6d(%rip)        # 2d6f7016 <Video::TextModePresenter::MoveUp()+0x2d6f6d06>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 1a9:	72 65                	jb     210 <.debug_str+0x210>
 1ab:	64 2d 7a 6f 6e 65    	fs sub $0x656e6f7a,%eax
 1b1:	20 2d 6d 74 75 6e    	and    %ch,0x6e75746d(%rip)        # 6e757624 <Video::TextModePresenter::MoveUp()+0x6e757314>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:43
        size_t len = strlen(text);
 1b7:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 1bd:	72 69                	jb     228 <.debug_str+0x228>
 1bf:	63 20                	movsxd (%rax),%esp
 1c1:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 1c6:	68 3d 78 38 36       	push   $0x3638783d
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44
        for (int i = 0; i < len; i++)
 1cb:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 1d0:	67 20 2d 4f 32 20 2d 	and    %ch,0x2d20324f(%eip)        # 2d203426 <Video::TextModePresenter::MoveUp()+0x2d203116>
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1d7:	66 66 72 65          	data16 data16 jb 240 <.debug_str+0x240>
 1db:	65 73 74             	gs jae 252 <.debug_str+0x252>
 1de:	61                   	(bad)  
 1df:	6e                   	outsb  %ds:(%rsi),(%dx)
 1e0:	64 69 6e 67 20 2d 66 	imul   $0x69662d20,%fs:0x67(%rsi),%ebp
 1e7:	69 
 1e8:	6e                   	outsb  %ds:(%rsi),(%dx)
 1e9:	6c                   	insb   (%dx),%es:(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 1ea:	69 6e 65 2d 66 75 6e 	imul   $0x6e75662d,0x65(%rsi),%ebp
 1f1:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1f5:	6e                   	outsb  %ds:(%rsi),(%dx)
 1f6:	73 20                	jae    218 <.debug_str+0x218>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 1f8:	2d 66 6e 6f 2d       	sub    $0x2d6f6e66,%eax
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 1fd:	65 78 63             	gs js  263 <.debug_str+0x263>
 200:	65 70 74             	gs jo  277 <.debug_str+0x277>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:47
            if (++x >= 80)
 203:	69 6f 6e 73 20 2d 66 	imul   $0x662d2073,0x6e(%rdi),%ebp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:50
                y++;
 20a:	6e                   	outsb  %ds:(%rsi),(%dx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 20b:	6f                   	outsl  %ds:(%rsi),(%dx)
 20c:	2d 72 74 74 69       	sub    $0x69747472,%eax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:51
                if (y >= 25)
 211:	20 2d 66 6e 6f 2d    	and    %ch,0x2d6f6e66(%rip)        # 2d6f707d <Video::TextModePresenter::MoveUp()+0x2d6f6d6d>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 217:	70 69                	jo     282 <.debug_str+0x282>
 219:	63 00                	movsxd (%rax),%eax
 21b:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
 21d:	6e                   	outsb  %ds:(%rsi),(%dx)
 21e:	74 61                	je     281 <.debug_str+0x281>
 220:	69 6e 73 00 5f 5a 4e 	imul   $0x4e5a5f00,0x73(%rsi),%ebp
 227:	31 30                	xor    %esi,(%rax)
 229:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 230:	69 
 231:	73 74                	jae    2a7 <.debug_str+0x2a7>
 233:	49 50                	rex.WB push %r8
 235:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 23b:	6f                   	outsl  %ds:(%rsi),(%dx)
 23c:	31 31                	xor    %esi,(%rcx)
 23e:	56                   	push   %rsi
 23f:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 246:	70 
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 247:	75 74                	jne    2bd <.debug_str+0x2bd>
 249:	45                   	rex.RB
 24a:	45 33 41 64          	xor    0x64(%r9),%r8d
 24e:	64 45 50             	fs rex.RB push %r8
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 251:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 255:	74 4e                	je     2a5 <.debug_str+0x2a5>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22
                m_TextBuffer[(y * 80) + x] = 0x00;
 257:	6f                   	outsl  %ds:(%rsi),(%dx)
 258:	64 65 49 53          	fs gs rex.WB push %r11
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
 25c:	32 5f 45             	xor    0x45(%rdi),%bl
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
 25f:	00 5f 5a             	add    %bl,0x5a(%rdi)
 262:	4e 31 30             	rex.WRX xor %r14,(%rax)
 265:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 26c:	69 
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 26d:	73 74                	jae    2e3 <.debug_str+0x2e3>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:49
                x = 0;
 26f:	49 50                	rex.WB push %r8
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:44 (discriminator 2)
        for (int i = 0; i < len; i++)
 271:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 277:	6f                   	outsl  %ds:(%rsi),(%dx)
 278:	31 31                	xor    %esi,(%rcx)
 27a:	56                   	push   %rsi
 27b:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 282:	70 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:60
        m_OffsetY = y;
 283:	75 74                	jne    2f9 <.debug_str+0x2f9>
 285:	45                   	rex.RB
 286:	45                   	rex.RB
 287:	36 52                	ss push %rdx
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:61
    }
 289:	65 6d                	gs insl (%dx),%es:(%rdi)
 28b:	6f                   	outsl  %ds:(%rsi),(%dx)
 28c:	76 65                	jbe    2f3 <.debug_str+0x2f3>
 28e:	45 6a 00             	rex.RB push $0x0
 291:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 293:	65 61                	gs (bad) 
 295:	72 00                	jb     297 <.debug_str+0x297>
 297:	52                   	push   %rdx
 298:	65 63 74 61 6e       	movsxd %gs:0x6e(%rcx,%riz,2),%esi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 29d:	67 6c                	insb   (%dx),%es:(%edi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:53
                    y = 0;
 29f:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:54
                    Clear();
 2a3:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2a9:	6f                   	outsl  %ds:(%rsi),(%dx)
 2aa:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:39
            y = 0;
 2ad:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 2b4:	73 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 2b5:	65 6e                	outsb  %gs:(%rsi),(%dx)
 2b7:	74 65                	je     31e <.debug_str+0x31e>
 2b9:	72 43                	jb     2fe <.debug_str+0x2fe>
 2bb:	34 45                	xor    $0x45,%al
 2bd:	76 00                	jbe    2bf <.debug_str+0x2bf>
 2bf:	41 63 71 75          	movsxd 0x75(%r9),%esi
Video::TextModePresenter::Text(Video::Point, char const*, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:29
        Text(point, text, 15, 0);
 2c3:	69 72 65 00 75 69 6e 	imul   $0x6e697500,0x65(%rdx),%esi
 2ca:	74 38                	je     304 <.debug_str+0x304>
 2cc:	5f                   	pop    %rdi
 2cd:	74 00                	je     2cf <.debug_str+0x2cf>
 2cf:	5f                   	pop    %rdi
 2d0:	5a                   	pop    %rdx
 2d1:	4e 31 30             	rex.WRX xor %r14,(%rax)
 2d4:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 2db:	69 
 2dc:	73 74                	jae    352 <.debug_str+0x352>
 2de:	49 50                	rex.WB push %r8
Video::TextModePresenter::Text(Video::Point, char, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2e0:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:64
    {
 2e6:	6f                   	outsl  %ds:(%rsi),(%dx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2e7:	31 31                	xor    %esi,(%rcx)
 2e9:	56                   	push   %rsi
 2ea:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 2f1:	70 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2f2:	75 74                	jne    368 <.debug_str+0x368>
 2f4:	45                   	rex.RB
 2f5:	45                   	rex.RB
 2f6:	44 34 45             	rex.R xor $0x45,%al
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 2f9:	76 00                	jbe    2fb <.debug_str+0x2fb>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:66
            ((uint16_t) c | (uint16_t) foreground << 8 | (uint16_t) background << 12);
 2fb:	56                   	push   %rsi
 2fc:	69 64 65 6f 00 54 65 	imul   $0x78655400,0x6f(%rbp,%riz,2),%esp
 303:	78 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:65
        m_TextBuffer[(point.y * 80) + point.x] = 
 304:	74 00                	je     306 <.debug_str+0x306>
 306:	4c 69 73 74 4e 6f 64 	imul   $0x65646f4e,0x74(%rbx),%r14
 30d:	65 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:67
    }
 30e:	3c 56                	cmp    $0x56,%al
Video::TextModePresenter::MoveUp():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 310:	69 64 65 6f 3a 3a 56 	imul   $0x69563a3a,0x6f(%rbp,%riz,2),%esp
 317:	69 
 318:	64 65 6f             	fs outsl %gs:(%rsi),(%dx)
 31b:	4f 75 74             	rex.WRXB jne 392 <.debug_str+0x392>
 31e:	70 75                	jo     395 <.debug_str+0x395>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74
            for (int col = 0; col < 80; col++)
 320:	74 2a                	je     34c <.debug_str+0x34c>
 322:	3e 00 43 6f          	ds add %al,0x6f(%rbx)
 326:	6e                   	outsb  %ds:(%rsi),(%dx)
 327:	73 74                	jae    39d <.debug_str+0x39d>
 329:	72 61                	jb     38c <.debug_str+0x38c>
 32b:	69 6e 74 54 6f 52 61 	imul   $0x61526f54,0x74(%rsi),%ebp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:76 (discriminator 3)
                m_TextBuffer[(ln * 80) + col] = copy[(ln * 80) + col];
 332:	6e                   	outsb  %ds:(%rsi),(%dx)
 333:	67 65 00 5f 5a       	add    %bl,%gs:0x5a(%edi)
 338:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:74 (discriminator 3)
            for (int col = 0; col < 80; col++)
 33e:	6f                   	outsl  %ds:(%rsi),(%dx)
 33f:	31 37                	xor    %esi,(%rdi)
 341:	54                   	push   %rsp
 342:	65 78 74             	gs js  3b9 <.debug_str+0x3b9>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:72 (discriminator 2)
        for (int ln = 0; ln < 25; ln++)
 345:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 347:	64 65 50             	fs gs push %rax
 34a:	72 65                	jb     3b1 <.debug_str+0x3b1>
 34c:	73 65                	jae    3b3 <.debug_str+0x3b3>
 34e:	6e                   	outsb  %ds:(%rsi),(%dx)
 34f:	74 65                	je     3b6 <.debug_str+0x3b6>
 351:	72 43                	jb     396 <.debug_str+0x396>
 353:	32 45 76             	xor    0x76(%rbp),%al
 356:	00 46 6f             	add    %al,0x6f(%rsi)
 359:	72 45                	jb     3a0 <.debug_str+0x3a0>
 35b:	61                   	(bad)  
 35c:	63 68 00             	movsxd 0x0(%rax),%ebp
 35f:	5f                   	pop    %rdi
 360:	5a                   	pop    %rdx
 361:	4e 31 30             	rex.WRX xor %r14,(%rax)
 364:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 36b:	69 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 36c:	73 74                	jae    3e2 <.debug_str+0x3e2>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:80 (discriminator 3)
            m_TextBuffer[1920 + col] = 0x0;
 36e:	49 50                	rex.WB push %r8
 370:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:79 (discriminator 3)
        for (int col = 0; col < 80; col++)
 376:	6f                   	outsl  %ds:(%rsi),(%dx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:81
    }
 377:	31 31                	xor    %esi,(%rcx)
 379:	56                   	push   %rsi
 37a:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 381:	70 
 382:	75 74                	jne    3f8 <.debug_str+0x3f8>
 384:	45                   	rex.RB
 385:	45 38 43 6f          	cmp    %r8b,0x6f(%r11)
 389:	6e                   	outsb  %ds:(%rsi),(%dx)
 38a:	74 61                	je     3ed <.debug_str+0x3ed>
 38c:	69 6e 73 45 52 53 32 	imul   $0x32535245,0x73(%rsi),%ebp
 393:	5f                   	pop    %rdi
 394:	00 62 6f             	add    %ah,0x6f(%rdx)
 397:	6f                   	outsl  %ds:(%rsi),(%dx)
 398:	6c                   	insb   (%dx),%es:(%rdi)
 399:	00 77 69             	add    %dh,0x69(%rdi)
 39c:	64 74 68             	fs je  407 <.debug_str+0x407>
 39f:	00 56 69             	add    %dl,0x69(%rsi)
 3a2:	64 65 6f             	fs outsl %gs:(%rsi),(%dx)
 3a5:	50                   	push   %rax
 3a6:	72 65                	jb     40d <.debug_str+0x40d>
 3a8:	73 65                	jae    40f <.debug_str+0x40f>
 3aa:	6e                   	outsb  %ds:(%rsi),(%dx)
 3ab:	74 65                	je     412 <.debug_str+0x412>
 3ad:	72 00                	jb     3af <.debug_str+0x3af>
 3af:	5f                   	pop    %rdi
 3b0:	5a                   	pop    %rdx
 3b1:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 3b7:	6f                   	outsl  %ds:(%rsi),(%dx)
 3b8:	31 37                	xor    %esi,(%rdi)
 3ba:	54                   	push   %rsp
 3bb:	65 78 74             	gs js  432 <.debug_str+0x432>
 3be:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 3c0:	64 65 50             	fs gs push %rax
 3c3:	72 65                	jb     42a <.debug_str+0x42a>
 3c5:	73 65                	jae    42c <.debug_str+0x42c>
 3c7:	6e                   	outsb  %ds:(%rsi),(%dx)
 3c8:	74 65                	je     42f <.debug_str+0x42f>
 3ca:	72 43                	jb     40f <.debug_str+0x40f>
 3cc:	34 45                	xor    $0x45,%al
 3ce:	76 00                	jbe    3d0 <.debug_str+0x3d0>
 3d0:	56                   	push   %rsi
 3d1:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 3d8:	70 
 3d9:	75 74                	jne    44f <.debug_str+0x44f>
 3db:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 3df:	67 20 6c 6f 6e       	and    %ch,0x6e(%edi,%ebp,2)
 3e4:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 3e8:	74 00                	je     3ea <.debug_str+0x3ea>
 3ea:	5f                   	pop    %rdi
 3eb:	5a                   	pop    %rdx
 3ec:	4e 31 30             	rex.WRX xor %r14,(%rax)
 3ef:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 3f6:	69 
 3f7:	73 74                	jae    46d <.debug_str+0x46d>
 3f9:	49 50                	rex.WB push %r8
 3fb:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 401:	6f                   	outsl  %ds:(%rsi),(%dx)
 402:	31 31                	xor    %esi,(%rcx)
 404:	56                   	push   %rsi
 405:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 40c:	70 
 40d:	75 74                	jne    483 <.debug_str+0x483>
 40f:	45                   	rex.RB
 410:	45 38 49 6e          	cmp    %r9b,0x6e(%r9)
 414:	73 65                	jae    47b <.debug_str+0x47b>
 416:	72 74                	jb     48c <.debug_str+0x48c>
 418:	41 74 45             	rex.B je 460 <.debug_str+0x460>
 41b:	50                   	push   %rax
 41c:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
 420:	74 4e                	je     470 <.debug_str+0x470>
 422:	6f                   	outsl  %ds:(%rsi),(%dx)
 423:	64 65 49 53          	fs gs rex.WB push %r11
 427:	32 5f 45             	xor    0x45(%rdi),%bl
 42a:	6a 00                	push   $0x0
 42c:	6c                   	insb   (%dx),%es:(%rdi)
 42d:	6f                   	outsl  %ds:(%rsi),(%dx)
 42e:	6e                   	outsb  %ds:(%rsi),(%dx)
 42f:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 433:	74 00                	je     435 <.debug_str+0x435>
 435:	5f                   	pop    %rdi
 436:	5a                   	pop    %rdx
 437:	4e 31 30             	rex.WRX xor %r14,(%rax)
 43a:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 441:	69 
 442:	73 74                	jae    4b8 <.debug_str+0x4b8>
 444:	49 50                	rex.WB push %r8
 446:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 44c:	6f                   	outsl  %ds:(%rsi),(%dx)
 44d:	31 31                	xor    %esi,(%rcx)
 44f:	56                   	push   %rsi
 450:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 457:	70 
 458:	75 74                	jne    4ce <.debug_str+0x4ce>
 45a:	45                   	rex.RB
 45b:	45 37                	rex.RB (bad) 
 45d:	45 78 74             	rex.RB js 4d4 <.debug_str+0x4d4>
 460:	72 61                	jb     4c3 <.debug_str+0x4c3>
 462:	63 74 45 76          	movsxd 0x76(%rbp,%rax,2),%esi
 466:	00 5f 5a             	add    %bl,0x5a(%rdi)
 469:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 46f:	6f                   	outsl  %ds:(%rsi),(%dx)
 470:	31 37                	xor    %esi,(%rdi)
 472:	54                   	push   %rsp
 473:	65 78 74             	gs js  4ea <.debug_str+0x4ea>
 476:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 478:	64 65 50             	fs gs push %rax
 47b:	72 65                	jb     4e2 <.debug_str+0x4e2>
 47d:	73 65                	jae    4e4 <.debug_str+0x4e4>
 47f:	6e                   	outsb  %ds:(%rsi),(%dx)
 480:	74 65                	je     4e7 <.debug_str+0x4e7>
 482:	72 34                	jb     4b8 <.debug_str+0x4b8>
 484:	54                   	push   %rsp
 485:	65 78 74             	gs js  4fc <.debug_str+0x4fc>
 488:	45                   	rex.RB
 489:	4e 53                	rex.WRX push %rbx
 48b:	5f                   	pop    %rdi
 48c:	35 50 6f 69 6e       	xor    $0x6e696f50,%eax
 491:	74 45                	je     4d8 <.debug_str+0x4d8>
 493:	63 68 68             	movsxd 0x68(%rax),%ebp
 496:	00 5f 5a             	add    %bl,0x5a(%rdi)
 499:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 49f:	6f                   	outsl  %ds:(%rsi),(%dx)
 4a0:	31 37                	xor    %esi,(%rdi)
 4a2:	54                   	push   %rsp
 4a3:	65 78 74             	gs js  51a <.debug_str+0x51a>
 4a6:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 4a8:	64 65 50             	fs gs push %rax
 4ab:	72 65                	jb     512 <.debug_str+0x512>
 4ad:	73 65                	jae    514 <.debug_str+0x514>
 4af:	6e                   	outsb  %ds:(%rsi),(%dx)
 4b0:	74 65                	je     517 <.debug_str+0x517>
 4b2:	72 43                	jb     4f7 <.debug_str+0x4f7>
 4b4:	34 45                	xor    $0x45,%al
 4b6:	52                   	push   %rdx
 4b7:	4b 53                	rex.WXB push %r11
 4b9:	30 5f 00             	xor    %bl,0x0(%rdi)
 4bc:	5f                   	pop    %rdi
 4bd:	5a                   	pop    %rdx
 4be:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 4c4:	6f                   	outsl  %ds:(%rsi),(%dx)
 4c5:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 4c8:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 4cf:	73 
 4d0:	65 6e                	outsb  %gs:(%rsi),(%dx)
 4d2:	74 65                	je     539 <.debug_str+0x539>
 4d4:	72 43                	jb     519 <.debug_str+0x519>
 4d6:	34 45                	xor    $0x45,%al
 4d8:	52                   	push   %rdx
 4d9:	4b 53                	rex.WXB push %r11
 4db:	30 5f 00             	xor    %bl,0x0(%rdi)
 4de:	6d                   	insl   (%dx),%es:(%rdi)
 4df:	5f                   	pop    %rdi
 4e0:	4f                   	rex.WRXB
 4e1:	66 66 73 65          	data16 data16 jae 54a <.debug_str+0x54a>
 4e5:	74 59                	je     540 <.debug_str+0x540>
 4e7:	00 5f 5a             	add    %bl,0x5a(%rdi)
 4ea:	4e 31 30             	rex.WRX xor %r14,(%rax)
 4ed:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 4f4:	69 
 4f5:	73 74                	jae    56b <.debug_str+0x56b>
 4f7:	49 50                	rex.WB push %r8
 4f9:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 4ff:	6f                   	outsl  %ds:(%rsi),(%dx)
 500:	31 31                	xor    %esi,(%rcx)
 502:	56                   	push   %rsi
 503:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 50a:	70 
 50b:	75 74                	jne    581 <.debug_str+0x581>
 50d:	45                   	rex.RB
 50e:	45                   	rex.RB
 50f:	43 34 45             	rex.XB xor $0x45,%al
 512:	76 00                	jbe    514 <.debug_str+0x514>
 514:	5f                   	pop    %rdi
 515:	5a                   	pop    %rdx
 516:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 51c:	6f                   	outsl  %ds:(%rsi),(%dx)
 51d:	31 37                	xor    %esi,(%rdi)
 51f:	54                   	push   %rsp
 520:	65 78 74             	gs js  597 <.debug_str+0x597>
 523:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 525:	64 65 50             	fs gs push %rax
 528:	72 65                	jb     58f <.debug_str+0x58f>
 52a:	73 65                	jae    591 <.debug_str+0x591>
 52c:	6e                   	outsb  %ds:(%rsi),(%dx)
 52d:	74 65                	je     594 <.debug_str+0x594>
 52f:	72 35                	jb     566 <.debug_str+0x566>
 531:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 533:	65 61                	gs (bad) 
 535:	72 45                	jb     57c <.debug_str+0x57c>
 537:	76 00                	jbe    539 <.debug_str+0x539>
 539:	66 6f                	outsw  %ds:(%rsi),(%dx)
 53b:	72 65                	jb     5a2 <.debug_str+0x5a2>
 53d:	67 72 6f             	addr32 jb 5af <.debug_str+0x5af>
 540:	75 6e                	jne    5b0 <.debug_str+0x5b0>
 542:	64 00 5f 5a          	add    %bl,%fs:0x5a(%rdi)
 546:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 54c:	6f                   	outsl  %ds:(%rsi),(%dx)
 54d:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 550:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 557:	73 
 558:	65 6e                	outsb  %gs:(%rsi),(%dx)
 55a:	74 65                	je     5c1 <.debug_str+0x5c1>
 55c:	72 35                	jb     593 <.debug_str+0x593>
 55e:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 560:	65 61                	gs (bad) 
 562:	72 45                	jb     5a9 <.debug_str+0x5a9>
 564:	76 00                	jbe    566 <.debug_str+0x566>
 566:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 56d:	69 
 56e:	73 74                	jae    5e4 <.debug_str+0x5e4>
 570:	00 5f 5a             	add    %bl,0x5a(%rdi)
 573:	4e 38 53 70          	rex.WRX cmp %r10b,0x70(%rbx)
 577:	69 6e 6c 6f 63 6b 37 	imul   $0x376b636f,0x6c(%rsi),%ebp
 57e:	41 63 71 75          	movsxd 0x75(%r9),%esi
 582:	69 72 65 45 76 00 5f 	imul   $0x5f007645,0x65(%rdx),%esi
 589:	5a                   	pop    %rdx
 58a:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 590:	6f                   	outsl  %ds:(%rsi),(%dx)
 591:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 594:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 59b:	73 
 59c:	65 6e                	outsb  %gs:(%rsi),(%dx)
 59e:	74 65                	je     605 <.debug_str+0x605>
 5a0:	72 43                	jb     5e5 <.debug_str+0x5e5>
 5a2:	32 45 76             	xor    0x76(%rbp),%al
 5a5:	00 6c 6f 6e          	add    %ch,0x6e(%rdi,%rbp,2)
 5a9:	67 20 64 6f 75       	and    %ah,0x75(%edi,%ebp,2)
 5ae:	62                   	(bad)  
 5af:	6c                   	insb   (%dx),%es:(%rdi)
 5b0:	65 00 5f 5a          	add    %bl,%gs:0x5a(%rdi)
 5b4:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 5ba:	6f                   	outsl  %ds:(%rsi),(%dx)
 5bb:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 5be:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 5c5:	73 
 5c6:	65 6e                	outsb  %gs:(%rsi),(%dx)
 5c8:	74 65                	je     62f <.debug_str+0x62f>
 5ca:	72 44                	jb     610 <.debug_str+0x610>
 5cc:	34 45                	xor    $0x45,%al
 5ce:	76 00                	jbe    5d0 <.debug_str+0x5d0>
 5d0:	75 6e                	jne    640 <.debug_str+0x640>
 5d2:	73 69                	jae    63d <.debug_str+0x63d>
 5d4:	67 6e                	outsb  %ds:(%esi),(%dx)
 5d6:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 5db:	61                   	(bad)  
 5dc:	72 00                	jb     5de <.debug_str+0x5de>
 5de:	6d                   	insl   (%dx),%es:(%rdi)
 5df:	5f                   	pop    %rdi
 5e0:	54                   	push   %rsp
 5e1:	65 78 74             	gs js  658 <.debug_str+0x658>
 5e4:	42 75 66             	rex.X jne 64d <.debug_str+0x64d>
 5e7:	66 65 72 00          	data16 gs jb 5eb <.debug_str+0x5eb>
 5eb:	73 69                	jae    656 <.debug_str+0x656>
 5ed:	67 6e                	outsb  %ds:(%esi),(%dx)
 5ef:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 5f4:	61                   	(bad)  
 5f5:	72 00                	jb     5f7 <.debug_str+0x5f7>
 5f7:	5f                   	pop    %rdi
 5f8:	5a                   	pop    %rdx
 5f9:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 5ff:	6f                   	outsl  %ds:(%rsi),(%dx)
 600:	31 37                	xor    %esi,(%rdi)
 602:	54                   	push   %rsp
 603:	65 78 74             	gs js  67a <.debug_str+0x67a>
 606:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 608:	64 65 50             	fs gs push %rax
 60b:	72 65                	jb     672 <.debug_str+0x672>
 60d:	73 65                	jae    674 <.debug_str+0x674>
 60f:	6e                   	outsb  %ds:(%rsi),(%dx)
 610:	74 65                	je     677 <.debug_str+0x677>
 612:	72 36                	jb     64a <.debug_str+0x64a>
 614:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 616:	76 65                	jbe    67d <.debug_str+0x67d>
 618:	55                   	push   %rbp
 619:	70 45                	jo     660 <.debug_str+0x660>
 61b:	76 00                	jbe    61d <.debug_str+0x61d>
 61d:	75 69                	jne    688 <.debug_str+0x688>
 61f:	6e                   	outsb  %ds:(%rsi),(%dx)
 620:	74 33                	je     655 <.debug_str+0x655>
 622:	32 5f 74             	xor    0x74(%rdi),%bl
 625:	00 6d 5f             	add    %ch,0x5f(%rbp)
 628:	4f                   	rex.WRXB
 629:	66 66 73 65          	data16 data16 jae 692 <.debug_str+0x692>
 62d:	74 58                	je     687 <.debug_str+0x687>
 62f:	00 75 6e             	add    %dh,0x6e(%rbp)
 632:	73 69                	jae    69d <.debug_str+0x69d>
 634:	67 6e                	outsb  %ds:(%esi),(%dx)
 636:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 63b:	74 00                	je     63d <.debug_str+0x63d>
 63d:	75 69                	jne    6a8 <.debug_str+0x6a8>
 63f:	6e                   	outsb  %ds:(%rsi),(%dx)
 640:	74 31                	je     673 <.debug_str+0x673>
 642:	36 5f                	ss pop %rdi
 644:	74 00                	je     646 <.debug_str+0x646>
 646:	5f                   	pop    %rdi
 647:	5a                   	pop    %rdx
 648:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 64e:	6f                   	outsl  %ds:(%rsi),(%dx)
 64f:	31 37                	xor    %esi,(%rdi)
 651:	54                   	push   %rsp
 652:	65 78 74             	gs js  6c9 <.debug_str+0x6c9>
 655:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 657:	64 65 50             	fs gs push %rax
 65a:	72 65                	jb     6c1 <.debug_str+0x6c1>
 65c:	73 65                	jae    6c3 <.debug_str+0x6c3>
 65e:	6e                   	outsb  %ds:(%rsi),(%dx)
 65f:	74 65                	je     6c6 <.debug_str+0x6c6>
 661:	72 44                	jb     6a7 <.debug_str+0x6a7>
 663:	34 45                	xor    $0x45,%al
 665:	76 00                	jbe    667 <.debug_str+0x667>
 667:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
 669:	75 6e                	jne    6d9 <.debug_str+0x6d9>
 66b:	74 00                	je     66d <.debug_str+0x66d>
 66d:	6d                   	insl   (%dx),%es:(%rdi)
 66e:	5f                   	pop    %rdi
 66f:	4c 6f                	rex.WR outsl %ds:(%rsi),(%dx)
 671:	63 6b 00             	movsxd 0x0(%rbx),%ebp
 674:	5f                   	pop    %rdi
 675:	5a                   	pop    %rdx
 676:	4e 31 30             	rex.WRX xor %r14,(%rax)
 679:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 680:	69 
 681:	73 74                	jae    6f7 <.debug_str+0x6f7>
 683:	49 50                	rex.WB push %r8
 685:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 68b:	6f                   	outsl  %ds:(%rsi),(%dx)
 68c:	31 31                	xor    %esi,(%rcx)
 68e:	56                   	push   %rsi
 68f:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 696:	70 
 697:	75 74                	jne    70d <.debug_str+0x70d>
 699:	45                   	rex.RB
 69a:	45 33 41 64          	xor    0x64(%r9),%r8d
 69e:	64 45 53             	fs rex.RB push %r11
 6a1:	32 5f 00             	xor    0x0(%rdi),%bl
 6a4:	73 68                	jae    70e <.debug_str+0x70e>
 6a6:	6f                   	outsl  %ds:(%rsi),(%dx)
 6a7:	72 74                	jb     71d <.debug_str+0x71d>
 6a9:	20 75 6e             	and    %dh,0x6e(%rbp)
 6ac:	73 69                	jae    717 <.debug_str+0x717>
 6ae:	67 6e                	outsb  %ds:(%esi),(%dx)
 6b0:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 6b5:	74 00                	je     6b7 <.debug_str+0x6b7>
 6b7:	6f                   	outsl  %ds:(%rsi),(%dx)
 6b8:	70 65                	jo     71f <.debug_str+0x71f>
 6ba:	72 61                	jb     71d <.debug_str+0x71d>
 6bc:	74 6f                	je     72d <.debug_str+0x72d>
 6be:	72 5b                	jb     71b <.debug_str+0x71b>
 6c0:	5d                   	pop    %rbp
 6c1:	00 7e 56             	add    %bh,0x56(%rsi)
 6c4:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 6cb:	73 
 6cc:	65 6e                	outsb  %gs:(%rsi),(%dx)
 6ce:	74 65                	je     735 <.debug_str+0x735>
 6d0:	72 00                	jb     6d2 <.debug_str+0x6d2>
 6d2:	63 68 61             	movsxd 0x61(%rax),%ebp
 6d5:	72 00                	jb     6d7 <.debug_str+0x6d7>
 6d7:	5f                   	pop    %rdi
 6d8:	5a                   	pop    %rdx
 6d9:	4e 31 30             	rex.WRX xor %r14,(%rax)
 6dc:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 6e3:	69 
 6e4:	73 74                	jae    75a <.debug_str+0x75a>
 6e6:	49 50                	rex.WB push %r8
 6e8:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 6ee:	6f                   	outsl  %ds:(%rsi),(%dx)
 6ef:	31 31                	xor    %esi,(%rcx)
 6f1:	56                   	push   %rsi
 6f2:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 6f9:	70 
 6fa:	75 74                	jne    770 <.debug_str+0x770>
 6fc:	45                   	rex.RB
 6fd:	45 35 46 69 72 73    	rex.RB xor $0x73726946,%eax
 703:	74 45                	je     74a <.debug_str+0x74a>
 705:	76 00                	jbe    707 <.debug_str+0x707>
 707:	73 74                	jae    77d <.debug_str+0x77d>
 709:	72 6c                	jb     777 <.debug_str+0x777>
 70b:	65 6e                	outsb  %gs:(%rsi),(%dx)
 70d:	00 5f 5a             	add    %bl,0x5a(%rdi)
 710:	4e 31 30             	rex.WRX xor %r14,(%rax)
 713:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 71a:	69 
 71b:	73 74                	jae    791 <.debug_str+0x791>
 71d:	49 50                	rex.WB push %r8
 71f:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 725:	6f                   	outsl  %ds:(%rsi),(%dx)
 726:	31 31                	xor    %esi,(%rcx)
 728:	56                   	push   %rsi
 729:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 730:	70 
 731:	75 74                	jne    7a7 <.debug_str+0x7a7>
 733:	45                   	rex.RB
 734:	45 33 41 64          	xor    0x64(%r9),%r8d
 738:	64 45 50             	fs rex.RB push %r8
 73b:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
 73f:	74 48                	je     789 <.debug_str+0x789>
 741:	65 61                	gs (bad) 
 743:	64 00 73 69          	add    %dh,%fs:0x69(%rbx)
 747:	7a 65                	jp     7ae <.debug_str+0x7ae>
 749:	5f                   	pop    %rdi
 74a:	74 00                	je     74c <.debug_str+0x74c>
 74c:	6d                   	insl   (%dx),%es:(%rdi)
 74d:	5f                   	pop    %rdi
 74e:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
 750:	75 6e                	jne    7c0 <.debug_str+0x7c0>
 752:	74 00                	je     754 <.debug_str+0x754>
 754:	74 68                	je     7be <.debug_str+0x7be>
 756:	69 73 00 5f 5a 4e 35 	imul   $0x354e5a5f,0x0(%rbx),%esi
 75d:	56                   	push   %rsi
 75e:	69 64 65 6f 31 37 54 	imul   $0x65543731,0x6f(%rbp,%riz,2),%esp
 765:	65 
 766:	78 74                	js     7dc <.debug_str+0x7dc>
 768:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 76a:	64 65 50             	fs gs push %rax
 76d:	72 65                	jb     7d4 <.debug_str+0x7d4>
 76f:	73 65                	jae    7d6 <.debug_str+0x7d6>
 771:	6e                   	outsb  %ds:(%rsi),(%dx)
 772:	74 65                	je     7d9 <.debug_str+0x7d9>
 774:	72 39                	jb     7af <.debug_str+0x7af>
 776:	52                   	push   %rdx
 777:	65 63 74 61 6e       	movsxd %gs:0x6e(%rcx,%riz,2),%esi
 77c:	67 6c                	insb   (%dx),%es:(%edi)
 77e:	65 45                	gs rex.RB
 780:	4e 53                	rex.WRX push %rbx
 782:	5f                   	pop    %rdi
 783:	35 50 6f 69 6e       	xor    $0x6e696f50,%eax
 788:	74 45                	je     7cf <.debug_str+0x7cf>
 78a:	69 69 00 5f 5a 4e 31 	imul   $0x314e5a5f,0x0(%rcx),%ebp
 791:	30 4c 69 6e          	xor    %cl,0x6e(%rcx,%rbp,2)
 795:	6b 65 64 4c          	imul   $0x4c,0x64(%rbp),%esp
 799:	69 73 74 49 50 4e 35 	imul   $0x354e5049,0x74(%rbx),%esi
 7a0:	56                   	push   %rsi
 7a1:	69 64 65 6f 31 31 56 	imul   $0x69563131,0x6f(%rbp,%riz,2),%esp
 7a8:	69 
 7a9:	64 65 6f             	fs outsl %gs:(%rsi),(%dx)
 7ac:	4f 75 74             	rex.WRXB jne 823 <.debug_str+0x823>
 7af:	70 75                	jo     826 <.debug_str+0x826>
 7b1:	74 45                	je     7f8 <.debug_str+0x7f8>
 7b3:	45                   	rex.RB
 7b4:	36 52                	ss push %rdx
 7b6:	65 6d                	gs insl (%dx),%es:(%rdi)
 7b8:	6f                   	outsl  %ds:(%rsi),(%dx)
 7b9:	76 65                	jbe    820 <.debug_str+0x820>
 7bb:	45 50                	rex.RB push %r8
 7bd:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
 7c1:	74 48                	je     80b <.debug_str+0x80b>
 7c3:	65 61                	gs (bad) 
 7c5:	64 00 66 6f          	add    %ah,%fs:0x6f(%rsi)
 7c9:	6e                   	outsb  %ds:(%rsi),(%dx)
 7ca:	74 53                	je     81f <.debug_str+0x81f>
 7cc:	69 7a 65 00 7e 54 65 	imul   $0x65547e00,0x65(%rdx),%edi
 7d3:	78 74                	js     849 <.debug_str+0x849>
 7d5:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 7d7:	64 65 50             	fs gs push %rax
 7da:	72 65                	jb     841 <.debug_str+0x841>
 7dc:	73 65                	jae    843 <.debug_str+0x843>
 7de:	6e                   	outsb  %ds:(%rsi),(%dx)
 7df:	74 65                	je     846 <.debug_str+0x846>
 7e1:	72 00                	jb     7e3 <.debug_str+0x7e3>
 7e3:	7e 4c                	jle    831 <.debug_str+0x831>
 7e5:	69 6e 6b 65 64 4c 69 	imul   $0x694c6465,0x6b(%rsi),%ebp
 7ec:	73 74                	jae    862 <.debug_str+0x862>
 7ee:	00 5f 5a             	add    %bl,0x5a(%rdi)
 7f1:	4e 31 30             	rex.WRX xor %r14,(%rax)
 7f4:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 7fb:	69 
 7fc:	73 74                	jae    872 <.debug_str+0x872>
 7fe:	49 50                	rex.WB push %r8
 800:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 806:	6f                   	outsl  %ds:(%rsi),(%dx)
 807:	31 31                	xor    %esi,(%rcx)
 809:	56                   	push   %rsi
 80a:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 811:	70 
 812:	75 74                	jne    888 <.debug_str+0x888>
 814:	45                   	rex.RB
 815:	45 35 43 6f 75 6e    	rex.RB xor $0x6e756f43,%eax
 81b:	74 45                	je     862 <.debug_str+0x862>
 81d:	76 00                	jbe    81f <.debug_str+0x81f>
 81f:	52                   	push   %rdx
 820:	65 6c                	gs insb (%dx),%es:(%rdi)
 822:	65 61                	gs (bad) 
 824:	73 65                	jae    88b <.debug_str+0x88b>
 826:	00 4d 6f             	add    %cl,0x6f(%rbp)
 829:	76 65                	jbe    890 <.debug_str+0x890>
 82b:	55                   	push   %rbp
 82c:	70 00                	jo     82e <.debug_str+0x82e>
 82e:	6c                   	insb   (%dx),%es:(%rdi)
 82f:	6f                   	outsl  %ds:(%rsi),(%dx)
 830:	6e                   	outsb  %ds:(%rsi),(%dx)
 831:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 835:	73 69                	jae    8a0 <.debug_str+0x8a0>
 837:	67 6e                	outsb  %ds:(%esi),(%dx)
 839:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 83e:	74 00                	je     840 <.debug_str+0x840>
 840:	70 6f                	jo     8b1 <.debug_str+0x8b1>
 842:	69 6e 74 00 5f 5a 4e 	imul   $0x4e5a5f00,0x74(%rsi),%ebp
 849:	35 56 69 64 65       	xor    $0x65646956,%eax
 84e:	6f                   	outsl  %ds:(%rsi),(%dx)
 84f:	31 37                	xor    %esi,(%rdi)
 851:	54                   	push   %rsp
 852:	65 78 74             	gs js  8c9 <.debug_str+0x8c9>
 855:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 857:	64 65 50             	fs gs push %rax
 85a:	72 65                	jb     8c1 <.debug_str+0x8c1>
 85c:	73 65                	jae    8c3 <.debug_str+0x8c3>
 85e:	6e                   	outsb  %ds:(%rsi),(%dx)
 85f:	74 65                	je     8c6 <.debug_str+0x8c6>
 861:	72 34                	jb     897 <.debug_str+0x897>
 863:	54                   	push   %rsp
 864:	65 78 74             	gs js  8db <.debug_str+0x8db>
 867:	45                   	rex.RB
 868:	4e 53                	rex.WRX push %rbx
 86a:	5f                   	pop    %rdi
 86b:	35 50 6f 69 6e       	xor    $0x6e696f50,%eax
 870:	74 45                	je     8b7 <.debug_str+0x8b7>
 872:	50                   	push   %rax
 873:	4b 63 68 68          	rex.WXB movslq 0x68(%r8),%rbp
 877:	00 46 69             	add    %al,0x69(%rsi)
 87a:	72 73                	jb     8ef <.debug_str+0x8ef>
 87c:	74 00                	je     87e <.debug_str+0x87e>
 87e:	5f                   	pop    %rdi
 87f:	5a                   	pop    %rdx
 880:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 886:	6f                   	outsl  %ds:(%rsi),(%dx)
 887:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 88a:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 891:	73 
 892:	65 6e                	outsb  %gs:(%rsi),(%dx)
 894:	74 65                	je     8fb <.debug_str+0x8fb>
 896:	72 39                	jb     8d1 <.debug_str+0x8d1>
 898:	52                   	push   %rdx
 899:	65 63 74 61 6e       	movsxd %gs:0x6e(%rcx,%riz,2),%esi
 89e:	67 6c                	insb   (%dx),%es:(%edi)
 8a0:	65 45                	gs rex.RB
 8a2:	4e 53                	rex.WRX push %rbx
 8a4:	5f                   	pop    %rdi
 8a5:	35 50 6f 69 6e       	xor    $0x6e696f50,%eax
 8aa:	74 45                	je     8f1 <.debug_str+0x8f1>
 8ac:	69 69 00 4c 69 6e 6b 	imul   $0x6b6e694c,0x0(%rcx),%ebp
 8b3:	65 64 4c 69 73 74 3c 	gs imul $0x6469563c,%fs:0x74(%rbx),%r14
 8ba:	56 69 64 
 8bd:	65 6f                	outsl  %gs:(%rsi),(%dx)
 8bf:	3a 3a                	cmp    (%rdx),%bh
 8c1:	56                   	push   %rsi
 8c2:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 8c9:	70 
 8ca:	75 74                	jne    940 <.debug_str+0x940>
 8cc:	2a 3e                	sub    (%rsi),%bh
 8ce:	00 53 70             	add    %dl,0x70(%rbx)
 8d1:	69 6e 6c 6f 63 6b 00 	imul   $0x6b636f,0x6c(%rsi),%ebp
 8d8:	6d                   	insl   (%dx),%es:(%rdi)
 8d9:	5f                   	pop    %rdi
 8da:	4f 75 74             	rex.WRXB jne 951 <.debug_str+0x951>
 8dd:	70 75                	jo     954 <.debug_str+0x954>
 8df:	74 73                	je     954 <.debug_str+0x954>
 8e1:	00 68 65             	add    %ch,0x65(%rax)
 8e4:	69 67 68 74 00 45 78 	imul   $0x78450074,0x68(%rdi),%esp
 8eb:	74 72                	je     95f <.debug_str+0x95f>
 8ed:	61                   	(bad)  
 8ee:	63 74 00 63          	movsxd 0x63(%rax,%rax,1),%esi
 8f2:	6f                   	outsl  %ds:(%rsi),(%dx)
 8f3:	70 79                	jo     96e <.debug_str+0x96e>
 8f5:	00 6d 5f             	add    %ch,0x5f(%rbp)
 8f8:	42 61                	rex.X (bad) 
 8fa:	63 6b 00             	movsxd 0x0(%rbx),%ebp
 8fd:	54                   	push   %rsp
 8fe:	65 78 74             	gs js  975 <.debug_str+0x975>
 901:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 903:	64 65 50             	fs gs push %rax
 906:	72 65                	jb     96d <.debug_str+0x96d>
 908:	73 65                	jae    96f <.debug_str+0x96f>
 90a:	6e                   	outsb  %ds:(%rsi),(%dx)
 90b:	74 65                	je     972 <.debug_str+0x972>
 90d:	72 00                	jb     90f <.debug_str+0x90f>
 90f:	5f                   	pop    %rdi
 910:	5f                   	pop    %rdi
 911:	76 74                	jbe    987 <.debug_str+0x987>
 913:	62                   	(bad)  
 914:	6c                   	insb   (%dx),%es:(%rdi)
 915:	5f                   	pop    %rdi
 916:	70 74                	jo     98c <.debug_str+0x98c>
 918:	72 5f                	jb     979 <.debug_str+0x979>
 91a:	74 79                	je     995 <.debug_str+0x995>
 91c:	70 65                	jo     983 <.debug_str+0x983>
 91e:	00 50 6f             	add    %dl,0x6f(%rax)
 921:	69 6e 74 00 5f 5a 4e 	imul   $0x4e5a5f00,0x74(%rsi),%ebp
 928:	31 30                	xor    %esi,(%rax)
 92a:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 931:	69 
 932:	73 74                	jae    9a8 <.debug_str+0x9a8>
 934:	49 50                	rex.WB push %r8
 936:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 93c:	6f                   	outsl  %ds:(%rsi),(%dx)
 93d:	31 31                	xor    %esi,(%rcx)
 93f:	56                   	push   %rsi
 940:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 947:	70 
 948:	75 74                	jne    9be <.debug_str+0x9be>
 94a:	45                   	rex.RB
 94b:	45 61                	rex.RB (bad) 
 94d:	53                   	push   %rbx
 94e:	45 52                	rex.RB push %r10
 950:	4b 53                	rex.WXB push %r11
 952:	33 5f 00             	xor    0x0(%rdi),%ebx
 955:	5f                   	pop    %rdi
 956:	5a                   	pop    %rdx
 957:	4e 31 30             	rex.WRX xor %r14,(%rax)
 95a:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 961:	69 
 962:	73 74                	jae    9d8 <.debug_str+0x9d8>
 964:	49 50                	rex.WB push %r8
 966:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 96c:	6f                   	outsl  %ds:(%rsi),(%dx)
 96d:	31 31                	xor    %esi,(%rcx)
 96f:	56                   	push   %rsi
 970:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 977:	70 
 978:	75 74                	jne    9ee <.debug_str+0x9ee>
 97a:	45                   	rex.RB
 97b:	45 69 78 45 69 00 4c 	imul   $0x694c0069,0x45(%r8),%r15d
 982:	69 
 983:	73 74                	jae    9f9 <.debug_str+0x9f9>
 985:	48                   	rex.W
 986:	65 61                	gs (bad) 
 988:	64 00 62 61          	add    %ah,%fs:0x61(%rdx)
 98c:	63 6b 67             	movsxd 0x67(%rbx),%ebp
 98f:	72 6f                	jb     a00 <.debug_str+0xa00>
 991:	75 6e                	jne    a01 <.debug_str+0xa01>
 993:	64 00 70 72          	add    %dh,%fs:0x72(%rax)
 997:	65 76 00             	gs jbe 99a <.debug_str+0x99a>
 99a:	6f                   	outsl  %ds:(%rsi),(%dx)
 99b:	70 65                	jo     a02 <.debug_str+0xa02>
 99d:	72 61                	jb     a00 <.debug_str+0xa00>
 99f:	74 6f                	je     a10 <.debug_str+0xa10>
 9a1:	72 3d                	jb     9e0 <.debug_str+0x9e0>
 9a3:	00 62 6c             	add    %ah,0x6c(%rdx)
 9a6:	61                   	(bad)  
 9a7:	6e                   	outsb  %ds:(%rsi),(%dx)
 9a8:	6b 00 5f             	imul   $0x5f,(%rax),%eax
 9ab:	5a                   	pop    %rdx
 9ac:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 9b2:	6f                   	outsl  %ds:(%rsi),(%dx)
 9b3:	31 34 56             	xor    %esi,(%rsi,%rdx,2)
 9b6:	69 64 65 6f 50 72 65 	imul   $0x73657250,0x6f(%rbp,%riz,2),%esp
 9bd:	73 
 9be:	65 6e                	outsb  %gs:(%rsi),(%dx)
 9c0:	74 65                	je     a27 <.debug_str+0xa27>
 9c2:	72 34                	jb     9f8 <.debug_str+0x9f8>
 9c4:	54                   	push   %rsp
 9c5:	65 78 74             	gs js  a3c <.debug_str+0xa3c>
 9c8:	45                   	rex.RB
 9c9:	4e 53                	rex.WRX push %rbx
 9cb:	5f                   	pop    %rdi
 9cc:	35 50 6f 69 6e       	xor    $0x6e696f50,%eax
 9d1:	74 45                	je     a18 <.debug_str+0xa18>
 9d3:	50                   	push   %rax
 9d4:	4b 63 69 00          	rex.WXB movslq 0x0(%r9),%rbp
 9d8:	6e                   	outsb  %ds:(%rsi),(%dx)
 9d9:	65 78 74             	gs js  a50 <.debug_str+0xa50>
 9dc:	00 52 65             	add    %dl,0x65(%rdx)
 9df:	6d                   	insl   (%dx),%es:(%rdi)
 9e0:	6f                   	outsl  %ds:(%rsi),(%dx)
 9e1:	76 65                	jbe    a48 <.debug_str+0xa48>
 9e3:	00 5f 5a             	add    %bl,0x5a(%rdi)
 9e6:	4e 31 30             	rex.WRX xor %r14,(%rax)
 9e9:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 9f0:	69 
 9f1:	73 74                	jae    a67 <Video::TextModePresenter::MoveUp()+0x757>
 9f3:	49 50                	rex.WB push %r8
 9f5:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 9fb:	6f                   	outsl  %ds:(%rsi),(%dx)
 9fc:	31 31                	xor    %esi,(%rcx)
 9fe:	56                   	push   %rsi
 9ff:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 a06:	70 
 a07:	75 74                	jne    a7d <Video::TextModePresenter::MoveUp()+0x76d>
 a09:	45                   	rex.RB
 a0a:	45                   	rex.RB
 a0b:	36 52                	ss push %rdx
 a0d:	65 6d                	gs insl (%dx),%es:(%rdi)
 a0f:	6f                   	outsl  %ds:(%rsi),(%dx)
 a10:	76 65                	jbe    a77 <Video::TextModePresenter::MoveUp()+0x767>
 a12:	45 50                	rex.RB push %r8
 a14:	38 4c 69 73          	cmp    %cl,0x73(%rcx,%rbp,2)
 a18:	74 4e                	je     a68 <Video::TextModePresenter::MoveUp()+0x758>
 a1a:	6f                   	outsl  %ds:(%rsi),(%dx)
 a1b:	64 65 49 53          	fs gs rex.WB push %r11
 a1f:	32 5f 45             	xor    0x45(%rdi),%bl
 a22:	00 5f 5a             	add    %bl,0x5a(%rdi)
 a25:	4e 31 30             	rex.WRX xor %r14,(%rax)
 a28:	4c 69 6e 6b 65 64 4c 	imul   $0x694c6465,0x6b(%rsi),%r13
 a2f:	69 
 a30:	73 74                	jae    aa6 <Video::TextModePresenter::MoveUp()+0x796>
 a32:	49 50                	rex.WB push %r8
 a34:	4e 35 56 69 64 65    	rex.WRX xor $0x65646956,%rax
 a3a:	6f                   	outsl  %ds:(%rsi),(%dx)
 a3b:	31 31                	xor    %esi,(%rcx)
 a3d:	56                   	push   %rsi
 a3e:	69 64 65 6f 4f 75 74 	imul   $0x7074754f,0x6f(%rbp,%riz,2),%esp
 a45:	70 
 a46:	75 74                	jne    abc <Video::TextModePresenter::MoveUp()+0x7ac>
 a48:	45                   	rex.RB
 a49:	45 33 47 65          	xor    0x65(%r15),%r8d
 a4d:	74 45                	je     a94 <Video::TextModePresenter::MoveUp()+0x784>
 a4f:	6a 00                	push   $0x0

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
   0:	73 72                	jae    74 <.debug_line_str+0x74>
   2:	63 2f                	movsxd (%rdi),%ebp
   4:	56                   	push   %rsi
   5:	69 64 65 6f 2f 54 65 	imul   $0x7865542f,0x6f(%rbp,%riz,2),%esp
   c:	78 
   d:	74 4d                	je     5c <.debug_line_str+0x5c>
   f:	6f                   	outsl  %ds:(%rsi),(%dx)
  10:	64 65 50             	fs gs push %rax
  13:	72 65                	jb     7a <.debug_line_str+0x7a>
  15:	73 65                	jae    7c <.debug_line_str+0x7c>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20
            for (int x = 0; x < 80; x++)
  18:	74 65                	je     7f <.debug_line_str+0x7f>
  1a:	72 49                	jb     65 <.debug_line_str+0x65>
  1c:	6d                   	insl   (%dx),%es:(%rdi)
  1d:	70 6c                	jo     8b <.debug_line_str+0x8b>
  1f:	2e 63 63 00          	cs movsxd 0x0(%rbx),%esp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
  23:	2f                   	(bad)  
  24:	68 6f 6d 65 2f       	push   $0x2f656d6f
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:22 (discriminator 3)
                m_TextBuffer[(y * 80) + x] = 0x00;
  29:	75 6d                	jne    98 <.debug_line_str+0x98>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:20 (discriminator 3)
            for (int x = 0; x < 80; x++)
  2b:	61                   	(bad)  
  2c:	72 69                	jb     97 <.debug_line_str+0x97>
  2e:	6e                   	outsb  %ds:(%rsi),(%dx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18 (discriminator 2)
        for (int y = 0; y < 25; y++)
  2f:	2f                   	(bad)  
  30:	73 6f                	jae    a1 <.debug_line_str+0xa1>
  32:	75 72                	jne    a6 <.debug_line_str+0xa6>
  34:	63 65 2f             	movsxd 0x2f(%rbp),%esp
  37:	6e                   	outsb  %ds:(%rsi),(%dx)
  38:	69 74 65 4f 53 2f 4b 	imul   $0x654b2f53,0x4f(%rbp,%riz,2),%esi
  3f:	65 
Video::TextModePresenter::Rectangle(Video::Point, int, int):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  40:	72 6e                	jb     b0 <.debug_line_str+0xb0>
  42:	65 6c                	gs insb (%dx),%es:(%rdi)
  44:	00 2f                	add    %ch,(%rdi)
  46:	68 6f 6d 65 2f       	push   $0x2f656d6f
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  4b:	75 6d                	jne    ba <.debug_line_str+0xba>
  4d:	61                   	(bad)  
  4e:	72 69                	jb     b9 <.debug_line_str+0xb9>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  50:	6e                   	outsb  %ds:(%rsi),(%dx)
  51:	2f                   	(bad)  
  52:	73 6f                	jae    c3 <.debug_line_str+0xc3>
  54:	75 72                	jne    c8 <.debug_line_str+0xc8>
  56:	63 65 2f             	movsxd 0x2f(%rbp),%esp
  59:	6e                   	outsb  %ds:(%rsi),(%dx)
  5a:	69 74 65 4f 53 2f 4b 	imul   $0x654b2f53,0x4f(%rbp,%riz,2),%esi
  61:	65 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  62:	72 6e                	jb     d2 <.debug_line_str+0xd2>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:84
    {
  64:	65 6c                	gs insb (%dx),%es:(%rdi)
  66:	00 73 72             	add    %dh,0x72(%rbx)
  69:	63 2f                	movsxd (%rdi),%ebp
  6b:	56                   	push   %rsi
  6c:	69 64 65 6f 00 69 6e 	imul   $0x636e6900,0x6f(%rbp,%riz,2),%esp
  73:	63 
  74:	6c                   	insb   (%dx),%es:(%rdi)
  75:	75 64                	jne    db <.debug_line_str+0xdb>
  77:	65 2f                	gs (bad) 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91
            for (int x = point.x; x < point.x + width; x++)
  79:	6c                   	insb   (%dx),%es:(%rdi)
  7a:	69 62 6b 65 72 6e 00 	imul   $0x6e7265,0x6b(%rdx),%esp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93
                m_TextBuffer[(y * 80) + x] = blank;
  81:	2f                   	(bad)  
  82:	68 6f 6d 65 2f       	push   $0x2f656d6f
  87:	75 6d                	jne    f6 <.debug_line_str+0xf6>
  89:	61                   	(bad)  
  8a:	72 69                	jb     f5 <.debug_line_str+0xf5>
  8c:	6e                   	outsb  %ds:(%rsi),(%dx)
  8d:	2f                   	(bad)  
  8e:	62 75                	(bad)  
  90:	69 6c 64 2f 78 38 36 	imul   $0x5f363878,0x2f(%rsp,%riz,2),%ebp
  97:	5f 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:93 (discriminator 3)
  98:	36 34 2d             	ss xor $0x2d,%al
  9b:	65 6c                	gs insb (%dx),%es:(%rdi)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:91 (discriminator 3)
            for (int x = point.x; x < point.x + width; x++)
  9d:	66 2f                	data16 (bad) 
  9f:	6c                   	insb   (%dx),%es:(%rdi)
  a0:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
  a7:	78 38                	js     e1 <.debug_line_str+0xe1>
  a9:	36 5f                	ss pop %rdi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:89
        for (int y = point.y; y < point.y + height; y++)
  ab:	36 34 2d             	ss xor $0x2d,%al
  ae:	65 6c                	gs insb (%dx),%es:(%rdi)
  b0:	66 2f                	data16 (bad) 
  b2:	31 31                	xor    %esi,(%rcx)
  b4:	2e 32 2e             	cs xor (%rsi),%ch
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:96
    }
  b7:	30 2f                	xor    %ch,(%rdi)
  b9:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
Video::TextModePresenter::TextModePresenter():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  c0:	00 69 6e             	add    %ch,0x6e(%rcx)
  c3:	63 6c 75 64          	movsxd 0x64(%rbp,%rsi,2),%ebp
  c7:	65 2f                	gs (bad) 
  c9:	55                   	push   %rbp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:8
    TextModePresenter::TextModePresenter()
  ca:	74 69                	je     135 <.debug_line_str+0x135>
  cc:	6c                   	insb   (%dx),%es:(%rdi)
  cd:	73 00                	jae    cf <.debug_line_str+0xcf>
  cf:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  d6:	2f                   	(bad)  
  d7:	56                   	push   %rsi
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:9
      : m_TextBuffer(reinterpret_cast<uint16_t *>(0xb8000)),
  d8:	69 64 65 6f 00 69 6e 	imul   $0x636e6900,0x6f(%rbp,%riz,2),%esp
  df:	63 
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:11
        m_OffsetY(0)
  e0:	6c                   	insb   (%dx),%es:(%rdi)
  e1:	75 64                	jne    147 <.debug_line_str+0x147>
  e3:	65 00 54 65 78       	add    %dl,%gs:0x78(%rbp,%riz,2)
  e8:	74 4d                	je     137 <.debug_line_str+0x137>
  ea:	6f                   	outsl  %ds:(%rsi),(%dx)
  eb:	64 65 50             	fs gs push %rax
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:10
        m_OffsetX(0),
  ee:	72 65                	jb     155 <.debug_line_str+0x155>
  f0:	73 65                	jae    157 <.debug_line_str+0x157>
  f2:	6e                   	outsb  %ds:(%rsi),(%dx)
  f3:	74 65                	je     15a <.debug_line_str+0x15a>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:14
    }
  f5:	72 49                	jb     140 <.debug_line_str+0x140>
  f7:	6d                   	insl   (%dx),%es:(%rdi)
  f8:	70 6c                	jo     166 <.debug_line_str+0x166>
  fa:	2e 63 63 00          	cs movsxd 0x0(%rbx),%esp
  fe:	54                   	push   %rsp
  ff:	65 78 74             	gs js  176 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x76>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
    {
 102:	4d 6f                	rex.WRB outsl %ds:(%rsi),(%dx)
 104:	64 65 50             	fs gs push %rax
 107:	72 65                	jb     16e <.debug_line_str+0x16e>
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 109:	73 65                	jae    170 <.debug_line_str+0x170>
 10b:	6e                   	outsb  %ds:(%rsi),(%dx)
 10c:	74 65                	je     173 <.debug_line_str+0x173>
 10e:	72 49                	jb     159 <.debug_line_str+0x159>
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 110:	6d                   	insl   (%dx),%es:(%rdi)
 111:	70 6c                	jo     17f <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x7f>
 113:	2e 63 63 00          	cs movsxd 0x0(%rbx),%esp
 117:	6f                   	outsl  %ds:(%rsi),(%dx)
 118:	62                   	(bad)  
 119:	6a 65                	push   $0x65
 11b:	63 74 73 2e          	movsxd 0x2e(%rbx,%rsi,2),%esi
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 11f:	68 00 73 74 64       	push   $0x64747300
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:33
 124:	69 6e 74 2d 67 63 63 	imul   $0x6363672d,0x74(%rsi),%ebp
 12b:	2e 68 00 73 74 64    	cs push $0x64747300
Integers::ConstraintToRange(unsigned long, unsigned long, unsigned long):
/home/umarin/source/niteOS/Kernel/include/libkern/objects.h:25
 131:	64 65 66 2e 68 00 4c 	fs gs cs pushw $0x4c00
 138:	69 6e 6b 65 64 4c 69 	imul   $0x694c6465,0x6b(%rsi),%ebp
 13f:	73 74                	jae    1b5 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0xb5>
 141:	2e 68 00 56 69 64    	cs push $0x64695600
 147:	65 6f                	outsl  %gs:(%rsi),(%dx)
 149:	2e 68 00 53 70 69    	cs push $0x69705300
Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char):
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35
        int y = point.y == -1 ? (m_OffsetY + 1) : Integers::ConstraintToRange(0, 25, point.y);
 14f:	6e                   	outsb  %ds:(%rsi),(%dx)
 150:	6c                   	insb   (%dx),%es:(%rdi)
 151:	6f                   	outsl  %ds:(%rsi),(%dx)
 152:	63 6b 2e             	movsxd 0x2e(%rbx),%ebp
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:35 (discriminator 1)
 155:	68 00 54 65 78       	push   $0x78655400
 15a:	74 4d                	je     1a9 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0xa9>
 15c:	6f                   	outsl  %ds:(%rsi),(%dx)
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:37 (discriminator 4)
        if (y >= 25)
 15d:	64 65 50             	fs gs push %rax
 160:	72 65                	jb     1c7 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0xc7>
 162:	73 65                	jae    1c9 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0xc9>
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:40
            Clear();
 164:	6e                   	outsb  %ds:(%rsi),(%dx)
 165:	74 65                	je     1cc <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0xcc>
 167:	72 2e                	jb     197 <Video::TextModePresenter::Text(Video::Point, char const*, unsigned char, unsigned char)+0x97>
 169:	68 00 53 74 72       	push   $0x72745300
 16e:	69                   	.byte 0x69
 16f:	6e                   	outsb  %ds:(%rsi),(%dx)
 170:	67                   	addr32
 171:	2e                   	cs
 172:	68                   	.byte 0x68
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
Video::TextModePresenter::Clear():
/home/umarin/source/niteOS/Kernel/src/Video/TextModePresenterImpl.cc:18
        for (int y = 0; y < 25; y++)
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 47 4e             	sub    %al,0x4e(%rdi)
   9:	55                   	push   %rbp
   a:	29 20                	sub    %esp,(%rax)
   c:	31 31                	xor    %esi,(%rcx)
   e:	2e 32 2e             	cs xor (%rsi),%ch
  11:	30 00                	xor    %al,(%rax)

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 10    	or     %dl,0x10000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
  22:	00 00                	add    %al,(%rax)
  24:	3c 00                	cmp    $0x0,%al
  26:	00 00                	add    %al,(%rax)
  28:	00 00                	add    %al,(%rax)
  2a:	00 00                	add    %al,(%rax)
  2c:	28 00                	sub    %al,(%rax)
  2e:	00 00                	add    %al,(%rax)
  30:	30 00                	xor    %al,(%rax)
  32:	00 00                	add    %al,(%rax)
  34:	00 00                	add    %al,(%rax)
  36:	00 00                	add    %al,(%rax)
  38:	7b 00                	jnp    3a <.eh_frame+0x3a>
  3a:	00 00                	add    %al,(%rax)
  3c:	00 51 0e             	add    %dl,0xe(%rcx)
  3f:	10 86 02 55 0d 06    	adc    %al,0x60d5502(%rsi)
  45:	42 8c 03             	rex.X mov %es,(%rbx)
  48:	44 83 04 02 4a       	rex.R addl $0x4a,(%rdx,%rax,1)
  4d:	c3                   	ret    
  4e:	42 cc                	rex.X int3 
  50:	41 c6                	rex.B (bad) 
  52:	0c 07                	or     $0x7,%al
  54:	08 00                	or     %al,(%rax)
  56:	00 00                	add    %al,(%rax)
  58:	20 00                	and    %al,(%rax)
  5a:	00 00                	add    %al,(%rax)
  5c:	5c                   	pop    %rsp
  5d:	00 00                	add    %al,(%rax)
  5f:	00 00                	add    %al,(%rax)
  61:	00 00                	add    %al,(%rax)
  63:	00 3a                	add    %bh,(%rdx)
  65:	00 00                	add    %al,(%rax)
  67:	00 00                	add    %al,(%rax)
  69:	4b 0e                	rex.WXB (bad) 
  6b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  71:	41 83 03 6a          	addl   $0x6a,(%r11)
  75:	c6 c3 0c             	mov    $0xc,%bl
  78:	07                   	(bad)  
  79:	08 00                	or     %al,(%rax)
  7b:	00 38                	add    %bh,(%rax)
  7d:	00 00                	add    %al,(%rax)
  7f:	00 80 00 00 00 00    	add    %al,0x0(%rax)
  85:	00 00                	add    %al,(%rax)
  87:	00 b6 01 00 00 00    	add    %dh,0x1(%rsi)
  8d:	41 0e                	rex.B (bad) 
  8f:	10 86 02 46 0d 06    	adc    %al,0x60d4602(%rsi)
  95:	42 8f 03             	rex.X pop (%rbx)
  98:	48 8e 04 47          	rex.W mov (%rdi,%rax,2),%es
  9c:	8d 05 8c 06 44 83    	lea    -0x7cbbf974(%rip),%eax        # ffffffff8344072e <Video::TextModePresenter::MoveUp()+0xffffffff8344041e>
  a2:	07                   	(bad)  
  a3:	03 71 01             	add    0x1(%rcx),%esi
  a6:	0a c3                	or     %bl,%al
  a8:	42 cc                	rex.X int3 
  aa:	42 cd 42             	rex.X int $0x42
  ad:	ce                   	(bad)  
  ae:	42 cf                	rex.X iret 
  b0:	41 c6                	rex.B (bad) 
  b2:	0c 07                	or     $0x7,%al
  b4:	08 41 0b             	or     %al,0xb(%rcx)
  b7:	00 10                	add    %dl,(%rax)
  b9:	00 00                	add    %al,(%rax)
  bb:	00 bc 00 00 00 00 00 	add    %bh,0x0(%rax,%rax,1)
  c2:	00 00                	add    %al,(%rax)
  c4:	14 00                	adc    $0x0,%al
  c6:	00 00                	add    %al,(%rax)
  c8:	00 00                	add    %al,(%rax)
  ca:	00 00                	add    %al,(%rax)
  cc:	10 00                	adc    %al,(%rax)
  ce:	00 00                	add    %al,(%rax)
  d0:	d0 00                	rolb   (%rax)
  d2:	00 00                	add    %al,(%rax)
  d4:	00 00                	add    %al,(%rax)
  d6:	00 00                	add    %al,(%rax)
  d8:	2c 00                	sub    $0x0,%al
  da:	00 00                	add    %al,(%rax)
  dc:	00 00                	add    %al,(%rax)
  de:	00 00                	add    %al,(%rax)
  e0:	14 00                	adc    $0x0,%al
  e2:	00 00                	add    %al,(%rax)
  e4:	e4 00                	in     $0x0,%al
  e6:	00 00                	add    %al,(%rax)
  e8:	00 00                	add    %al,(%rax)
  ea:	00 00                	add    %al,(%rax)
  ec:	68 00 00 00 00       	push   $0x0
  f1:	00 00                	add    %al,(%rax)
  f3:	00 00                	add    %al,(%rax)
  f5:	00 00                	add    %al,(%rax)
	...
